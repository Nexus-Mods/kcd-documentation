document.dictionary = [
["CScriptBind_DialogSystem Class","CScriptBind_DialogSystem.html",""],
["GetMemoryUsage","CScriptBind_DialogSystem__GetMemoryUsage@ICrySizer_@const.html","  This is GetMemoryUsage, a member of class CScriptBind_DialogSystem.&#160;"],
["Release","CScriptBind_DialogSystem__Release.html","  This is Release, a member of class CScriptBind_DialogSystem.&#160;"],
["CScriptBind_UIAction Class","CScriptBind_UIAction.html",""],
["CallFunction","CScriptBind_UIAction__CallFunction@IFunctionHandler_@char_@int@char_.html","  ! &#160;"],
["DisableAction","CScriptBind_UIAction__DisableAction@IFunctionHandler_@char_.html","  ! &#160;"],
["EnableAction","CScriptBind_UIAction__EnableAction@IFunctionHandler_@char_.html","  ! &#160;"],
["EndAction","CScriptBind_UIAction__EndAction@IFunctionHandler_@SmartScriptTable@bool@SmartScriptTable.html","  ! &#160;"],
["GetAlpha","CScriptBind_UIAction__GetAlpha@IFunctionHandler_@char_@int@char_.html","  ! &#160;"],
["GetArray","CScriptBind_UIAction__GetArray@IFunctionHandler_@char_@int@char_.html","  ! &#160;"],
["GetMemoryUsage","CScriptBind_UIAction__GetMemoryUsage@ICrySizer_@const.html","  This is GetMemoryUsage, a member of class CScriptBind_UIAction.&#160;"],
["GetPos","CScriptBind_UIAction__GetPos@IFunctionHandler_@char_@int@char_.html","  ! &#160;"],
["GetRotation","CScriptBind_UIAction__GetRotation@IFunctionHandler_@char_@int@char_.html","  ! &#160;"],
["GetScale","CScriptBind_UIAction__GetScale@IFunctionHandler_@char_@int@char_.html","  ! &#160;"],
["GetVariable","CScriptBind_UIAction__GetVariable@IFunctionHandler_@char_@int@char_.html","  ! &#160;"],
["GotoAndPlay","CScriptBind_UIAction__GotoAndPlay@IFunctionHandler_@char_@int@char_@int.html","  ! &#160;"],
["GotoAndPlayFrameName","CScriptBind_UIAction__GotoAndPlayFrameName@IFunctionHandler_@char_@int@char_@char_.html","  ! &#160;"],
["GotoAndStop","CScriptBind_UIAction__GotoAndStop@IFunctionHandler_@char_@int@char_@int.html","  ! &#160;"],
["GotoAndStopFrameName","CScriptBind_UIAction__GotoAndStopFrameName@IFunctionHandler_@char_@int@char_@char_.html","  ! &#160;"],
["HideElement","CScriptBind_UIAction__HideElement@IFunctionHandler_@char_@int.html","  ! &#160;"],
["IsVisible","CScriptBind_UIAction__IsVisible@IFunctionHandler_@char_@int@char_.html","  ! &#160;"],
["RegisterActionListener","CScriptBind_UIAction__RegisterActionListener@IFunctionHandler_@SmartScriptTable@char_@char_@char_.html","  ! &#160;"],
["RegisterElementListener","CScriptBind_UIAction__RegisterElementListener@IFunctionHandler_@SmartScriptTable@char_@int@char_@char_.html","  ! &#160;"],
["RegisterEventSystemListener","CScriptBind_UIAction__RegisterEventSystemListener@IFunctionHandler_@SmartScriptTable@char_@char_@char_.html","  ! &#160;"],
["Release","CScriptBind_UIAction__Release.html","  This is Release, a member of class CScriptBind_UIAction.&#160;"],
["Reload","CScriptBind_UIAction__Reload.html","  IUIModule &#160;"],
["ReloadElement","CScriptBind_UIAction__ReloadElement@IFunctionHandler_@char_@int.html","  ! &#160;"],
["RequestHide","CScriptBind_UIAction__RequestHide@IFunctionHandler_@char_@int.html","  ! &#160;"],
["Reset","CScriptBind_UIAction__Reset.html","  &#160;"],
["SetAlpha","CScriptBind_UIAction__SetAlpha@IFunctionHandler_@char_@int@char_@float.html","  ! &#160;"],
["SetArray","CScriptBind_UIAction__SetArray@IFunctionHandler_@char_@int@char_@SmartScriptTable.html","  ! &#160;"],
["SetPos","CScriptBind_UIAction__SetPos@IFunctionHandler_@char_@int@char_@Vec3.html","  ! &#160;"],
["SetRotation","CScriptBind_UIAction__SetRotation@IFunctionHandler_@char_@int@char_@Vec3.html","  ! &#160;"],
["SetScale","CScriptBind_UIAction__SetScale@IFunctionHandler_@char_@int@char_@Vec3.html","  ! &#160;"],
["SetVariable","CScriptBind_UIAction__SetVariable@IFunctionHandler_@char_@int@char_.html","  ! &#160;"],
["SetVisible","CScriptBind_UIAction__SetVisible@IFunctionHandler_@char_@int@char_@bool.html","  ! &#160;"],
["ShowElement","CScriptBind_UIAction__ShowElement@IFunctionHandler_@char_@int.html","  ! &#160;"],
["StartAction","CScriptBind_UIAction__StartAction@IFunctionHandler_@char_@SmartScriptTable.html","  ! &#160;"],
["UnloadElement","CScriptBind_UIAction__UnloadElement@IFunctionHandler_@char_@int.html","  ! &#160;"],
["UnregisterActionListener","CScriptBind_UIAction__UnregisterActionListener@IFunctionHandler_@SmartScriptTable@char_.html","  ! &#160;"],
["UnregisterElementListener","CScriptBind_UIAction__UnregisterElementListener@IFunctionHandler_@SmartScriptTable@char_.html","  ! &#160;"],
["UnregisterEventSystemListener","CScriptBind_UIAction__UnregisterEventSystemListener@IFunctionHandler_@SmartScriptTable@char_.html","  ! &#160;"],
["CScriptBind_GameToken Class","CScriptBind_GameToken.html",""],
["DumpAllTokens","CScriptBind_GameToken__DumpAllTokens@IFunctionHandler_.html","  ! &#160;"],
["GetMemoryUsage","CScriptBind_GameToken__GetMemoryUsage@ICrySizer_@const.html","  This is GetMemoryUsage, a member of class CScriptBind_GameToken.&#160;"],
["GetToken","CScriptBind_GameToken__GetToken@IFunctionHandler_@char_.html","  ! &#160;"],
["Release","CScriptBind_GameToken__Release.html","  This is Release, a member of class CScriptBind_GameToken.&#160;"],
["SetToken","CScriptBind_GameToken__SetToken@IFunctionHandler_.html","  ! &#160;"],
["CScriptBind_MaterialEffects Class","CScriptBind_MaterialEffects.html",""],
["GetMemoryUsage","CScriptBind_MaterialEffects__GetMemoryUsage@ICrySizer_@const.html","  This is GetMemoryUsage, a member of class CScriptBind_MaterialEffects.&#160;"],
["Release","CScriptBind_MaterialEffects__Release.html","  This is Release, a member of class CScriptBind_MaterialEffects.&#160;"],
["CScriptBind_Network Class","CScriptBind_Network.html",""],
["DelegateAuthority","CScriptBind_Network__DelegateAuthority@IFunctionHandler_@ScriptHandle@int.html","  ! &#160;"],
["Expose","CScriptBind_Network__Expose@IFunctionHandler_.html","  ! &#160;"],
["GetMemoryUsage","CScriptBind_Network__GetMemoryUsage@ICrySizer_@const.html","  This is GetMemoryUsage, a member of class CScriptBind_Network.&#160;"],
["Release","CScriptBind_Network__Release.html","  This is Release, a member of class CScriptBind_Network.&#160;"],
["CScriptBind_GameStatistics Class","CScriptBind_GameStatistics.html",""],
["AddGameElement","CScriptBind_GameStatistics__AddGameElement@IFunctionHandler_.html","  ! &#160;"],
["BindTracker","CScriptBind_GameStatistics__BindTracker@IScriptTable_@char_@IStatsTracker_.html","  ! &#160;"],
["CurrentScope","CScriptBind_GameStatistics__CurrentScope@IFunctionHandler_.html","  ! &#160;"],
["Event","CScriptBind_GameStatistics__Event@IFunctionHandler_.html","  ! &#160;"],
["GetMemoryUsage","CScriptBind_GameStatistics__GetMemoryUsage@ICrySizer_@const.html","  This is GetMemoryUsage, a member of class CScriptBind_GameStatistics.&#160;"],
["PopGameScope","CScriptBind_GameStatistics__PopGameScope@IFunctionHandler_.html","  ! &#160;"],
["PushGameScope","CScriptBind_GameStatistics__PushGameScope@IFunctionHandler_@int.html","  ! &#160;"],
["RemoveGameElement","CScriptBind_GameStatistics__RemoveGameElement@IFunctionHandler_.html","  ! &#160;"],
["StateValue","CScriptBind_GameStatistics__StateValue@IFunctionHandler_.html","  ! &#160;"],
["UnbindTracker","CScriptBind_GameStatistics__UnbindTracker@IScriptTable_@char_@IStatsTracker_.html","  ! &#160;"],
["CScriptBind_Vehicle Class","CScriptBind_Vehicle.html",""],
["AddSeat","CScriptBind_Vehicle__AddSeat@IFunctionHandler_@SmartScriptTable.html","  ! &#160;"],
["AttachTo","CScriptBind_Vehicle__AttachTo@IVehicle_.html","  &#160;"],
["ChangeSeat","CScriptBind_Vehicle__ChangeSeat@IFunctionHandler_@ScriptHandle@int@bool.html","  ! &#160;"],
["Destroy","CScriptBind_Vehicle__Destroy@IFunctionHandler_.html","  ! &#160;"],
["DisableEngine","CScriptBind_Vehicle__DisableEngine@IFunctionHandler_@bool.html","  ! &#160;"],
["EnableMovement","CScriptBind_Vehicle__EnableMovement@IFunctionHandler_@bool.html","  ! &#160;"],
["EnterVehicle","CScriptBind_Vehicle__EnterVehicle@IFunctionHandler_@ScriptHandle@int@bool.html","  ! &#160;"],
["ExitVehicle","CScriptBind_Vehicle__ExitVehicle@IFunctionHandler_@ScriptHandle.html","  ! &#160;"],
["GetComponentDamageRatio","CScriptBind_Vehicle__GetComponentDamageRatio@IFunctionHandler_@char_.html","  ! &#160;"],
["GetHelperDir","CScriptBind_Vehicle__GetHelperDir@IFunctionHandler_@char_@bool.html","  ! &#160;"],
["GetHelperPos","CScriptBind_Vehicle__GetHelperPos@IFunctionHandler_@char_@bool.html","  ! &#160;"],
["GetHelperWorldPos","CScriptBind_Vehicle__GetHelperWorldPos@IFunctionHandler_@char_.html","  ! &#160;"],
["GetMemoryUsage","CScriptBind_Vehicle__GetMemoryUsage@ICrySizer_@const.html","  This is GetMemoryUsage, a member of class CScriptBind_Vehicle.&#160;"],
["GetSeatForPassenger","CScriptBind_Vehicle__GetSeatForPassenger@IFunctionHandler_@ScriptHandle.html","  ! &#160;"],
["GetVehicle","CScriptBind_Vehicle__GetVehicle@IFunctionHandler_.html","  ! &#160;"],
["HasHelper","CScriptBind_Vehicle__HasHelper@IFunctionHandler_@char_.html","  ! &#160;"],
["IsDestroyed","CScriptBind_Vehicle__IsDestroyed@IFunctionHandler_.html","  ! &#160;"],
["IsInsideRadius","CScriptBind_Vehicle__IsInsideRadius@IFunctionHandler_@Vec3@float.html","  ! &#160;"],
["IsUsable","CScriptBind_Vehicle__IsUsable@IFunctionHandler_@ScriptHandle.html","  ! &#160;"],
["MultiplyWithWorldTM","CScriptBind_Vehicle__MultiplyWithWorldTM@IFunctionHandler_@Vec3.html","  ! &#160;"],
["OnHit","CScriptBind_Vehicle__OnHit@IFunctionHandler_@ScriptHandle@ScriptHandle@float@Vec3@float@int@bool.html","  ! &#160;"],
["OnSpawnComplete","CScriptBind_Vehicle__OnSpawnComplete@IFunctionHandler_.html","  ! &#160;"],
["OnUsed","CScriptBind_Vehicle__OnUsed@IFunctionHandler_@ScriptHandle@int.html","  ! &#160;"],
["ProcessPassengerDamage","CScriptBind_Vehicle__ProcessPassengerDamage@IFunctionHandler_@ScriptHandle@float@float@int@bool.html","  ! &#160;"],
["Release","CScriptBind_Vehicle__Release.html","  This is Release, a member of class CScriptBind_Vehicle.&#160;"],
["Reset","CScriptBind_Vehicle__Reset@IFunctionHandler_.html","  ! &#160;"],
["ResetSlotGeometry","CScriptBind_Vehicle__ResetSlotGeometry@IFunctionHandler_@int@char_@char_.html","  ! &#160;"],
["CScriptBind_VehicleSeat Class","CScriptBind_VehicleSeat.html",""],
["AttachTo","CScriptBind_VehicleSeat__AttachTo@IVehicle_@TVehicleSeatId.html","  &#160;"],
["GetMemoryUsage","CScriptBind_VehicleSeat__GetMemoryUsage@ICrySizer_@const.html","  This is GetMemoryUsage, a member of class CScriptBind_VehicleSeat.&#160;"],
["GetPassengerId","CScriptBind_VehicleSeat__GetPassengerId@IFunctionHandler_.html","  ! &#160;"],
["GetVehicleSeat","CScriptBind_VehicleSeat__GetVehicleSeat@IFunctionHandler_.html","  ! &#160;"],
["GetWeaponCount","CScriptBind_VehicleSeat__GetWeaponCount@IFunctionHandler_.html","  ! &#160;"],
["GetWeaponId","CScriptBind_VehicleSeat__GetWeaponId@IFunctionHandler_@int.html","  ! &#160;"],
["IsDriver","CScriptBind_VehicleSeat__IsDriver@IFunctionHandler_.html","  ! &#160;"],
["IsFree","CScriptBind_VehicleSeat__IsFree@IFunctionHandler_@ScriptHandle.html","  ! &#160;"],
["IsGunner","CScriptBind_VehicleSeat__IsGunner@IFunctionHandler_.html","  ! &#160;"],
["Release","CScriptBind_VehicleSeat__Release.html","  This is Release, a member of class CScriptBind_VehicleSeat.&#160;"],
["Reset","CScriptBind_VehicleSeat__Reset@IFunctionHandler_.html","  ! &#160;"],
["SetAIWeapon","CScriptBind_VehicleSeat__SetAIWeapon@IFunctionHandler_@ScriptHandle.html","  ! &#160;"],
["CScriptBind_Action Class","CScriptBind_Action.html",""],
["ActivateEffect","CScriptBind_Action__ActivateEffect@IFunctionHandler_@char_.html","  ! &#160;"],
["ActivateExtensionForGameObject","CScriptBind_Action__ActivateExtensionForGameObject@IFunctionHandler_@ScriptHandle@char_@bool.html","  ! &#160;"],
["AddAngleSignal","CScriptBind_Action__AddAngleSignal@IFunctionHandler_@ScriptHandle@float@float@char_.html","  ! &#160;"],
["AddRangeSignal","CScriptBind_Action__AddRangeSignal@IFunctionHandler_@ScriptHandle@float@float@char_.html","  ! &#160;"],
["AddTargetRangeSignal","CScriptBind_Action__AddTargetRangeSignal@IFunctionHandler_@ScriptHandle@ScriptHandle@float@float@char_.html","  ! &#160;"],
["BanPlayer","CScriptBind_Action__BanPlayer@IFunctionHandler_@ScriptHandle@char_.html","  ! &#160;"],
["BindGameObjectToNetwork","CScriptBind_Action__BindGameObjectToNetwork@IFunctionHandler_@ScriptHandle.html","  ! &#160;"],
["CacheItemGeometry","CScriptBind_Action__CacheItemGeometry@IFunctionHandler_@char_.html","  ! &#160;"],
["CacheItemSound","CScriptBind_Action__CacheItemSound@IFunctionHandler_@char_.html","  ! &#160;"],
["ClearEntityTags","CScriptBind_Action__ClearEntityTags@IFunctionHandler_@ScriptHandle.html","  ! &#160;"],
["ClearStaticTag","CScriptBind_Action__ClearStaticTag@IFunctionHandler_@ScriptHandle@char_.html","  ! &#160;"],
["ConnectToServer","CScriptBind_Action__ConnectToServer@IFunctionHandler_@char_.html","  ! &#160;"],
["CreateGameObjectForEntity","CScriptBind_Action__CreateGameObjectForEntity@IFunctionHandler_@ScriptHandle.html","  ! &#160;"],
["DestroyRangeSignaling","CScriptBind_Action__DestroyRangeSignaling@IFunctionHandler_@ScriptHandle.html","  ! &#160;"],
["DisableSignalTimer","CScriptBind_Action__DisableSignalTimer@IFunctionHandler_@ScriptHandle@char_.html","  ! &#160;"],
["DontSyncPhysics","CScriptBind_Action__DontSyncPhysics@IFunctionHandler_@ScriptHandle.html","  ! &#160;"],
["EnableRangeSignaling","CScriptBind_Action__EnableRangeSignaling@IFunctionHandler_@ScriptHandle@bool.html","  ! &#160;"],
["EnableSignalTimer","CScriptBind_Action__EnableSignalTimer@IFunctionHandler_@ScriptHandle@char_.html","  ! &#160;"],
["ForceGameObjectUpdate","CScriptBind_Action__ForceGameObjectUpdate@IFunctionHandler_@ScriptHandle@bool.html","  ! &#160;"],
["GetClassName","CScriptBind_Action__GetClassName@IFunctionHandler_@int.html","  ! &#160;"],
["GetMemoryUsage","CScriptBind_Action__GetMemoryUsage@ICrySizer_@const.html","  This is GetMemoryUsage, a member of class CScriptBind_Action.&#160;"],
["GetPlayerList","CScriptBind_Action__GetPlayerList@IFunctionHandler_.html","  ! &#160;"],
["GetServer","CScriptBind_Action__GetServer@IFunctionHandler_@int.html","  ! &#160;"],
["GetServerTime","CScriptBind_Action__GetServerTime@IFunctionHandler_.html","  ! &#160;"],
["GetWaterInfo","CScriptBind_Action__GetWaterInfo@IFunctionHandler_@Vec3.html","  ! &#160;"],
["HasAI","CScriptBind_Action__HasAI@IFunctionHandler_@ScriptHandle.html","  ! &#160;"],
["IsChannelOnHold","CScriptBind_Action__IsChannelOnHold@IFunctionHandler_@int.html","  ! &#160;"],
["IsChannelSpecial","CScriptBind_Action__IsChannelSpecial@IFunctionHandler_.html","  ! &#160;"],
["IsClient","CScriptBind_Action__IsClient@IFunctionHandler_.html","  ! &#160;"],
["IsGameObjectProbablyVisible","CScriptBind_Action__IsGameObjectProbablyVisible@IFunctionHandler_@ScriptHandle.html","  ! &#160;"],
["IsGameStarted","CScriptBind_Action__IsGameStarted@IFunctionHandler_.html","  ! &#160;"],
["IsImmersivenessEnabled","CScriptBind_Action__IsImmersivenessEnabled@IFunctionHandler_.html","  ! &#160;"],
["IsRMIServer","CScriptBind_Action__IsRMIServer@IFunctionHandler_.html","  ! &#160;"],
["IsServer","CScriptBind_Action__IsServer@IFunctionHandler_.html","  ! &#160;"],
["LoadXML","CScriptBind_Action__LoadXML@IFunctionHandler_@char_@char_.html","  ! &#160;"],
["PauseGame","CScriptBind_Action__PauseGame@IFunctionHandler_@bool.html","  ! &#160;"],
["Persistant2DText","CScriptBind_Action__Persistant2DText@IFunctionHandler_@char_@float@Vec3@char_@float.html","  ! &#160;"],
["PersistantArrow","CScriptBind_Action__PersistantArrow@IFunctionHandler_@Vec3@float@Vec3@Vec3@char_@float.html","  ! &#160;"],
["PersistantEntityTag","CScriptBind_Action__PersistantEntityTag@IFunctionHandler_@ScriptHandle@char_.html","  ! &#160;"],
["PersistantLine","CScriptBind_Action__PersistantLine@IFunctionHandler_@Vec3@Vec3@Vec3@char_@float.html","  ! &#160;"],
["PersistantSphere","CScriptBind_Action__PersistantSphere@IFunctionHandler_@Vec3@float@Vec3@char_@float.html","  ! &#160;"],
["PreLoadADB","CScriptBind_Action__PreLoadADB@IFunctionHandler_@char_.html","  ! &#160;"],
["RefreshPings","CScriptBind_Action__RefreshPings@IFunctionHandler_.html","  ! &#160;"],
["RegisterWithAI","CScriptBind_Action__RegisterWithAI@IFunctionHandler_.html","  ! &#160;"],
["Release","CScriptBind_Action__Release.html","  This is Release, a member of class CScriptBind_Action.&#160;"],
["ResetRangeSignaling","CScriptBind_Action__ResetRangeSignaling@IFunctionHandler_@ScriptHandle.html","  ! &#160;"],
["ResetSignalTimer","CScriptBind_Action__ResetSignalTimer@IFunctionHandler_@ScriptHandle@char_.html","  ! &#160;"],
["ResetToNormalCamera","CScriptBind_Action__ResetToNormalCamera@IFunctionHandler_.html","  ! &#160;"],
["SaveXML","CScriptBind_Action__SaveXML@IFunctionHandler_@char_@char_@SmartScriptTable.html","  ! &#160;"],
["SendGameplayEvent","CScriptBind_Action__SendGameplayEvent@IFunctionHandler_@ScriptHandle@int.html","  ! &#160;"],
["SetAimQueryMode","CScriptBind_Action__SetAimQueryMode@IFunctionHandler_@ScriptHandle@int.html","  ! &#160;"],
["SetNetworkParent","CScriptBind_Action__SetNetworkParent@IFunctionHandler_@ScriptHandle@ScriptHandle.html","  ! &#160;"],
["SetSignalTimerRate","CScriptBind_Action__SetSignalTimerRate@IFunctionHandler_@ScriptHandle@char_@float@float.html","  ! &#160;"],
["SetViewCamera","CScriptBind_Action__SetViewCamera@IFunctionHandler_.html","  ! &#160;"],
["SetViewCameraByAngles","CScriptBind_Action__SetViewCameraByAngles@IFunctionHandler_.html","  ! &#160;"],
["CScriptBind_ActionMapManager Class","CScriptBind_ActionMapManager.html",""],
["EnableActionFilter","CScriptBind_ActionMapManager__EnableActionFilter@IFunctionHandler_@char_@bool.html","  ! &#160;"],
["EnableActionMap","CScriptBind_ActionMapManager__EnableActionMap@IFunctionHandler_@char_@bool.html","  ! &#160;"],
["EnableActionMapManager","CScriptBind_ActionMapManager__EnableActionMapManager@IFunctionHandler_@bool@bool.html","  ! &#160;"],
["GetDefaultActionEntity","CScriptBind_ActionMapManager__GetDefaultActionEntity@IFunctionHandler_.html","  ! &#160;"],
["GetMemoryUsage","CScriptBind_ActionMapManager__GetMemoryUsage@ICrySizer_@const.html","  WH:JK&#160;"],
["InitActionMaps","CScriptBind_ActionMapManager__InitActionMaps@IFunctionHandler_@char_.html","  ! &#160;"],
["IsFilterEnabled","CScriptBind_ActionMapManager__IsFilterEnabled@IFunctionHandler_@char_.html","  ! &#160;"],
["LoadControllerLayoutFile","CScriptBind_ActionMapManager__LoadControllerLayoutFile@IFunctionHandler_@char_.html","  ! &#160;"],
["LoadFromXML","CScriptBind_ActionMapManager__LoadFromXML@IFunctionHandler_@char_.html","  ! &#160;"],
["OnLoadGame","CScriptBind_ActionMapManager__OnLoadGame.html","  WH:JK WH:JK&#160;"],
["Release","CScriptBind_ActionMapManager__Release.html","  This is Release, a member of class CScriptBind_ActionMapManager.&#160;"],
["SetActionListener","CScriptBind_ActionMapManager__SetActionListener@IFunctionHandler_@char_@ScriptHandle.html","  WH::PH WH::PH&#160;"],
["SetDefaultActionEntity","CScriptBind_ActionMapManager__SetDefaultActionEntity@IFunctionHandler_@EntityId@bool.html","  ! &#160;"],
["CScriptBind_ActorSystem Class","CScriptBind_ActorSystem.html",""],
["CreateActor","CScriptBind_ActorSystem__CreateActor@IFunctionHandler_@int@SmartScriptTable.html","  ! &#160;"],
["GetMemoryUsage","CScriptBind_ActorSystem__GetMemoryUsage@ICrySizer_@const.html","  This is GetMemoryUsage, a member of class CScriptBind_ActorSystem.&#160;"],
["Release","CScriptBind_ActorSystem__Release.html","  This is Release, a member of class CScriptBind_ActorSystem.&#160;"],
["CScriptBind_Inventory Class","CScriptBind_Inventory.html",""],
["AttachTo","CScriptBind_Inventory__AttachTo@CInventory_.html","  &#160;"],
["Clear","CScriptBind_Inventory__Clear@IFunctionHandler_.html","  ! &#160;"],
["Destroy","CScriptBind_Inventory__Destroy@IFunctionHandler_.html","  ! &#160;"],
["DetachFrom","CScriptBind_Inventory__DetachFrom@CInventory_.html","  &#160;"],
["Dump","CScriptBind_Inventory__Dump@IFunctionHandler_.html","  ! &#160;"],
["GetAmmoCapacity","CScriptBind_Inventory__GetAmmoCapacity@IFunctionHandler_@char_.html","  ! &#160;"],
["GetAmmoCount","CScriptBind_Inventory__GetAmmoCount@IFunctionHandler_@char_.html","  ! &#160;"],
["GetCurrentItem","CScriptBind_Inventory__GetCurrentItem@IFunctionHandler_.html","  ! &#160;"],
["GetCurrentItemId","CScriptBind_Inventory__GetCurrentItemId@IFunctionHandler_.html","  ! &#160;"],
["GetGrenadeWeaponByClass","CScriptBind_Inventory__GetGrenadeWeaponByClass@IFunctionHandler_@char_.html","  ! &#160;"],
["GetItemByClass","CScriptBind_Inventory__GetItemByClass@IFunctionHandler_@char_.html","  ! &#160;"],
["GetMemoryUsage","CScriptBind_Inventory__GetMemoryUsage@ICrySizer_@const.html","  This is GetMemoryUsage, a member of class CScriptBind_Inventory.&#160;"],
["HasAccessory","CScriptBind_Inventory__HasAccessory@IFunctionHandler_@char_.html","  ! &#160;"],
["Release","CScriptBind_Inventory__Release.html","  This is Release, a member of class CScriptBind_Inventory.&#160;"],
["SetAmmoCount","CScriptBind_Inventory__SetAmmoCount@IFunctionHandler_@char_@int.html","  ! &#160;"],
["CScriptBind_ItemSystem Class","CScriptBind_ItemSystem.html",""],
["GetMemoryUsage","CScriptBind_ItemSystem__GetMemoryUsage@ICrySizer_@const.html","  This is GetMemoryUsage, a member of class CScriptBind_ItemSystem.&#160;"],
["GetPackItemByIndex","CScriptBind_ItemSystem__GetPackItemByIndex@IFunctionHandler_@char_@int.html","  ! &#160;"],
["GetPackNumItems","CScriptBind_ItemSystem__GetPackNumItems@IFunctionHandler_@char_.html","  ! &#160;"],
["GetPackPrimaryItem","CScriptBind_ItemSystem__GetPackPrimaryItem@IFunctionHandler_@char_.html","  ! &#160;"],
["GiveItem","CScriptBind_ItemSystem__GiveItem@IFunctionHandler_@char_.html","  ! &#160;"],
["GiveItemPack","CScriptBind_ItemSystem__GiveItemPack@IFunctionHandler_@ScriptHandle@char_.html","  ! &#160;"],
["Release","CScriptBind_ItemSystem__Release.html","  This is Release, a member of class CScriptBind_ItemSystem.&#160;"],
["Reset","CScriptBind_ItemSystem__Reset@IFunctionHandler_.html","  ! &#160;"],
["SerializePlayerLTLInfo","CScriptBind_ItemSystem__SerializePlayerLTLInfo@IFunctionHandler_@bool.html","  ! &#160;"],
["SetActorItem","CScriptBind_ItemSystem__SetActorItem@IFunctionHandler_@ScriptHandle@ScriptHandle@bool.html","  ! &#160;"],
["SetActorItemByName","CScriptBind_ItemSystem__SetActorItemByName@IFunctionHandler_@ScriptHandle@char_@bool.html","  ! &#160;"],
["CScriptBind_VehicleSystem Class","CScriptBind_VehicleSystem.html",""],
["GetMemoryUsage","CScriptBind_VehicleSystem__GetMemoryUsage@ICrySizer_@const.html","  This is GetMemoryUsage, a member of class CScriptBind_VehicleSystem.&#160;"],
["GetOptionalScript","CScriptBind_VehicleSystem__GetOptionalScript@IFunctionHandler_@char_.html","  ! &#160;"],
["GetVehicleImplementations","CScriptBind_VehicleSystem__GetVehicleImplementations@IFunctionHandler_.html","  ! &#160;"],
["Release","CScriptBind_VehicleSystem__Release.html","  This is Release, a member of class CScriptBind_VehicleSystem.&#160;"],
["ReloadSystem","CScriptBind_VehicleSystem__ReloadSystem@IFunctionHandler_.html","  ! &#160;"],
["SetTpvDistance","CScriptBind_VehicleSystem__SetTpvDistance@IFunctionHandler_@float.html","  ! &#160;"],
["SetTpvHeight","CScriptBind_VehicleSystem__SetTpvHeight@IFunctionHandler_@float.html","  ! &#160;"],
["CScriptBind_AI Class","CScriptBind_AI.html",""],
["CreateQueryFromTacticalSpec","CScriptBind_AI__CreateQueryFromTacticalSpec@SmartScriptTable.html","  This is CreateQueryFromTacticalSpec, a member of class CScriptBind_AI.&#160;"],
["GetEntityFromParam","CScriptBind_AI__GetEntityFromParam@IFunctionHandler_@int.html","  Fetch entity pointer from script parameter Fetch entity pointer from script parameter&#160;"],
["GetEntityIdFromParam","CScriptBind_AI__GetEntityIdFromParam@IFunctionHandler_@int.html","  Fetch entity ID from script parameter Fetch entity ID from script parameter&#160;"],
["GetGroupSpatialProperties","CScriptBind_AI__GetGroupSpatialProperties@IAIObject_@float_@Vec3_@Vec3_@Vec3_@Vec3_.html","  &#160;"],
["GetSignalExtraData","CScriptBind_AI__GetSignalExtraData@IFunctionHandler_@int@IAISignalExtraData__.html","  This is GetSignalExtraData, a member of class CScriptBind_AI.&#160;"],
["RayWorldIntersectionWrapper","CScriptBind_AI__RayWorldIntersectionWrapper@Vec3@Vec3@int@unsigned_int@ray_hit_@int@IPhysicalEntity__@int@void_@int.html","  wrapper, to make it use tick-counter&#160;"],
["SetLastOpResult","CScriptBind_AI__SetLastOpResult@IFunctionHandler_@ScriptHandle@ScriptHandle.html","  This is SetLastOpResult, a member of class CScriptBind_AI.&#160;"],
["CScriptBind_AI::SetPFProperties (AgentMovementAbility&amp;, EAIPathType)","CScriptBind_AI__SetPFProperties@AgentMovementAbility_@EAIPathType@const.html",""],
["CScriptBind_AI::SetPFProperties (AgentMovementAbility&amp;, string&amp;)","CScriptBind_AI__SetPFProperties@AgentMovementAbility_@string_@const.html",""],
["CScriptBind_AI::SetPFProperties (IFunctionHandler*)","CScriptBind_AI__SetPFProperties@IFunctionHandler_.html",""],
["SetPFProperties","!!OVERLOADED_SetPFProperties_CScriptBind_AI.html","  This is the overview for the SetPFProperties method overload.&#160;"],
["AbortAction","CScriptBind_AI__AbortAction@IFunctionHandler_.html","  ! &#160;"],
["AddAggressiveTarget","CScriptBind_AI__AddAggressiveTarget@IFunctionHandler_.html","  ! &#160;"],
["AddCombatClass","CScriptBind_AI__AddCombatClass@IFunctionHandler_.html","  ! Creates new combat class. &#160;"],
["AddCoverEntity","CScriptBind_AI__AddCoverEntity@IFunctionHandler_@ScriptHandle.html","  This is AddCoverEntity, a member of class CScriptBind_AI.&#160;"],
["AddFormationPoint","CScriptBind_AI__AddFormationPoint@IFunctionHandler_.html","  ! &#160;"],
["AddFormationPointFixed","CScriptBind_AI__AddFormationPointFixed@IFunctionHandler_.html","  ! &#160;"],
["AddPatternBranch","CScriptBind_AI__AddPatternBranch@IFunctionHandler_.html","  ! &#160;"],
["AddPatternNode","CScriptBind_AI__AddPatternNode@IFunctionHandler_.html","  ! &#160;"],
["AddPersonallyHostile","CScriptBind_AI__AddPersonallyHostile@IFunctionHandler_@ScriptHandle@ScriptHandle.html","  ! &#160;"],
["AgentLookAtPos","CScriptBind_AI__AgentLookAtPos@IFunctionHandler_.html","  ! &#160;"],
["AllowLowerBodyToTurn","CScriptBind_AI__AllowLowerBodyToTurn@IFunctionHandler_@ScriptHandle@bool.html","  ! &#160;"],
["Animation","CScriptBind_AI__Animation@IFunctionHandler_.html","  &#160;"],
["AssignPathTypeToSOUser","CScriptBind_AI__AssignPathTypeToSOUser@IFunctionHandler_.html","  This is AssignPathTypeToSOUser, a member of class CScriptBind_AI.&#160;"],
["CScriptBind_AI::AssignPFPropertiesToPathType (IFunctionHandler*)","CScriptBind_AI__AssignPFPropertiesToPathType@IFunctionHandler_.html",""],
["CScriptBind_AI::AssignPFPropertiesToPathType (string&amp;, AgentPathfindingProperties&amp;)","CScriptBind_AI__AssignPFPropertiesToPathType@string_@AgentPathfindingProperties_.html",""],
["AssignPFPropertiesToPathType","!!OVERLOADED_AssignPFPropertiesToPathType_CScriptBind_AI.html","  This is the overview for the AssignPFPropertiesToPathType method overload.&#160;"],
["AutoDisable","CScriptBind_AI__AutoDisable@IFunctionHandler_.html","  AutoDisable&#160;"],
["BeginGoalPipe","CScriptBind_AI__BeginGoalPipe@IFunctionHandler_.html","  ! &#160;"],
["BeginGroup","CScriptBind_AI__BeginGroup@IFunctionHandler_.html","  ! &#160;"],
["BeginTrackPattern","CScriptBind_AI__BeginTrackPattern@IFunctionHandler_.html","  ! &#160;"],
["BehaviorEvent","CScriptBind_AI__BehaviorEvent@IFunctionHandler_.html","  This is BehaviorEvent, a member of class CScriptBind_AI.&#160;"],
["BreakEvent","CScriptBind_AI__BreakEvent@IFunctionHandler_@ScriptHandle@Vec3@float.html","  This is BreakEvent, a member of class CScriptBind_AI.&#160;"],
["CanFireInStance","CScriptBind_AI__CanFireInStance@IFunctionHandler_.html","  ! &#160;"],
["CanMelee","CScriptBind_AI__CanMelee@IFunctionHandler_.html","  ! &#160;"],
["CanMoveStraightToPoint","CScriptBind_AI__CanMoveStraightToPoint@IFunctionHandler_.html","  ! &#160;"],
["ChangeFormation","CScriptBind_AI__ChangeFormation@IFunctionHandler_.html","  ! &#160;"],
["ChangeMovementAbility","CScriptBind_AI__ChangeMovementAbility@IFunctionHandler_.html","  ! &#160;"],
["ChangeParameter","CScriptBind_AI__ChangeParameter@IFunctionHandler_.html","  ! &#160;"],
["CheckForFriendlyAgentsAroundPoint","CScriptBind_AI__CheckForFriendlyAgentsAroundPoint@IFunctionHandler_@ScriptHandle@Vec3@float.html","  ! &#160;"],
["CheckMeleeDamage","CScriptBind_AI__CheckMeleeDamage@IFunctionHandler_.html","  ! &#160;"],
["CheckVehicleColision","CScriptBind_AI__CheckVehicleColision@IFunctionHandler_.html","  &#160;"],
["ClearAnimationTag","CScriptBind_AI__ClearAnimationTag@IFunctionHandler_@ScriptHandle@char_.html","  ! &#160;"],
["ClearForReload","CScriptBind_AI__ClearForReload@IFunctionHandler_.html","  ! &#160;"],
["ClearMovementContext","CScriptBind_AI__ClearMovementContext@IFunctionHandler_@ScriptHandle@int.html","  ! &#160;"],
["ClearPotentialTargets","CScriptBind_AI__ClearPotentialTargets@IFunctionHandler_.html","  ! &#160;"],
["ClearTempTarget","CScriptBind_AI__ClearTempTarget@IFunctionHandler_.html","  ! &#160;"],
["ConstrainPointInsideGenericShape","CScriptBind_AI__ConstrainPointInsideGenericShape@IFunctionHandler_.html","  ! &#160;"],
["CreateFormation","CScriptBind_AI__CreateFormation@IFunctionHandler_.html","  ! &#160;"],
["CreateGoalPipe","CScriptBind_AI__CreateGoalPipe@IFunctionHandler_.html","  ! &#160;"],
["CreateGroupFormation","CScriptBind_AI__CreateGroupFormation@IFunctionHandler_.html","  ! &#160;"],
["CreateStimulusEvent","CScriptBind_AI__CreateStimulusEvent@IFunctionHandler_@ScriptHandle@ScriptHandle@char_@SmartScriptTable.html","  ! &#160;"],
["CreateStimulusEventInRange","CScriptBind_AI__CreateStimulusEventInRange@IFunctionHandler_@ScriptHandle@char_@SmartScriptTable.html","  This is CreateStimulusEventInRange, a member of class CScriptBind_AI.&#160;"],
["CreateTempGenericShapeBox","CScriptBind_AI__CreateTempGenericShapeBox@IFunctionHandler_.html","  ! &#160;"],
["DebugReportHitDamage","CScriptBind_AI__DebugReportHitDamage@IFunctionHandler_.html","  ! &#160;"],
["DestroyAllTPSQueries","CScriptBind_AI__DestroyAllTPSQueries@IFunctionHandler_.html","  ! &#160;"],
["DistanceToGenericShape","CScriptBind_AI__DistanceToGenericShape@IFunctionHandler_.html","  ! &#160;"],
["DropTarget","CScriptBind_AI__DropTarget@IFunctionHandler_.html","  ! &#160;"],
["EnableCoverFire","CScriptBind_AI__EnableCoverFire@IFunctionHandler_.html","  ! &#160;"],
["EnableFire","CScriptBind_AI__EnableFire@IFunctionHandler_.html","  ! &#160;"],
["EnableUpdateLookTarget","CScriptBind_AI__EnableUpdateLookTarget@IFunctionHandler_@ScriptHandle@bool.html","  ! &#160;"],
["EnableWeaponAccessory","CScriptBind_AI__EnableWeaponAccessory@IFunctionHandler_.html","  ! &#160;"],
["EndGoalPipe","CScriptBind_AI__EndGoalPipe@IFunctionHandler_.html","  ! &#160;"],
["EndGroup","CScriptBind_AI__EndGroup@IFunctionHandler_.html","  ! &#160;"],
["EndTrackPattern","CScriptBind_AI__EndTrackPattern@IFunctionHandler_.html","  ! &#160;"],
["Error","CScriptBind_AI__Error@IFunctionHandler_.html","  ! &#160;"],
["EvalHidespot","CScriptBind_AI__EvalHidespot@IFunctionHandler_.html","  &#160;"],
["EvalPeek","CScriptBind_AI__EvalPeek@IFunctionHandler_.html","  ! &#160;"],
["Event","CScriptBind_AI__Event@IFunctionHandler_.html","  &#160;"],
["ExecuteAction","CScriptBind_AI__ExecuteAction@IFunctionHandler_.html","  ! &#160;"],
["FindObjectOfType","CScriptBind_AI__FindObjectOfType@IFunctionHandler_.html","  ! &#160;"],
["FindStandbySpotInShape","CScriptBind_AI__FindStandbySpotInShape@IFunctionHandler_.html","  ! &#160;"],
["FindStandbySpotInSphere","CScriptBind_AI__FindStandbySpotInSphere@IFunctionHandler_.html","  ! &#160;"],
["FreeSignal","CScriptBind_AI__FreeSignal@IFunctionHandler_.html","  ! &#160;"],
["GetAIObjectPosition","CScriptBind_AI__GetAIObjectPosition@IFunctionHandler_.html","  ! &#160;"],
["GetAlertness","CScriptBind_AI__GetAlertness@IFunctionHandler_.html","  &#160;"],
["GetAnchor","CScriptBind_AI__GetAnchor@IFunctionHandler_.html","  ! &#160;"],
["GetAttentionTargetAIType","CScriptBind_AI__GetAttentionTargetAIType@IFunctionHandler_.html","  ! &#160;"],
["GetAttentionTargetDirection","CScriptBind_AI__GetAttentionTargetDirection@IFunctionHandler_.html","  ! &#160;"],
["GetAttentionTargetDistance","CScriptBind_AI__GetAttentionTargetDistance@IFunctionHandler_.html","  ! &#160;"],
["GetAttentionTargetEntity","CScriptBind_AI__GetAttentionTargetEntity@IFunctionHandler_@ScriptHandle.html","  ! &#160;"],
["GetAttentionTargetOf","CScriptBind_AI__GetAttentionTargetOf@IFunctionHandler_.html","  ! &#160;"],
["GetAttentionTargetPosition","CScriptBind_AI__GetAttentionTargetPosition@IFunctionHandler_.html","  ! &#160;"],
["GetAttentionTargetThreat","CScriptBind_AI__GetAttentionTargetThreat@IFunctionHandler_@ScriptHandle.html","  ! &#160;"],
["GetAttentionTargetType","CScriptBind_AI__GetAttentionTargetType@IFunctionHandler_.html","  ! &#160;"],
["GetAttentionTargetViewDirection","CScriptBind_AI__GetAttentionTargetViewDirection@IFunctionHandler_.html","  ! &#160;"],
["GetBeaconPosition","CScriptBind_AI__GetBeaconPosition@IFunctionHandler_.html","  ! &#160;"],
["GetBehaviorBlackBoard","CScriptBind_AI__GetBehaviorBlackBoard@IFunctionHandler_.html","  ! &#160;"],
["GetBehaviorVariable","CScriptBind_AI__GetBehaviorVariable@IFunctionHandler_@ScriptHandle@char_.html","  ! &#160;"],
["GetBiasedDirection","CScriptBind_AI__GetBiasedDirection@IFunctionHandler_.html","  ! &#160;"],
["GetCurrentHideAnchor","CScriptBind_AI__GetCurrentHideAnchor@IFunctionHandler_.html","  ! &#160;"],
["GetDirectAnchorPos","CScriptBind_AI__GetDirectAnchorPos@IFunctionHandler_.html","  ! &#160;"],
["GetDirLabelToPoint","CScriptBind_AI__GetDirLabelToPoint@IFunctionHandler_.html","  ! &#160;"],
["GetDistanceAlongPath","CScriptBind_AI__GetDistanceAlongPath@IFunctionHandler_.html","  ! &#160;"],
["GetDistanceToClosestGroupMember","CScriptBind_AI__GetDistanceToClosestGroupMember@IFunctionHandler_@ScriptHandle.html","  ! &#160;"],
["GetEnclosingGenericShapeOfType","CScriptBind_AI__GetEnclosingGenericShapeOfType@IFunctionHandler_.html","  ! &#160;"],
["GetEnclosingSpace","CScriptBind_AI__GetEnclosingSpace@IFunctionHandler_.html","  !  &#160;"],
["GetExtraPriority","CScriptBind_AI__GetExtraPriority@IFunctionHandler_.html","  ! &#160;"],
["GetFactionOf","CScriptBind_AI__GetFactionOf@IFunctionHandler_@ScriptHandle.html","  ! &#160;"],
["GetFlyingVehicleFlockingPos","CScriptBind_AI__GetFlyingVehicleFlockingPos@IFunctionHandler_.html","  &#160;"],
["GetFormationLookingPoint","CScriptBind_AI__GetFormationLookingPoint@IFunctionHandler_.html","  ! &#160;"],
["GetFormationPointClass","CScriptBind_AI__GetFormationPointClass@IFunctionHandler_.html","  ! &#160;"],
["GetFormationPointPosition","CScriptBind_AI__GetFormationPointPosition@IFunctionHandler_.html","  ! &#160;"],
["GetFormationPosition","CScriptBind_AI__GetFormationPosition@IFunctionHandler_.html","  ! &#160;"],
["GetForwardDir","CScriptBind_AI__GetForwardDir@IFunctionHandler_.html","  Attention Target / perception related functions &#160;"],
["GetGroupAlertness","CScriptBind_AI__GetGroupAlertness@IFunctionHandler_.html","  &#160;"],
["GetGroupAveragePosition","CScriptBind_AI__GetGroupAveragePosition@IFunctionHandler_.html","  ! &#160;"],
["GetGroupCount","CScriptBind_AI__GetGroupCount@IFunctionHandler_.html","  ! &#160;"],
["GetGroupMember","CScriptBind_AI__GetGroupMember@IFunctionHandler_.html","  ! &#160;"],
["GetGroupOf","CScriptBind_AI__GetGroupOf@IFunctionHandler_.html","  ! &#160;"],
["GetGroupScopeUserCount","CScriptBind_AI__GetGroupScopeUserCount@IFunctionHandler_@ScriptHandle@char_.html","  ! &#160;"],
["GetGroupScriptTable","CScriptBind_AI__GetGroupScriptTable@IFunctionHandler_@int.html","  ! &#160;"],
["GetGroupTarget","CScriptBind_AI__GetGroupTarget@IFunctionHandler_.html","  ! &#160;"],
["GetGroupTargetCount","CScriptBind_AI__GetGroupTargetCount@IFunctionHandler_.html","  ! &#160;"],
["GetGroupTargetEntity","CScriptBind_AI__GetGroupTargetEntity@IFunctionHandler_@int.html","  ! &#160;"],
["GetGroupTargetThreat","CScriptBind_AI__GetGroupTargetThreat@IFunctionHandler_@int.html","  ! &#160;"],
["GetGroupTargetType","CScriptBind_AI__GetGroupTargetType@IFunctionHandler_@int.html","  ! &#160;"],
["GetHeliAdvancePoint","CScriptBind_AI__GetHeliAdvancePoint@IFunctionHandler_.html","  Helicopter combat, should be merged with GetAlienApproachParams &#160;"],
["GetLastUsedSmartObject","CScriptBind_AI__GetLastUsedSmartObject@IFunctionHandler_.html","  ! &#160;"],
["GetLeader","CScriptBind_AI__GetLeader@IFunctionHandler_.html","  ! &#160;"],
["GetMemoryFireType","CScriptBind_AI__GetMemoryFireType@IFunctionHandler_.html","  ! &#160;"],
["GetNavigationType","CScriptBind_AI__GetNavigationType@IFunctionHandler_.html","  ! &#160;"],
["GetNearestEntitiesOfType","CScriptBind_AI__GetNearestEntitiesOfType@IFunctionHandler_.html","  ! &#160;"],
["GetNearestHidespot","CScriptBind_AI__GetNearestHidespot@IFunctionHandler_.html","  ! &#160;"],
["GetNearestPathOfTypeInRange","CScriptBind_AI__GetNearestPathOfTypeInRange@IFunctionHandler_.html","  ! &#160;"],
["GetNearestPointOnPath","CScriptBind_AI__GetNearestPointOnPath@IFunctionHandler_.html","  ! &#160;"],
["GetObjectBlackBoard","CScriptBind_AI__GetObjectBlackBoard@IFunctionHandler_.html","  ! &#160;"],
["GetObjectRadius","CScriptBind_AI__GetObjectRadius@IFunctionHandler_.html","  ! &#160;"],
["GetParameter","CScriptBind_AI__GetParameter@IFunctionHandler_.html","  ! &#160;"],
["GetPathLoop","CScriptBind_AI__GetPathLoop@IFunctionHandler_.html","  ! &#160;"],
["GetPathSegNoOnPath","CScriptBind_AI__GetPathSegNoOnPath@IFunctionHandler_.html","  ! &#160;"],
["GetPeakThreatLevel","CScriptBind_AI__GetPeakThreatLevel@IFunctionHandler_@ScriptHandle.html","  ! &#160;"],
["GetPeakThreatType","CScriptBind_AI__GetPeakThreatType@IFunctionHandler_@ScriptHandle.html","  ! &#160;"],
["GetPointOnPathBySegNo","CScriptBind_AI__GetPointOnPathBySegNo@IFunctionHandler_.html","  ! &#160;"],
["GetPosturePriority","CScriptBind_AI__GetPosturePriority@IFunctionHandler_@ScriptHandle@char_.html","  ! &#160;"],
["GetPotentialTargetCount","CScriptBind_AI__GetPotentialTargetCount@IFunctionHandler_@ScriptHandle.html","  ! &#160;"],
["GetPotentialTargetCountFromFaction","CScriptBind_AI__GetPotentialTargetCountFromFaction@IFunctionHandler_@ScriptHandle@char_.html","  ! &#160;"],
["GetPredictedPosAlongPath","CScriptBind_AI__GetPredictedPosAlongPath@IFunctionHandler_.html","  ! &#160;"],
["GetPreviousBehaviorName","CScriptBind_AI__GetPreviousBehaviorName@IFunctionHandler_@ScriptHandle.html","  ! &#160;"],
["GetPreviousPeakThreatLevel","CScriptBind_AI__GetPreviousPeakThreatLevel@IFunctionHandler_@ScriptHandle.html","  ! &#160;"],
["GetPreviousPeakThreatType","CScriptBind_AI__GetPreviousPeakThreatType@IFunctionHandler_@ScriptHandle.html","  ! &#160;"],
["GetProbableTargetPosition","CScriptBind_AI__GetProbableTargetPosition@IFunctionHandler_.html","  ! &#160;"],
["GetReactionOf","CScriptBind_AI__GetReactionOf@IFunctionHandler_.html","  This is GetReactionOf, a member of class CScriptBind_AI.&#160;"],
["GetRefPointDirection","CScriptBind_AI__GetRefPointDirection@IFunctionHandler_.html","  ! &#160;"],
["GetRefPointPosition","CScriptBind_AI__GetRefPointPosition@IFunctionHandler_.html","  ! &#160;"],
["GetRefShapeName","CScriptBind_AI__GetRefShapeName@IFunctionHandler_.html","  ! &#160;"],
["GetSmartObjectHelper","CScriptBind_AI__GetSmartObjectHelper@IFunctionHandler_.html","  Syntax: AI.GetSmartObjectHelper( entityId, className, helperName ) Returns table with position and direction vector of given SO helper&#160;"],
["GetSoundPerceptionDescriptor","CScriptBind_AI__GetSoundPerceptionDescriptor@IFunctionHandler_.html","  ! &#160;"],
["GetStance","CScriptBind_AI__GetStance@IFunctionHandler_.html","  ! &#160;"],
["GetSubTypeOf","CScriptBind_AI__GetSubTypeOf@IFunctionHandler_.html","  ! &#160;"],
["GetTacticalPoints","CScriptBind_AI__GetTacticalPoints@IFunctionHandler_.html","  ! &#160;"],
["GetTargetSubType","CScriptBind_AI__GetTargetSubType@IFunctionHandler_.html","  ! &#160;"],
["GetTargetType","CScriptBind_AI__GetTargetType@IFunctionHandler_.html","  ! &#160;"],
["GetTotalLengthOfPath","CScriptBind_AI__GetTotalLengthOfPath@IFunctionHandler_.html","  ! &#160;"],
["GetTypeOf","CScriptBind_AI__GetTypeOf@IFunctionHandler_.html","  ! &#160;"],
["GetUnitCount","CScriptBind_AI__GetUnitCount@IFunctionHandler_.html","  ! &#160;"],
["GetUnitInRank","CScriptBind_AI__GetUnitInRank@IFunctionHandler_.html","  ! &#160;"],
["GoTo","CScriptBind_AI__GoTo@IFunctionHandler_.html","  ! &#160;"],
["Hostile","CScriptBind_AI__Hostile@IFunctionHandler_.html","  ! &#160;"],
["IgnoreCurrentHideObject","CScriptBind_AI__IgnoreCurrentHideObject@IFunctionHandler_.html","  ! &#160;"],
["IntersectsForbidden","CScriptBind_AI__IntersectsForbidden@IFunctionHandler_.html","  ! &#160;"],
["InvalidateHidespot","CScriptBind_AI__InvalidateHidespot@IFunctionHandler_.html","  &#160;"],
["IsAgentInAgentFOV","CScriptBind_AI__IsAgentInAgentFOV@IFunctionHandler_.html","  ! &#160;"],
["IsAgentInTargetFOV","CScriptBind_AI__IsAgentInTargetFOV@IFunctionHandler_.html","  ! &#160;"],
["IsAimReady","CScriptBind_AI__IsAimReady@IFunctionHandler_@ScriptHandle.html","  ! &#160;"],
["IsCoverCompromised","CScriptBind_AI__IsCoverCompromised@IFunctionHandler_.html","  ! &#160;"],
["IsEnabled","CScriptBind_AI__IsEnabled@IFunctionHandler_.html","  ! &#160;"],
["IsFireEnabled","CScriptBind_AI__IsFireEnabled@IFunctionHandler_.html","  ! &#160;"],
["IsGoalPipe","CScriptBind_AI__IsGoalPipe@IFunctionHandler_.html","  ! &#160;"],
["IsInCover","CScriptBind_AI__IsInCover@IFunctionHandler_.html","  ! &#160;"],
["IsLowHealthPauseActive","CScriptBind_AI__IsLowHealthPauseActive@IFunctionHandler_@ScriptHandle.html","  ! &#160;"],
["IsLowOnAmmo","CScriptBind_AI__IsLowOnAmmo@IFunctionHandler_.html","  ! &#160;"],
["IsMoving","CScriptBind_AI__IsMoving@IFunctionHandler_.html","  ! &#160;"],
["IsMovingInCover","CScriptBind_AI__IsMovingInCover@IFunctionHandler_.html","  ! &#160;"],
["IsMovingToCover","CScriptBind_AI__IsMovingToCover@IFunctionHandler_.html","  ! &#160;"],
["IsOutOfAmmo","CScriptBind_AI__IsOutOfAmmo@IFunctionHandler_.html","  ! &#160;"],
["IsPersonallyHostile","CScriptBind_AI__IsPersonallyHostile@IFunctionHandler_@ScriptHandle@ScriptHandle.html","  ! &#160;"],
["IsPointInFlightRegion","CScriptBind_AI__IsPointInFlightRegion@IFunctionHandler_.html","  ! &#160;"],
["IsPointInsideGenericShape","CScriptBind_AI__IsPointInsideGenericShape@IFunctionHandler_.html","  ! &#160;"],
["IsPointInWaterRegion","CScriptBind_AI__IsPointInWaterRegion@IFunctionHandler_.html","  ! &#160;"],
["IsPunchableObjectValid","CScriptBind_AI__IsPunchableObjectValid@IFunctionHandler_.html","  ! &#160;"],
["IsTakingCover","CScriptBind_AI__IsTakingCover@IFunctionHandler_.html","  ! &#160;"],
["LoadBehaviors","CScriptBind_AI__LoadBehaviors@IFunctionHandler_@char_@char_.html","  ! &#160;"],
["LoadCharacters","CScriptBind_AI__LoadCharacters@IFunctionHandler_@char_@SmartScriptTable.html","  ! &#160;"],
["LoadGoalPipes","CScriptBind_AI__LoadGoalPipes@IFunctionHandler_.html","  XML support for goal pipes&#160;"],
["LogComment","CScriptBind_AI__LogComment@IFunctionHandler_.html","  ! &#160;"],
["LogEvent","CScriptBind_AI__LogEvent@IFunctionHandler_.html","  ! &#160;"],
["LogProgress","CScriptBind_AI__LogProgress@IFunctionHandler_.html","  ! &#160;"],
["MeleePunchableObject","CScriptBind_AI__MeleePunchableObject@IFunctionHandler_.html","  ! &#160;"],
["ModifySmartObjectStates","CScriptBind_AI__ModifySmartObjectStates@IFunctionHandler_.html","  ! &#160;"],
["NotifyGroup","CScriptBind_AI__NotifyGroup@IFunctionHandler_@int@ScriptHandle@char_.html","  &#160;"],
["NotifyReinfDone","CScriptBind_AI__NotifyReinfDone@IFunctionHandler_.html","  &#160;"],
["NotifySurpriseEntityAction","CScriptBind_AI__NotifySurpriseEntityAction@IFunctionHandler_.html","  NotifySurpriseEntityAction&#160;"],
["ParseTables","CScriptBind_AI__ParseTables@int@bool@IFunctionHandler_@AIObjectParams_@bool_.html","  ! &#160;"],
["PlayCommunication","CScriptBind_AI__PlayCommunication@IFunctionHandler_@ScriptHandle@char_@char_@float.html","  ! &#160;"],
["PlayReadabilitySound","CScriptBind_AI__PlayReadabilitySound@IFunctionHandler_.html","  ! &#160;"],
["ProcessBalancedDamage","CScriptBind_AI__ProcessBalancedDamage@IFunctionHandler_.html","  ! &#160;"],
["PushGoal","CScriptBind_AI__PushGoal@IFunctionHandler_.html","  ! &#160;"],
["PushLabel","CScriptBind_AI__PushLabel@IFunctionHandler_.html","  ! &#160;"],
["QueueBubbleMessage","CScriptBind_AI__QueueBubbleMessage@IFunctionHandler_@ScriptHandle@char_.html","  ! &#160;"],
["RecComment","CScriptBind_AI__RecComment@IFunctionHandler_.html","  ! &#160;"],
["RegisterDamageRegion","CScriptBind_AI__RegisterDamageRegion@IFunctionHandler_.html","  ! &#160;"],
["RegisterInterestedActor","CScriptBind_AI__RegisterInterestedActor@IFunctionHandler_@ScriptHandle@float@float.html","  ! &#160;"],
["RegisterInterestingEntity","CScriptBind_AI__RegisterInterestingEntity@IFunctionHandler_@ScriptHandle@float@float@char_@Vec3@float@int.html","  ! &#160;"],
["RegisterTacticalPointQuery","CScriptBind_AI__RegisterTacticalPointQuery@IFunctionHandler_.html","  ! &#160;"],
["RegisterTargetTrack","CScriptBind_AI__RegisterTargetTrack@IFunctionHandler_.html","  ! &#160;"],
["Release","CScriptBind_AI__Release.html","  This is Release, a member of class CScriptBind_AI.&#160;"],
["RemoveCoverEntity","CScriptBind_AI__RemoveCoverEntity@IFunctionHandler_@ScriptHandle.html","  This is RemoveCoverEntity, a member of class CScriptBind_AI.&#160;"],
["RemovePersonallyHostile","CScriptBind_AI__RemovePersonallyHostile@IFunctionHandler_@ScriptHandle@ScriptHandle.html","  ! &#160;"],
["RequestAttack","CScriptBind_AI__RequestAttack@IFunctionHandler_.html","  ! &#160;"],
["RequestToStopMovement","CScriptBind_AI__RequestToStopMovement@IFunctionHandler_@ScriptHandle.html","  ! &#160;"],
["ResetAgentLookAtPos","CScriptBind_AI__ResetAgentLookAtPos@IFunctionHandler_.html","  ! &#160;"],
["ResetAgentState","CScriptBind_AI__ResetAgentState@IFunctionHandler_@ScriptHandle@char_.html","  ! &#160;"],
["ResetParameters","CScriptBind_AI__ResetParameters@IFunctionHandler_.html","  ! &#160;"],
["ResetPersonallyHostiles","CScriptBind_AI__ResetPersonallyHostiles@IFunctionHandler_@ScriptHandle@ScriptHandle.html","  ! &#160;"],
["RunStartupScript","CScriptBind_AI__RunStartupScript.html","  RunStartupScript&#160;"],
["ScaleFormation","CScriptBind_AI__ScaleFormation@IFunctionHandler_.html","  ! &#160;"],
["SequenceBehaviorReady","CScriptBind_AI__SequenceBehaviorReady@IFunctionHandler_@ScriptHandle.html","  ! &#160;"],
["SequenceInterruptibleBehaviorLeft","CScriptBind_AI__SequenceInterruptibleBehaviorLeft@IFunctionHandler_@ScriptHandle.html","  ! &#160;"],
["SequenceNonInterruptibleBehaviorLeft","CScriptBind_AI__SequenceNonInterruptibleBehaviorLeft@IFunctionHandler_@ScriptHandle.html","  ! &#160;"],
["SetAdjustPath","CScriptBind_AI__SetAdjustPath@IFunctionHandler_.html","  &#160;"],
["SetAlarmed","CScriptBind_AI__SetAlarmed@IFunctionHandler_.html","  ! &#160;"],
["SetAnimationTag","CScriptBind_AI__SetAnimationTag@IFunctionHandler_@ScriptHandle@char_.html","  ! &#160;"],
["SetAssesmentMultiplier","CScriptBind_AI__SetAssesmentMultiplier@IFunctionHandler_.html","  ! &#160;"],
["SetAttentiontarget","CScriptBind_AI__SetAttentiontarget@IFunctionHandler_.html","  ! &#160;"],
["SetBeaconPosition","CScriptBind_AI__SetBeaconPosition@IFunctionHandler_.html","  ! &#160;"],
["SetBehaviorTreeEvaluationEnabled","CScriptBind_AI__SetBehaviorTreeEvaluationEnabled@IFunctionHandler_@ScriptHandle@bool.html","  ! &#160;"],
["SetBehaviorVariable","CScriptBind_AI__SetBehaviorVariable@IFunctionHandler_@ScriptHandle@char_@bool.html","  ! &#160;"],
["SetCharacter","CScriptBind_AI__SetCharacter@IFunctionHandler_.html","  ! &#160;"],
["SetCollisionAvoidanceRadiusIncrement","CScriptBind_AI__SetCollisionAvoidanceRadiusIncrement@IFunctionHandler_@ScriptHandle@float.html","  ! &#160;"],
["SetContinuousMotion","CScriptBind_AI__SetContinuousMotion@IFunctionHandler_@ScriptHandle@bool.html","  ! &#160;"],
["SetCoverCompromised","CScriptBind_AI__SetCoverCompromised@IFunctionHandler_.html","  ! &#160;"],
["SetEntitySpeedRange","CScriptBind_AI__SetEntitySpeedRange@IFunctionHandler_.html","  ! &#160;"],
["SetExtraPriority","CScriptBind_AI__SetExtraPriority@IFunctionHandler_.html","  ! &#160;"],
["SetFactionOf","CScriptBind_AI__SetFactionOf@IFunctionHandler_@ScriptHandle@char_.html","  ! &#160;"],
["SetFactionThreatMultiplier","CScriptBind_AI__SetFactionThreatMultiplier@IFunctionHandler_.html","  ! &#160;"],
["SetFireMode","CScriptBind_AI__SetFireMode@IFunctionHandler_.html","  ! &#160;"],
["SetForcedNavigation","CScriptBind_AI__SetForcedNavigation@IFunctionHandler_.html","  &#160;"],
["SetFormationAngleThreshold","CScriptBind_AI__SetFormationAngleThreshold@IFunctionHandler_.html","  ! &#160;"],
["SetFormationLookingPoint","CScriptBind_AI__SetFormationLookingPoint@IFunctionHandler_.html","  ! &#160;"],
["SetFormationPosition","CScriptBind_AI__SetFormationPosition@IFunctionHandler_.html","  ! &#160;"],
["SetFormationUpdate","CScriptBind_AI__SetFormationUpdate@IFunctionHandler_.html","  ! &#160;"],
["SetFormationUpdateSight","CScriptBind_AI__SetFormationUpdateSight@IFunctionHandler_.html","  ! &#160;"],
["SetIgnorant","CScriptBind_AI__SetIgnorant@IFunctionHandler_.html","  ! &#160;"],
["SetInCover","CScriptBind_AI__SetInCover@IFunctionHandler_.html","  ! &#160;"],
["SetLeader","CScriptBind_AI__SetLeader@IFunctionHandler_.html","  ! &#160;"],
["SetMemoryFireType","CScriptBind_AI__SetMemoryFireType@IFunctionHandler_.html","  ! &#160;"],
["SetMovementContext","CScriptBind_AI__SetMovementContext@IFunctionHandler_@ScriptHandle@int.html","  ! &#160;"],
["SetPathAttributeToFollow","CScriptBind_AI__SetPathAttributeToFollow@IFunctionHandler_.html","  ! &#160;"],
["SetPathToFollow","CScriptBind_AI__SetPathToFollow@IFunctionHandler_.html","  ! &#160;"],
["SetPFBlockerRadius","CScriptBind_AI__SetPFBlockerRadius@IFunctionHandler_.html","  ! &#160;"],
["SetPointListToFollow","CScriptBind_AI__SetPointListToFollow@IFunctionHandler_.html","  ! &#160;"],
["SetPosturePriority","CScriptBind_AI__SetPosturePriority@IFunctionHandler_@ScriptHandle@char_@float.html","  ! &#160;"],
["SetPostures","CScriptBind_AI__SetPostures@IFunctionHandler_@ScriptHandle@SmartScriptTable.html","  ! &#160;"],
["SetReactionOf","CScriptBind_AI__SetReactionOf@IFunctionHandler_@char_@char_@int.html","  This is SetReactionOf, a member of class CScriptBind_AI.&#160;"],
["SetRefPointAtDefensePos","CScriptBind_AI__SetRefPointAtDefensePos@IFunctionHandler_.html","  ! &#160;"],
["SetRefPointDirection","CScriptBind_AI__SetRefPointDirection@IFunctionHandler_.html","  ! &#160;"],
["SetRefPointPosition","CScriptBind_AI__SetRefPointPosition@IFunctionHandler_.html","  ! &#160;"],
["SetRefPointRadius","CScriptBind_AI__SetRefPointRadius@IFunctionHandler_.html","  ! &#160;"],
["SetRefpointToAnchor","CScriptBind_AI__SetRefpointToAnchor@IFunctionHandler_.html","  ! &#160;"],
["SetRefPointToGrenadeAvoidTarget","CScriptBind_AI__SetRefPointToGrenadeAvoidTarget@IFunctionHandler_.html","  &#160;"],
["SetRefpointToPunchableObject","CScriptBind_AI__SetRefpointToPunchableObject@IFunctionHandler_.html","  ! &#160;"],
["SetRefShapeName","CScriptBind_AI__SetRefShapeName@IFunctionHandler_.html","  ! &#160;"],
["SetSmartObjectState","CScriptBind_AI__SetSmartObjectState@IFunctionHandler_.html","  ! &#160;"],
["SetSoundPerceptionDescriptor","CScriptBind_AI__SetSoundPerceptionDescriptor@IFunctionHandler_.html","  ! &#160;"],
["SetSpeed","CScriptBind_AI__SetSpeed@IFunctionHandler_.html","  ! &#160;"],
["SetStance","CScriptBind_AI__SetStance@IFunctionHandler_.html","  ! &#160;"],
["SetTargetTrackClassThreat","CScriptBind_AI__SetTargetTrackClassThreat@IFunctionHandler_.html","  ! &#160;"],
["SetTempTargetPriority","CScriptBind_AI__SetTempTargetPriority@IFunctionHandler_.html","  ! &#160;"],
["SetTerritoryShapeName","CScriptBind_AI__SetTerritoryShapeName@IFunctionHandler_.html","  ! &#160;"],
["SetUnitProperties","CScriptBind_AI__SetUnitProperties@IFunctionHandler_.html","  ! &#160;"],
["SetUseSecondaryVehicleWeapon","CScriptBind_AI__SetUseSecondaryVehicleWeapon@IFunctionHandler_.html","  ! &#160;"],
["SetVehicleStickTarget","CScriptBind_AI__SetVehicleStickTarget@IFunctionHandler_.html","  &#160;"],
["Signal","CScriptBind_AI__Signal@IFunctionHandler_.html","  ! &#160;"],
["SmartObjectEvent","CScriptBind_AI__SmartObjectEvent@IFunctionHandler_.html","  ! &#160;"],
["SoundEvent","CScriptBind_AI__SoundEvent@IFunctionHandler_.html","  ! &#160;"],
["StartModularBehaviorTree","CScriptBind_AI__StartModularBehaviorTree@IFunctionHandler_@ScriptHandle@char_.html","  This is StartModularBehaviorTree, a member of class CScriptBind_AI.&#160;"],
["StopCommunication","CScriptBind_AI__StopCommunication@IFunctionHandler_@ScriptHandle.html","  ! &#160;"],
["StopModularBehaviorTree","CScriptBind_AI__StopModularBehaviorTree@IFunctionHandler_@ScriptHandle.html","  This is StopModularBehaviorTree, a member of class CScriptBind_AI.&#160;"],
["ThrowGrenade","CScriptBind_AI__ThrowGrenade@IFunctionHandler_.html","  ! &#160;"],
["TriggerCurrentTargetTrackPulse","CScriptBind_AI__TriggerCurrentTargetTrackPulse@IFunctionHandler_@ScriptHandle@char_@char_.html","  This is TriggerCurrentTargetTrackPulse, a member of class CScriptBind_AI.&#160;"],
["UnregisterInterestedActor","CScriptBind_AI__UnregisterInterestedActor@IFunctionHandler_@ScriptHandle.html","  ! &#160;"],
["UnregisterInterestingEntity","CScriptBind_AI__UnregisterInterestingEntity@IFunctionHandler_@ScriptHandle.html","  ! &#160;"],
["UnregisterTargetTrack","CScriptBind_AI__UnregisterTargetTrack@IFunctionHandler_.html","  ! &#160;"],
["UpdateGlobalPerceptionScale","CScriptBind_AI__UpdateGlobalPerceptionScale@IFunctionHandler_@float@float.html","  ! &#160;"],
["UpdateTempTarget","CScriptBind_AI__UpdateTempTarget@IFunctionHandler_.html","  ! &#160;"],
["UpTargetPriority","CScriptBind_AI__UpTargetPriority@IFunctionHandler_.html","  ! &#160;"],
["VisualEvent","CScriptBind_AI__VisualEvent@IFunctionHandler_.html","  ! &#160;"],
["Warning","CScriptBind_AI__Warning@IFunctionHandler_.html","  ! &#160;"],
["CScriptBind_Entity Class","CScriptBind_Entity.html",""],
["Activate","CScriptBind_Entity__Activate@IFunctionHandler_@int.html","  ! &#160;"],
["ActivateOutput","CScriptBind_Entity__ActivateOutput@IFunctionHandler_.html","  ! &#160;"],
["ActivatePlayerPhysics","CScriptBind_Entity__ActivatePlayerPhysics@IFunctionHandler_@bool.html","  ! &#160;"],
["AddConstraint","CScriptBind_Entity__AddConstraint@IFunctionHandler_.html","  ! &#160;"],
["AddImpulse","CScriptBind_Entity__AddImpulse@IFunctionHandler_.html","  ! &#160;"],
["AttachChild","CScriptBind_Entity__AttachChild@IFunctionHandler_@ScriptHandle@int.html","  ! &#160;"],
["AttachSurfaceEffect","CScriptBind_Entity__AttachSurfaceEffect@IFunctionHandler_@int@char_@bool@char_@char_@float@float.html","  ! &#160;"],
["AuxAudioProxiesMoveWithEntity","CScriptBind_Entity__AuxAudioProxiesMoveWithEntity@IFunctionHandler_@bool_const.html","  ! &#160;"],
["AwakeCharacterPhysics","CScriptBind_Entity__AwakeCharacterPhysics@IFunctionHandler_@int@char_@int.html","  ! &#160;"],
["AwakeEnvironment","CScriptBind_Entity__AwakeEnvironment@IFunctionHandler_.html","  ! &#160;"],
["AwakePhysics","CScriptBind_Entity__AwakePhysics@IFunctionHandler_@int.html","  ! &#160;"],
["BreakToPieces","CScriptBind_Entity__BreakToPieces@IFunctionHandler_@int@int@float@Vec3@Vec3@float@bool.html","  ! &#160;"],
["CalcWorldAnglesFromRelativeDir","CScriptBind_Entity__CalcWorldAnglesFromRelativeDir@IFunctionHandler_@Vec3.html","  ! &#160;"],
["CancelSubpipe","CScriptBind_Entity__CancelSubpipe@IFunctionHandler_.html","  ! &#160;"],
["ChangeAttachmentMaterial","CScriptBind_Entity__ChangeAttachmentMaterial@IFunctionHandler_@char_@char_.html","  ! &#160;"],
["CharacterUpdateAlways","CScriptBind_Entity__CharacterUpdateAlways@IFunctionHandler_@int@bool.html","  ! &#160;"],
["CharacterUpdateOnRender","CScriptBind_Entity__CharacterUpdateOnRender@IFunctionHandler_@int@bool.html","  ! &#160;"],
["CheckCollisions","CScriptBind_Entity__CheckCollisions@IFunctionHandler_.html","  ! &#160;"],
["CheckShaderParamCallbacks","CScriptBind_Entity__CheckShaderParamCallbacks@IFunctionHandler_.html","  ! &#160;"],
["CloneMaterial","CScriptBind_Entity__CloneMaterial@IFunctionHandler_@int.html","  ! &#160;"],
["CopySlotTM","CScriptBind_Entity__CopySlotTM@IFunctionHandler_@int@int@bool.html","  ! &#160;"],
["CountLinks","CScriptBind_Entity__CountLinks@IFunctionHandler_.html","  ! &#160;"],
["CreateAuxAudioProxy","CScriptBind_Entity__CreateAuxAudioProxy@IFunctionHandler_.html","  ! &#160;"],
["CreateBBoxProxy","CScriptBind_Entity__CreateBBoxProxy@IFunctionHandler_.html","  ! &#160;"],
["CreateBoneAttachment","CScriptBind_Entity__CreateBoneAttachment@IFunctionHandler_@int@char_@char_.html","  ! &#160;"],
["CreateCameraProxy","CScriptBind_Entity__CreateCameraProxy@IFunctionHandler_.html","  ! &#160;"],
["CreateDRSProxy","CScriptBind_Entity__CreateDRSProxy@IFunctionHandler_.html","  ! &#160;"],
["CreateLink","CScriptBind_Entity__CreateLink@IFunctionHandler_@char_.html","  ! &#160;"],
["CreateRenderProxy","CScriptBind_Entity__CreateRenderProxy@IFunctionHandler_.html","  ! &#160;"],
["CreateSkinAttachment","CScriptBind_Entity__CreateSkinAttachment@IFunctionHandler_@int@char_.html","  ! &#160;"],
["Damage","CScriptBind_Entity__Damage@IFunctionHandler_.html","  ! &#160;"],
["DeleteParticleEmitter","CScriptBind_Entity__DeleteParticleEmitter@IFunctionHandler_@int.html","  ! &#160;"],
["DeleteThis","CScriptBind_Entity__DeleteThis@IFunctionHandler_.html","  ! &#160;"],
["DestroyAttachment","CScriptBind_Entity__DestroyAttachment@IFunctionHandler_@int@char_.html","  ! &#160;"],
["DestroyPhysics","CScriptBind_Entity__DestroyPhysics@IFunctionHandler_.html","  ! &#160;"],
["DetachAll","CScriptBind_Entity__DetachAll@IFunctionHandler_.html","  ! &#160;"],
["DetachThis","CScriptBind_Entity__DetachThis@IFunctionHandler_.html","  ! &#160;"],
["DisableAnimationEvent","CScriptBind_Entity__DisableAnimationEvent@IFunctionHandler_@int@char_.html","  ! &#160;"],
["DrawSlot","CScriptBind_Entity__DrawSlot@IFunctionHandler_@int@int.html","  ! &#160;"],
["EnableBoneAnimation","CScriptBind_Entity__EnableBoneAnimation@IFunctionHandler_@int@int@char_@bool.html","  ! &#160;"],
["EnableBoneAnimationAll","CScriptBind_Entity__EnableBoneAnimationAll@IFunctionHandler_@int@int@bool.html","  ! &#160;"],
["EnableInheritXForm","CScriptBind_Entity__EnableInheritXForm@IFunctionHandler_@bool.html","  ! &#160;"],
["EnableMaterialLayer","CScriptBind_Entity__EnableMaterialLayer@IFunctionHandler_@bool@int.html","  int AddMaterialLayer(IFunctionHandler *pH, int slotId, const char *shader); int RemoveMaterialLayer(IFunctionHandler *pH, int slotId, int id); int RemoveAllMaterialLayers(IFunctionHandler *pH, int slotId); int SetMaterialLayerParamF(IFunctionHandler *pH, int slotId, int layerId, const char *name, float value); int SetMaterialLayerParamV(IFunctionHandler *pH, int slotId, int layerId, const char *name, Vec3 vec); int SetMaterialLayerParamC(IFunctionHandler *pH, int slotId, int layerId, const char *name, float r, float g, float b, float a); ! &#160;"],
["EnablePhysics","CScriptBind_Entity__EnablePhysics@IFunctionHandler_@bool.html","  ! &#160;"],
["EnableProceduralFacialAnimation","CScriptBind_Entity__EnableProceduralFacialAnimation@IFunctionHandler_@bool.html","  ! &#160;"],
["ExecuteAudioTrigger","CScriptBind_Entity__ExecuteAudioTrigger@IFunctionHandler_@ScriptHandle_const@ScriptHandle_const.html","  ! &#160;"],
["FadeGlobalDensity","CScriptBind_Entity__FadeGlobalDensity@IFunctionHandler_@int@float@float.html","  ! &#160;"],
["ForceCharacterUpdate","CScriptBind_Entity__ForceCharacterUpdate@IFunctionHandler_@int@bool.html","  ! &#160;"],
["ForwardTriggerEventsTo","CScriptBind_Entity__ForwardTriggerEventsTo@IFunctionHandler_@ScriptHandle.html","  ! &#160;"],
["FreeAllSlots","CScriptBind_Entity__FreeAllSlots@IFunctionHandler_.html","  ! &#160;"],
["FreeSlot","CScriptBind_Entity__FreeSlot@IFunctionHandler_@int.html","  ! &#160;"],
["GetAIName","CScriptBind_Entity__GetAIName@IFunctionHandler_.html","  ! &#160;"],
["GetAllAuxAudioProxiesID","CScriptBind_Entity__GetAllAuxAudioProxiesID@IFunctionHandler_.html","  ! &#160;"],
["GetAngles","CScriptBind_Entity__GetAngles@IFunctionHandler_.html","  ! &#160;"],
["GetAnimationLength","CScriptBind_Entity__GetAnimationLength@IFunctionHandler_@int@char_.html","  ! &#160;"],
["GetAnimationSpeed","CScriptBind_Entity__GetAnimationSpeed@IFunctionHandler_@int@int.html","  &#160;"],
["GetAnimationTime","CScriptBind_Entity__GetAnimationTime@IFunctionHandler_@int@int.html","  ! &#160;"],
["GetArchetype","CScriptBind_Entity__GetArchetype@IFunctionHandler_.html","  ! &#160;"],
["GetAttachmentBone","CScriptBind_Entity__GetAttachmentBone@IFunctionHandler_@int@char_.html","  ! &#160;"],
["GetAttachmentCGF","CScriptBind_Entity__GetAttachmentCGF@IFunctionHandler_@int@char_.html","  ! &#160;"],
["GetBoneAngularVelocity","CScriptBind_Entity__GetBoneAngularVelocity@IFunctionHandler_@int@char_.html","  ! &#160;"],
["GetBoneDir","CScriptBind_Entity__GetBoneDir@IFunctionHandler_.html","  ! &#160;"],
["GetBoneLocal","CScriptBind_Entity__GetBoneLocal@IFunctionHandler_@char_@Vec3.html","  ! &#160;"],
["GetBoneNameFromTable","CScriptBind_Entity__GetBoneNameFromTable@IFunctionHandler_.html","  ! &#160;"],
["GetBonePos","CScriptBind_Entity__GetBonePos@IFunctionHandler_.html","  ! &#160;"],
["GetBoneVelocity","CScriptBind_Entity__GetBoneVelocity@IFunctionHandler_@int@char_.html","  ! &#160;"],
["GetCenterOfMassPos","CScriptBind_Entity__GetCenterOfMassPos@IFunctionHandler_.html","  ! &#160;"],
["GetCharacter","CScriptBind_Entity__GetCharacter@IFunctionHandler_@int.html","  ! &#160;"],
["GetChild","CScriptBind_Entity__GetChild@IFunctionHandler_@int.html","  ! &#160;"],
["GetChildCount","CScriptBind_Entity__GetChildCount@IFunctionHandler_.html","  ! &#160;"],
["GetCurAnimation","CScriptBind_Entity__GetCurAnimation@IFunctionHandler_.html","  ! &#160;"],
["GetDefaultAuxAudioProxyID","CScriptBind_Entity__GetDefaultAuxAudioProxyID@IFunctionHandler_.html","  ! &#160;"],
["GetDirectionVector","CScriptBind_Entity__GetDirectionVector@IFunctionHandler_.html","  ! &#160;"],
["GetDistance","CScriptBind_Entity__GetDistance@IFunctionHandler_.html","  ! &#160;"],
["GetEntitiesInContact","CScriptBind_Entity__GetEntitiesInContact@IFunctionHandler_.html","  ! &#160;"],
["GetEntityMaterial","CScriptBind_Entity__GetEntityMaterial@IFunctionHandler_.html","  ! &#160;"],
["GetExplosionImpulse","CScriptBind_Entity__GetExplosionImpulse@IFunctionHandler_.html","  ! &#160;"],
["GetExplosionObstruction","CScriptBind_Entity__GetExplosionObstruction@IFunctionHandler_.html","  ! &#160;"],
["GetFlags","CScriptBind_Entity__GetFlags@IFunctionHandler_.html","  ! &#160;"],
["GetFlagsExtended","CScriptBind_Entity__GetFlagsExtended@IFunctionHandler_.html","  ! &#160;"],
["GetGeomCachePrecachedTime","CScriptBind_Entity__GetGeomCachePrecachedTime@IFunctionHandler_.html","  ! &#160;"],
["GetGravity","CScriptBind_Entity__GetGravity@IFunctionHandler_.html","  ! &#160;"],
["GetGUID","CScriptBind_Entity__GetGUID@IFunctionHandler_.html","  &#160;"],
["GetHelperAngles","CScriptBind_Entity__GetHelperAngles@IFunctionHandler_.html","  ! &#160;"],
["GetHelperDir","CScriptBind_Entity__GetHelperDir@IFunctionHandler_.html","  ! &#160;"],
["GetHelperPos","CScriptBind_Entity__GetHelperPos@IFunctionHandler_.html","  ! &#160;"],
["GetLink","CScriptBind_Entity__GetLink@IFunctionHandler_@int.html","  ! &#160;"],
["GetLinkName","CScriptBind_Entity__GetLinkName@IFunctionHandler_@ScriptHandle.html","  ! &#160;"],
["GetLinkTarget","CScriptBind_Entity__GetLinkTarget@IFunctionHandler_@char_.html","  ! &#160;"],
["GetLocalAngles","CScriptBind_Entity__GetLocalAngles@IFunctionHandler_.html","  ! &#160;"],
["GetLocalBBox","CScriptBind_Entity__GetLocalBBox@IFunctionHandler_.html","  ! &#160;"],
["GetLocalPos","CScriptBind_Entity__GetLocalPos@IFunctionHandler_.html","  ! &#160;"],
["GetLocalScale","CScriptBind_Entity__GetLocalScale@IFunctionHandler_.html","  ! &#160;"],
["GetLodRatio","CScriptBind_Entity__GetLodRatio@IFunctionHandler_.html","  ! &#160;"],
["GetMass","CScriptBind_Entity__GetMass@IFunctionHandler_.html","  ! &#160;"],
["GetMaterial","CScriptBind_Entity__GetMaterial@IFunctionHandler_.html","  ! &#160;"],
["GetMaterialFloat","CScriptBind_Entity__GetMaterialFloat@IFunctionHandler_@int@int@char_.html","  ! &#160;"],
["GetMaterialVec3","CScriptBind_Entity__GetMaterialVec3@IFunctionHandler_@int@int@char_.html","  ! &#160;"],
["GetName","CScriptBind_Entity__GetName@IFunctionHandler_.html","  ! &#160;"],
["GetParent","CScriptBind_Entity__GetParent@IFunctionHandler_.html","  ! &#160;"],
["GetParentSlot","CScriptBind_Entity__GetParentSlot@IFunctionHandler_@int.html","  ! &#160;"],
["GetPhysicalStats","CScriptBind_Entity__GetPhysicalStats@IFunctionHandler_.html","  ! &#160;"],
["GetPos","CScriptBind_Entity__GetPos@IFunctionHandler_.html","  ! &#160;"],
["GetProjectedWorldBBox","CScriptBind_Entity__GetProjectedWorldBBox@IFunctionHandler_.html","  ! &#160;"],
["GetRawId","CScriptBind_Entity__GetRawId@IFunctionHandler_.html","  ! &#160;"],
["GetScale","CScriptBind_Entity__GetScale@IFunctionHandler_.html","  ! &#160;"],
["GetSlotAngles","CScriptBind_Entity__GetSlotAngles@IFunctionHandler_@int.html","  ! &#160;"],
["GetSlotCount","CScriptBind_Entity__GetSlotCount@IFunctionHandler_.html","  ! &#160;"],
["GetSlotHelperPos","CScriptBind_Entity__GetSlotHelperPos@IFunctionHandler_@int@char_@bool.html","  ! &#160;"],
["GetSlotPos","CScriptBind_Entity__GetSlotPos@IFunctionHandler_@int.html","  ! &#160;"],
["GetSlotScale","CScriptBind_Entity__GetSlotScale@IFunctionHandler_@int.html","  ! &#160;"],
["GetSlotWorldDir","CScriptBind_Entity__GetSlotWorldDir@IFunctionHandler_@int.html","  ! &#160;"],
["GetSlotWorldPos","CScriptBind_Entity__GetSlotWorldPos@IFunctionHandler_@int.html","  ! &#160;"],
["GetSpeed","CScriptBind_Entity__GetSpeed@IFunctionHandler_.html","  ! &#160;"],
["GetState","CScriptBind_Entity__GetState@IFunctionHandler_.html","  ! &#160;"],
["GetSubmergedVolume","CScriptBind_Entity__GetSubmergedVolume@IFunctionHandler_@int@Vec3@Vec3.html","  ! &#160;"],
["GetTimeOfDayHour","CScriptBind_Entity__GetTimeOfDayHour@IFunctionHandler_.html","  ! &#160;"],
["GetTimeSinceLastSeen","CScriptBind_Entity__GetTimeSinceLastSeen@IFunctionHandler_.html","  ! &#160;"],
["GetTouchedPoint","CScriptBind_Entity__GetTouchedPoint@IFunctionHandler_.html","  ! &#160;"],
["GetTouchedSurfaceID","CScriptBind_Entity__GetTouchedSurfaceID@IFunctionHandler_.html","  ! &#160;"],
["GetTriggerBBox","CScriptBind_Entity__GetTriggerBBox@IFunctionHandler_.html","  ! &#160;"],
["GetUpdateRadius","CScriptBind_Entity__GetUpdateRadius@IFunctionHandler_.html","  ! &#160;"],
["GetVelocity","CScriptBind_Entity__GetVelocity@IFunctionHandler_.html","  ! &#160;"],
["GetVelocityEx","CScriptBind_Entity__GetVelocityEx@IFunctionHandler_.html","  ! &#160;"],
["GetViewDistRatio","CScriptBind_Entity__GetViewDistRatio@IFunctionHandler_.html","  ! &#160;"],
["GetVolume","CScriptBind_Entity__GetVolume@IFunctionHandler_@int.html","  ! &#160;"],
["GetWorldAngles","CScriptBind_Entity__GetWorldAngles@IFunctionHandler_.html","  ! &#160;"],
["GetWorldBBox","CScriptBind_Entity__GetWorldBBox@IFunctionHandler_.html","  ! &#160;"],
["GetWorldBoundsCenter","CScriptBind_Entity__GetWorldBoundsCenter@IFunctionHandler_.html","  ! &#160;"],
["GetWorldDir","CScriptBind_Entity__GetWorldDir@IFunctionHandler_.html","  ! &#160;"],
["GetWorldPos","CScriptBind_Entity__GetWorldPos@IFunctionHandler_.html","  ! &#160;"],
["GetWorldScale","CScriptBind_Entity__GetWorldScale@IFunctionHandler_.html","  ! &#160;"],
["GotoState","CScriptBind_Entity__GotoState@IFunctionHandler_@char_.html","  ! &#160;"],
["HasFlags","CScriptBind_Entity__HasFlags@IFunctionHandler_@int.html","  ! &#160;"],
["HasFlagsExtended","CScriptBind_Entity__HasFlagsExtended@IFunctionHandler_@int.html","  ! &#160;"],
["Hide","CScriptBind_Entity__Hide@IFunctionHandler_.html","  ! &#160;"],
["HideAllAttachments","CScriptBind_Entity__HideAllAttachments@IFunctionHandler_@int@bool@bool.html","  ! &#160;"],
["HideAttachment","CScriptBind_Entity__HideAttachment@IFunctionHandler_@int@char_@bool@bool.html","  ! &#160;"],
["HideAttachmentMaster","CScriptBind_Entity__HideAttachmentMaster@IFunctionHandler_@int@bool.html","  ! &#160;"],
["IgnorePhysicsUpdatesOnSlot","CScriptBind_Entity__IgnorePhysicsUpdatesOnSlot@IFunctionHandler_@int.html","  ! &#160;"],
["InsertSubpipe","CScriptBind_Entity__InsertSubpipe@IFunctionHandler_.html","  ! &#160;"],
["IntersectRay","CScriptBind_Entity__IntersectRay@IFunctionHandler_@int@Vec3@Vec3@float.html","  ! &#160;"],
["InvalidateLocalBBox","CScriptBind_Entity__InvalidateLocalBBox@IFunctionHandler_@bool.html","  Syntax: Entity.InvalidateLocalBBox( ) &#160;"],
["InvalidateTrigger","CScriptBind_Entity__InvalidateTrigger@IFunctionHandler_.html","  ! &#160;"],
["IsActive","CScriptBind_Entity__IsActive@IFunctionHandler_.html","  ! &#160;"],
["IsAnimationRunning","CScriptBind_Entity__IsAnimationRunning@IFunctionHandler_@int@int.html","  ! &#160;"],
["IsColliding","CScriptBind_Entity__IsColliding@IFunctionHandler_.html","  ! &#160;"],
["IsEntityInside","CScriptBind_Entity__IsEntityInside@IFunctionHandler_@ScriptHandle.html","  ! &#160;"],
["IsEntityInsideArea","CScriptBind_Entity__IsEntityInsideArea@IFunctionHandler_@int@ScriptHandle.html","  ! &#160;"],
["IsFromPool","CScriptBind_Entity__IsFromPool@IFunctionHandler_.html","  ! &#160;"],
["IsGarbage","CScriptBind_Entity__IsGarbage@IFunctionHandler_.html","  ! &#160;"],
["IsGeomCacheStreaming","CScriptBind_Entity__IsGeomCacheStreaming@IFunctionHandler_.html","  ! &#160;"],
["IsHidden","CScriptBind_Entity__IsHidden@IFunctionHandler_.html","  ! &#160;"],
["IsInState","CScriptBind_Entity__IsInState@IFunctionHandler_@char_.html","  ! &#160;"],
["IsPerInstanceStreamable","CScriptBind_Entity__IsPerInstanceStreamable@IFunctionHandler_.html","  ! &#160;"],
["IsPointInsideArea","CScriptBind_Entity__IsPointInsideArea@IFunctionHandler_@int@Vec3.html","  ! &#160;"],
["IsSlotCharacter","CScriptBind_Entity__IsSlotCharacter@IFunctionHandler_@int.html","  ! &#160;"],
["IsSlotGeometry","CScriptBind_Entity__IsSlotGeometry@IFunctionHandler_@int.html","  ! &#160;"],
["IsSlotLight","CScriptBind_Entity__IsSlotLight@IFunctionHandler_@int.html","  ! &#160;"],
["IsSlotParticleEmitter","CScriptBind_Entity__IsSlotParticleEmitter@IFunctionHandler_@int.html","  ! &#160;"],
["IsSlotValid","CScriptBind_Entity__IsSlotValid@IFunctionHandler_@int.html","  ! &#160;"],
["IsUsingPipe","CScriptBind_Entity__IsUsingPipe@IFunctionHandler_.html","  ! &#160;"],
["KillTimer","CScriptBind_Entity__KillTimer@IFunctionHandler_.html","  ! &#160;"],
["LoadCharacter","CScriptBind_Entity__LoadCharacter@IFunctionHandler_@int@char_.html","  ! &#160;"],
["LoadCloud","CScriptBind_Entity__LoadCloud@IFunctionHandler_@int@char_.html","  ! &#160;"],
["LoadFogVolume","CScriptBind_Entity__LoadFogVolume@IFunctionHandler_@int@SmartScriptTable.html","  ! &#160;"],
["LoadGeomCache","CScriptBind_Entity__LoadGeomCache@IFunctionHandler_@int@char_.html","  ! &#160;"],
["LoadLight","CScriptBind_Entity__LoadLight@IFunctionHandler_@int@SmartScriptTable.html","  ! &#160;"],
["LoadObject","CScriptBind_Entity__LoadObject@IFunctionHandler_@int@char_.html","  ! &#160;"],
["LoadObjectLattice","CScriptBind_Entity__LoadObjectLattice@IFunctionHandler_@int.html","  ! &#160;"],
["LoadObjectWithFlags","CScriptBind_Entity__LoadObjectWithFlags@IFunctionHandler_@int@char_@int.html","  ! &#160;"],
["LoadParticleEffect","CScriptBind_Entity__LoadParticleEffect@IFunctionHandler_@int@char_@SmartScriptTable.html","  ! &#160;"],
["LoadPrismObject","CScriptBind_Entity__LoadPrismObject@IFunctionHandler_@int.html","  This is LoadPrismObject, a member of class CScriptBind_Entity.&#160;"],
["LoadSubObject","CScriptBind_Entity__LoadSubObject@IFunctionHandler_@int@char_@char_.html","  ! &#160;"],
["LoadVolumeObject","CScriptBind_Entity__LoadVolumeObject@IFunctionHandler_@int@char_.html","  ! &#160;"],
["MaterialFlashInvoke","CScriptBind_Entity__MaterialFlashInvoke@IFunctionHandler_.html","  ! &#160;"],
["MultiplyWithSlotTM","CScriptBind_Entity__MultiplyWithSlotTM@IFunctionHandler_@int@Vec3.html","  ! &#160;"],
["NetPresent","CScriptBind_Entity__NetPresent@IFunctionHandler_.html","  ! &#160;"],
["NoBulletForce","CScriptBind_Entity__NoBulletForce@IFunctionHandler_@bool.html","  ! &#160;"],
["NoExplosionCollision","CScriptBind_Entity__NoExplosionCollision@IFunctionHandler_.html","  ! &#160;"],
["PassParamsToPipe","CScriptBind_Entity__PassParamsToPipe@IFunctionHandler_.html","  ! &#160;"],
["Physicalize","CScriptBind_Entity__Physicalize@IFunctionHandler_@int@int@SmartScriptTable.html","  ! &#160;"],
["PhysicalizeAttachment","CScriptBind_Entity__PhysicalizeAttachment@IFunctionHandler_@int@char_@bool.html","  ! &#160;"],
["PhysicalizeSlot","CScriptBind_Entity__PhysicalizeSlot@IFunctionHandler_@int@SmartScriptTable.html","  ! &#160;"],
["PlayFacialAnimation","CScriptBind_Entity__PlayFacialAnimation@IFunctionHandler_@char_@bool.html","  ! &#160;"],
["PreLoadParticleEffect","CScriptBind_Entity__PreLoadParticleEffect@IFunctionHandler_@char_.html","  ! &#160;"],
["ProcessBroadcastEvent","CScriptBind_Entity__ProcessBroadcastEvent@IFunctionHandler_.html","  ! &#160;"],
["RagDollize","CScriptBind_Entity__RagDollize@IFunctionHandler_@int.html","  ! &#160;"],
["ReattachSoftEntityVtx","CScriptBind_Entity__ReattachSoftEntityVtx@IFunctionHandler_@ScriptHandle@int.html","  ! &#160;"],
["RedirectAnimationToLayer0","CScriptBind_Entity__RedirectAnimationToLayer0@IFunctionHandler_@int@bool.html","  ! &#160;"],
["RegisterForAreaEvents","CScriptBind_Entity__RegisterForAreaEvents@IFunctionHandler_@int.html","  ! &#160;"],
["RemoveAllLinks","CScriptBind_Entity__RemoveAllLinks@IFunctionHandler_.html","  ! &#160;"],
["RemoveAuxAudioProxy","CScriptBind_Entity__RemoveAuxAudioProxy@IFunctionHandler_@ScriptHandle_const.html","  ! &#160;"],
["RemoveDecals","CScriptBind_Entity__RemoveDecals@IFunctionHandler_.html","  ! &#160;"],
["RemoveLink","CScriptBind_Entity__RemoveLink@IFunctionHandler_@char_.html","  ! &#160;"],
["RenderAlways","CScriptBind_Entity__RenderAlways@IFunctionHandler_@int.html","  ! &#160;"],
["RenderShadow","CScriptBind_Entity__RenderShadow@IFunctionHandler_.html","  ! &#160;"],
["ReplaceMaterial","CScriptBind_Entity__ReplaceMaterial@IFunctionHandler_@int@char_@char_.html","  ! &#160;"],
["ResetAnimation","CScriptBind_Entity__ResetAnimation@IFunctionHandler_@int@int.html","  ! &#160;"],
["ResetAttachment","CScriptBind_Entity__ResetAttachment@IFunctionHandler_@int@char_.html","  ! &#160;"],
["ResetMaterial","CScriptBind_Entity__ResetMaterial@IFunctionHandler_@int.html","  ! &#160;"],
["ResetPhysics","CScriptBind_Entity__ResetPhysics@IFunctionHandler_.html","  ! &#160;"],
["SelectPipe","CScriptBind_Entity__SelectPipe@IFunctionHandler_.html","  ! &#160;"],
["SetAIName","CScriptBind_Entity__SetAIName@IFunctionHandler_.html","  ! &#160;"],
["SetAngles","CScriptBind_Entity__SetAngles@IFunctionHandler_@Ang3.html","  ! &#160;"],
["SetAnimateOffScreenShadow","CScriptBind_Entity__SetAnimateOffScreenShadow@IFunctionHandler_@bool.html","  ! &#160;"],
["SetAnimationBlendOut","CScriptBind_Entity__SetAnimationBlendOut@IFunctionHandler_@int@int@float.html","  ! &#160;"],
["SetAnimationDrivenMotion","CScriptBind_Entity__SetAnimationDrivenMotion@IFunctionHandler_@int@int.html","  MH: ADD MH: ADD&#160;"],
["SetAnimationEvent","CScriptBind_Entity__SetAnimationEvent@IFunctionHandler_@int@char_.html","  ! &#160;"],
["SetAnimationFlip","CScriptBind_Entity__SetAnimationFlip@IFunctionHandler_@int@Vec3.html","  ! &#160;"],
["SetAnimationKeyEvent","CScriptBind_Entity__SetAnimationKeyEvent@IFunctionHandler_.html","  ! &#160;"],
["SetAnimationSpeed","CScriptBind_Entity__SetAnimationSpeed@IFunctionHandler_@int@int@float.html","  ! &#160;"],
["SetAnimationTime","CScriptBind_Entity__SetAnimationTime@IFunctionHandler_@int@int@float.html","  ! &#160;"],
["SetAttachmentAngles","CScriptBind_Entity__SetAttachmentAngles@IFunctionHandler_@int@char_@Vec3.html","  ! &#160;"],
["SetAttachmentCGF","CScriptBind_Entity__SetAttachmentCGF@IFunctionHandler_@int@char_@char_.html","  ! &#160;"],
["SetAttachmentDir","CScriptBind_Entity__SetAttachmentDir@IFunctionHandler_@int@char_@Vec3@bool.html","  ! &#160;"],
["SetAttachmentEffect","CScriptBind_Entity__SetAttachmentEffect@IFunctionHandler_@int@char_@char_@Vec3@Vec3@float@int.html","  ! &#160;"],
["SetAttachmentLight","CScriptBind_Entity__SetAttachmentLight@IFunctionHandler_@int@char_@SmartScriptTable@int.html","  ! &#160;"],
["SetAttachmentObject","CScriptBind_Entity__SetAttachmentObject@IFunctionHandler_@int@char_@ScriptHandle@int@int.html","  ! &#160;"],
["SetAttachmentPos","CScriptBind_Entity__SetAttachmentPos@IFunctionHandler_@int@char_@Vec3.html","  ! &#160;"],
["SetAudioEnvironmentID","CScriptBind_Entity__SetAudioEnvironmentID@IFunctionHandler_@ScriptHandle_const.html","  ! &#160;"],
["SetAudioObstructionCalcType","CScriptBind_Entity__SetAudioObstructionCalcType@IFunctionHandler_@int_const@ScriptHandle_const.html","  ! &#160;"],
["SetAudioProxyOffset","CScriptBind_Entity__SetAudioProxyOffset@IFunctionHandler_@Vec3_const@ScriptHandle_const.html","  ! &#160;"],
["SetAudioRtpcValue","CScriptBind_Entity__SetAudioRtpcValue@IFunctionHandler_@ScriptHandle_const@float_const@ScriptHandle_const.html","  ! &#160;"],
["SetAudioSwitchState","CScriptBind_Entity__SetAudioSwitchState@IFunctionHandler_@ScriptHandle_const@ScriptHandle_const@ScriptHandle_const.html","  ! &#160;"],
["SetCharacterPhysicParams","CScriptBind_Entity__SetCharacterPhysicParams@IFunctionHandler_.html","  ! &#160;"],
["SetCloudMovementProperties","CScriptBind_Entity__SetCloudMovementProperties@IFunctionHandler_@int@SmartScriptTable.html","  ! &#160;"],
["SetColliderMode","CScriptBind_Entity__SetColliderMode@IFunctionHandler_@int.html","  ! &#160;"],
["SetCurrentAudioEnvironments","CScriptBind_Entity__SetCurrentAudioEnvironments@IFunctionHandler_.html","  ! &#160;"],
["SetDefaultIdleAnimations","CScriptBind_Entity__SetDefaultIdleAnimations@IFunctionHandler_.html","  ! &#160;"],
["SetDirectionVector","CScriptBind_Entity__SetDirectionVector@IFunctionHandler_@Vec3.html","  ! &#160;"],
["SetEnvironmentFadeDistance","CScriptBind_Entity__SetEnvironmentFadeDistance@IFunctionHandler_@float_const.html","  ! &#160;"],
["SetFadeDistance","CScriptBind_Entity__SetFadeDistance@IFunctionHandler_@float_const.html","  ! &#160;"],
["SetFlags","CScriptBind_Entity__SetFlags@IFunctionHandler_@int@int.html","  ! &#160;"],
["SetFlagsExtended","CScriptBind_Entity__SetFlagsExtended@IFunctionHandler_@int@int.html","  ! &#160;"],
["SetGeomCacheDrawing","CScriptBind_Entity__SetGeomCacheDrawing@IFunctionHandler_@bool.html","  ! &#160;"],
["SetGeomCacheParams","CScriptBind_Entity__SetGeomCacheParams@IFunctionHandler_@bool@char_@char_@char_@char_@char_@char_@float@float.html","  ! &#160;"],
["SetGeomCachePlaybackTime","CScriptBind_Entity__SetGeomCachePlaybackTime@IFunctionHandler_@float.html","  ! &#160;"],
["SetGeomCacheStreaming","CScriptBind_Entity__SetGeomCacheStreaming@IFunctionHandler_@bool@float.html","  ! &#160;"],
["SetLightColorParams","CScriptBind_Entity__SetLightColorParams@IFunctionHandler_@int@Vec3@float.html","  ! &#160;"],
["SetLinkTarget","CScriptBind_Entity__SetLinkTarget@IFunctionHandler_@char_@ScriptHandle.html","  ! &#160;"],
["SetLocalAngles","CScriptBind_Entity__SetLocalAngles@IFunctionHandler_@Ang3.html","  ! &#160;"],
["SetLocalBBox","CScriptBind_Entity__SetLocalBBox@IFunctionHandler_@Vec3@Vec3.html","  ! &#160;"],
["SetLocalPos","CScriptBind_Entity__SetLocalPos@IFunctionHandler_@Vec3.html","  ! &#160;"],
["SetLocalScale","CScriptBind_Entity__SetLocalScale@IFunctionHandler_@float.html","  ! &#160;"],
["SetLodRatio","CScriptBind_Entity__SetLodRatio@IFunctionHandler_.html","  ! &#160;"],
["SetMaterial","CScriptBind_Entity__SetMaterial@IFunctionHandler_.html","  ! &#160;"],
["SetMaterialFloat","CScriptBind_Entity__SetMaterialFloat@IFunctionHandler_@int@int@char_@float.html","  ! &#160;"],
["SetMaterialVec3","CScriptBind_Entity__SetMaterialVec3@IFunctionHandler_@int@int@char_@Vec3.html","  ! &#160;"],
["SetName","CScriptBind_Entity__SetName@IFunctionHandler_.html","  ! &#160;"],
["SetParentSlot","CScriptBind_Entity__SetParentSlot@IFunctionHandler_@int@int.html","  ! &#160;"],
["SetPhysicParams","CScriptBind_Entity__SetPhysicParams@IFunctionHandler_.html","  ! &#160;"],
["SetPos","CScriptBind_Entity__SetPos@IFunctionHandler_@Vec3.html","  ! &#160;"],
["SetPublicParam","CScriptBind_Entity__SetPublicParam@IFunctionHandler_.html","  ! &#160;"],
["SetRegisterInSectors","CScriptBind_Entity__SetRegisterInSectors@IFunctionHandler_.html","  ! &#160;"],
["SetScale","CScriptBind_Entity__SetScale@IFunctionHandler_@float.html","  ! &#160;"],
["SetScriptUpdateRate","CScriptBind_Entity__SetScriptUpdateRate@IFunctionHandler_@int.html","  ! &#160;"],
["SetSelfAsLightCasterException","CScriptBind_Entity__SetSelfAsLightCasterException@IFunctionHandler_@int.html","  ! &#160;"],
["SetSlotAngles","CScriptBind_Entity__SetSlotAngles@IFunctionHandler_@int@Ang3.html","  ! &#160;"],
["SetSlotHud3D","CScriptBind_Entity__SetSlotHud3D@IFunctionHandler_@int.html","  ! &#160;"],
["SetSlotPos","CScriptBind_Entity__SetSlotPos@IFunctionHandler_@int@Vec3.html","  ! &#160;"],
["SetSlotPosAndDir","CScriptBind_Entity__SetSlotPosAndDir@IFunctionHandler_@int@Vec3@Vec3.html","  ! &#160;"],
["SetSlotScale","CScriptBind_Entity__SetSlotScale@IFunctionHandler_@int@float.html","  ! &#160;"],
["SetSlotScaleAsymmetric","CScriptBind_Entity__SetSlotScaleAsymmetric@IFunctionHandler_@int@float@float@float.html","  ! &#160;"],
["SetSlotWorldTM","CScriptBind_Entity__SetSlotWorldTM@IFunctionHandler_@int@Vec3@Vec3.html","  ! &#160;"],
["SetStateClientside","CScriptBind_Entity__SetStateClientside@IFunctionHandler_.html","  ! &#160;"],
["SetTimer","CScriptBind_Entity__SetTimer@IFunctionHandler_.html","  ! &#160;"],
["SetTriggerBBox","CScriptBind_Entity__SetTriggerBBox@IFunctionHandler_@Vec3@Vec3.html","  ! &#160;"],
["SetUpdatePolicy","CScriptBind_Entity__SetUpdatePolicy@IFunctionHandler_@int.html","  ! &#160;"],
["SetUpdateRadius","CScriptBind_Entity__SetUpdateRadius@IFunctionHandler_.html","  ! &#160;"],
["SetVelocity","CScriptBind_Entity__SetVelocity@IFunctionHandler_@Vec3.html","  ! &#160;"],
["SetVelocityEx","CScriptBind_Entity__SetVelocityEx@IFunctionHandler_@Vec3@Vec3.html","  ! &#160;"],
["SetViewDistRatio","CScriptBind_Entity__SetViewDistRatio@IFunctionHandler_.html","  ! &#160;"],
["SetViewDistUnlimited","CScriptBind_Entity__SetViewDistUnlimited@IFunctionHandler_.html","  ! &#160;"],
["SetVolumeObjectMovementProperties","CScriptBind_Entity__SetVolumeObjectMovementProperties@IFunctionHandler_@int@SmartScriptTable.html","  ! &#160;"],
["SetWorldAngles","CScriptBind_Entity__SetWorldAngles@IFunctionHandler_@Ang3.html","  ! &#160;"],
["SetWorldPos","CScriptBind_Entity__SetWorldPos@IFunctionHandler_@Vec3.html","  ! &#160;"],
["SetWorldScale","CScriptBind_Entity__SetWorldScale@IFunctionHandler_@float.html","  ! &#160;"],
["StartAnimation","CScriptBind_Entity__StartAnimation@IFunctionHandler_.html","  ! &#160;"],
["StopAnimation","CScriptBind_Entity__StopAnimation@IFunctionHandler_@int@int.html","  ! &#160;"],
["StopAudioTrigger","CScriptBind_Entity__StopAudioTrigger@IFunctionHandler_@ScriptHandle_const@ScriptHandle_const.html","  ! &#160;"],
["ToGlobal","CScriptBind_Entity__ToGlobal@IFunctionHandler_@int@Vec3.html","  ! &#160;"],
["ToLocal","CScriptBind_Entity__ToLocal@IFunctionHandler_@int@Vec3.html","  ! &#160;"],
["TriggerEvent","CScriptBind_Entity__TriggerEvent@IFunctionHandler_.html","  ! &#160;"],
["UnSeenFrames","CScriptBind_Entity__UnSeenFrames@IFunctionHandler_.html","  ! &#160;"],
["UpdateAreas","CScriptBind_Entity__UpdateAreas@IFunctionHandler_.html","  ! &#160;"],
["UpdateLightClipBounds","CScriptBind_Entity__UpdateLightClipBounds@IFunctionHandler_@int.html","  ! &#160;"],
["UpdateSlotPhysics","CScriptBind_Entity__UpdateSlotPhysics@IFunctionHandler_@int.html","  ! &#160;"],
["VectorToGlobal","CScriptBind_Entity__VectorToGlobal@IFunctionHandler_@int@Vec3.html","  ! &#160;"],
["VectorToLocal","CScriptBind_Entity__VectorToLocal@IFunctionHandler_@int@Vec3.html","  ! &#160;"],
["DelegateCalls","CScriptBind_Entity__DelegateCalls@IScriptTable_.html","  &#160;"],
["GetMemoryUsage","CScriptBind_Entity__GetMemoryUsage@ICrySizer_@const.html","  This is GetMemoryUsage, a member of class CScriptBind_Entity.&#160;"],
["GoalParamsHelper","CScriptBind_Entity__GoalParamsHelper@IFunctionHandler_@uint32@GoalParams_.html","  This is GoalParamsHelper, a member of class CScriptBind_Entity.&#160;"],
["CScriptBind_Movie Class","CScriptBind_Movie.html",""],
["AbortSequence","CScriptBind_Movie__AbortSequence@IFunctionHandler_@char_.html","  ! &#160;"],
["GetMemoryUsage","CScriptBind_Movie__GetMemoryUsage@ICrySizer_@const.html","  This is GetMemoryUsage, a member of class CScriptBind_Movie.&#160;"],
["PauseSequences","CScriptBind_Movie__PauseSequences@IFunctionHandler_.html","  ! &#160;"],
["PlaySequence","CScriptBind_Movie__PlaySequence@IFunctionHandler_@char_.html","  ! &#160;"],
["ResumeSequences","CScriptBind_Movie__ResumeSequences@IFunctionHandler_.html","  ! &#160;"],
["StopAllCutScenes","CScriptBind_Movie__StopAllCutScenes@IFunctionHandler_.html","  ! &#160;"],
["StopAllSequences","CScriptBind_Movie__StopAllSequences@IFunctionHandler_.html","  ! &#160;"],
["StopSequence","CScriptBind_Movie__StopSequence@IFunctionHandler_@char_.html","  ! &#160;"],
["CScriptBind_Particle Class","CScriptBind_Particle.html",""],
["Attach","CScriptBind_Particle__Attach@IFunctionHandler_.html","  ! &#160;"],
["CreateDecal","CScriptBind_Particle__CreateDecal@IFunctionHandler_@Vec3@Vec3@float@float@char_.html","  ! &#160;"],
["CreateEffect","CScriptBind_Particle__CreateEffect@IFunctionHandler_@char_@SmartScriptTable.html","  ! &#160;"],
["CreateMatDecal","CScriptBind_Particle__CreateMatDecal@IFunctionHandler_@Vec3@Vec3@float@float@char_.html","  ! &#160;"],
["DeleteEffect","CScriptBind_Particle__DeleteEffect@IFunctionHandler_@char_.html","  ! &#160;"],
["Detach","CScriptBind_Particle__Detach@IFunctionHandler_.html","  ! &#160;"],
["GetMemoryUsage","CScriptBind_Particle__GetMemoryUsage@ICrySizer_@const.html","  This is GetMemoryUsage, a member of class CScriptBind_Particle.&#160;"],
["IsEffectAvailable","CScriptBind_Particle__IsEffectAvailable@IFunctionHandler_@char_.html","  ! &#160;"],
["SpawnEffect","CScriptBind_Particle__SpawnEffect@IFunctionHandler_@char_@Vec3@Vec3.html","  ! &#160;"],
["SpawnEffectLine","CScriptBind_Particle__SpawnEffectLine@IFunctionHandler_@char_@Vec3@Vec3@Vec3@float@int.html","  ! &#160;"],
["SpawnParticles","CScriptBind_Particle__SpawnParticles@IFunctionHandler_@SmartScriptTable@Vec3@Vec3.html","  ! &#160;"],
["CScriptBindPhysics Class","CScriptBindPhysics.html",""],
["GetMemoryUsage","CScriptBindPhysics__GetMemoryUsage@ICrySizer_@const.html","  This is GetMemoryUsage, a member of class CScriptBindPhysics.&#160;"],
["RayTraceCheck","CScriptBindPhysics__RayTraceCheck@IFunctionHandler_@Vec3@Vec3@ScriptHandle@ScriptHandle.html","  ! &#160;"],
["RayWorldIntersection","CScriptBindPhysics__RayWorldIntersection@IFunctionHandler_.html","  ! &#160;"],
["RegisterExplosionCrack","CScriptBindPhysics__RegisterExplosionCrack@IFunctionHandler_@char_@int.html","  ! &#160;"],
["RegisterExplosionShape","CScriptBindPhysics__RegisterExplosionShape@IFunctionHandler_@char_@float@int@float@char_@float@char_.html","  ! &#160;"],
["SamplePhysEnvironment","CScriptBindPhysics__SamplePhysEnvironment@IFunctionHandler_.html","  ! &#160;"],
["SimulateExplosion","CScriptBindPhysics__SimulateExplosion@IFunctionHandler_@SmartScriptTable.html","  ! &#160;"],
["CScriptBind_Script Class","CScriptBind_Script.html",""],
["DumpLoadedScripts","CScriptBind_Script__DumpLoadedScripts@IFunctionHandler_.html","  ! &#160;"],
["GetMemoryUsage","CScriptBind_Script__GetMemoryUsage@ICrySizer_@const.html","  This is GetMemoryUsage, a member of class CScriptBind_Script.&#160;"],
["KillTimer","CScriptBind_Script__KillTimer@IFunctionHandler_@ScriptHandle.html","  ! &#160;"],
["LoadScript","CScriptBind_Script__LoadScript@IFunctionHandler_.html","  ! &#160;"],
["ReloadEntityScript","CScriptBind_Script__ReloadEntityScript@IFunctionHandler_@char_.html","  ! &#160;"],
["ReloadScript","CScriptBind_Script__ReloadScript@IFunctionHandler_.html","  ! &#160;"],
["ReloadScripts","CScriptBind_Script__ReloadScripts@IFunctionHandler_.html","  ! &#160;"],
["SetTimer","CScriptBind_Script__SetTimer@IFunctionHandler_@int@HSCRIPTFUNCTION.html","  ! &#160;"],
["SetTimerForFunction","CScriptBind_Script__SetTimerForFunction@IFunctionHandler_@int@char_.html","  ! &#160;"],
["UnloadScript","CScriptBind_Script__UnloadScript@IFunctionHandler_.html","  ! &#160;"],
["CScriptBind_Sound Class","CScriptBind_Sound.html",""],
["GetAudioEnvironmentID","CScriptBind_Sound__GetAudioEnvironmentID@IFunctionHandler_@char_const__const.html","  ! &#160;"],
["GetAudioRtpcID","CScriptBind_Sound__GetAudioRtpcID@IFunctionHandler_@char_const__const.html","  ! &#160;"],
["GetAudioSwitchID","CScriptBind_Sound__GetAudioSwitchID@IFunctionHandler_@char_const__const.html","  ! &#160;"],
["GetAudioSwitchStateID","CScriptBind_Sound__GetAudioSwitchStateID@IFunctionHandler_@ScriptHandle_const@char_const__const.html","  ! &#160;"],
["GetAudioTriggerID","CScriptBind_Sound__GetAudioTriggerID@IFunctionHandler_@char_const__const.html","  ! &#160;"],
["GetMemoryUsage","CScriptBind_Sound__GetMemoryUsage@ICrySizer_@const.html","  This is GetMemoryUsage, a member of class CScriptBind_Sound.&#160;"],
["SetAudioRtpcValue","CScriptBind_Sound__SetAudioRtpcValue@IFunctionHandler_@ScriptHandle_const@float_const.html","  ! &#160;"],
["CScriptBind_System Class","CScriptBind_System.html",""],
["ActivateLight","CScriptBind_System__ActivateLight@IFunctionHandler_.html","  DOC-IGNORE-BEGIN ! &#160;"],
["ActivatePortal","CScriptBind_System__ActivatePortal@IFunctionHandler_.html","  ! &#160;"],
["AddCCommand","CScriptBind_System__AddCCommand@IFunctionHandler_.html","  ! &#160;"],
["ApplicationTest","CScriptBind_System__ApplicationTest@IFunctionHandler_.html","  ! &#160;"],
["ApplyForceToEnvironment","CScriptBind_System__ApplyForceToEnvironment@IFunctionHandler_.html","  ! &#160;"],
["Break","CScriptBind_System__Break@IFunctionHandler_.html","  ! &#160;"],
["BrowseURL","CScriptBind_System__BrowseURL@IFunctionHandler_.html","  ! &#160;"],
["CheckHeapValid","CScriptBind_System__CheckHeapValid@IFunctionHandler_.html","  ! &#160;"],
["ClearConsole","CScriptBind_System__ClearConsole@IFunctionHandler_.html","  ! &#160;"],
["ClearKeyState","CScriptBind_System__ClearKeyState@IFunctionHandler_.html","  ! &#160;"],
["CreateDownload","CScriptBind_System__CreateDownload@IFunctionHandler_.html","  ! &#160;"],
["DebugStats","CScriptBind_System__DebugStats@IFunctionHandler_.html","  ! &#160;"],
["DeformTerrain","CScriptBind_System__DeformTerrain@IFunctionHandler_.html","  ! &#160;"],
["DeformTerrainUsingMat","CScriptBind_System__DeformTerrainUsingMat@IFunctionHandler_.html","  ! &#160;"],
["Draw2DLine","CScriptBind_System__Draw2DLine@IFunctionHandler_.html","  ! &#160;"],
["DrawLabel","CScriptBind_System__DrawLabel@IFunctionHandler_.html","  ! &#160;"],
["DrawLine","CScriptBind_System__DrawLine@IFunctionHandler_.html","  ! &#160;"],
["DrawText","CScriptBind_System__DrawText@IFunctionHandler_.html","  ! &#160;"],
["DrawTriStrip","CScriptBind_System__DrawTriStrip@IFunctionHandler_.html","  ! &#160;"],
["DumpMemoryCoverage","CScriptBind_System__DumpMemoryCoverage@IFunctionHandler_.html","  ! &#160;"],
["DumpMemStats","CScriptBind_System__DumpMemStats@IFunctionHandler_.html","  ! &#160;"],
["DumpMMStats","CScriptBind_System__DumpMMStats@IFunctionHandler_.html","  ! &#160;"],
["DumpWinHeaps","CScriptBind_System__DumpWinHeaps@IFunctionHandler_.html","  ! &#160;"],
["EnableHeatVision","CScriptBind_System__EnableHeatVision@IFunctionHandler_.html","  DOC-IGNORE-BEGIN ! &#160;"],
["EnableMainView","CScriptBind_System__EnableMainView@IFunctionHandler_.html","  DOC-IGNORE-BEGIN ! &#160;"],
["EnableOceanRendering","CScriptBind_System__EnableOceanRendering@IFunctionHandler_.html","  ! &#160;"],
["EnumAAFormats","CScriptBind_System__EnumAAFormats@IFunctionHandler_.html","  ! &#160;"],
["EnumDisplayFormats","CScriptBind_System__EnumDisplayFormats@IFunctionHandler_.html","  ! &#160;"],
["Error","CScriptBind_System__Error@IFunctionHandler_.html","  ! &#160;"],
["ExecuteCommand","CScriptBind_System__ExecuteCommand@IFunctionHandler_.html","  ! &#160;"],
["GetArchetypeProperties","CScriptBind_System__GetArchetypeProperties@IFunctionHandler_@char_const_.html","  Syntax: System.GetArchetypeProperties() Returns property table for selected archetype. &#160;"],
["GetConfigSpec","CScriptBind_System__GetConfigSpec@IFunctionHandler_.html","  ! &#160;"],
["GetCurrAsyncTime","CScriptBind_System__GetCurrAsyncTime@IFunctionHandler_.html","  ! &#160;"],
["GetCurrTime","CScriptBind_System__GetCurrTime@IFunctionHandler_.html","  ! &#160;"],
["GetCVar","CScriptBind_System__GetCVar@IFunctionHandler_.html","  ! &#160;"],
["GetEntities","CScriptBind_System__GetEntities@IFunctionHandler_.html","  ! &#160;"],
["GetEntitiesByClass","CScriptBind_System__GetEntitiesByClass@IFunctionHandler_@char_.html","  ! &#160;"],
["GetEntitiesInSphere","CScriptBind_System__GetEntitiesInSphere@IFunctionHandler_@Vec3@float.html","  ! &#160;"],
["GetEntitiesInSphereByClass","CScriptBind_System__GetEntitiesInSphereByClass@IFunctionHandler_@Vec3@float@char_.html","  ! &#160;"],
["GetEntity","CScriptBind_System__GetEntity@IFunctionHandler_.html","  ! &#160;"],
["GetEntityByGUID","CScriptBind_System__GetEntityByGUID@IFunctionHandler_@SmartScriptTable.html","  Syntax: System.GetEntityByGUID( SmartScriptTable dataTable ) Retrieve entity table for the first entity withe the given EntityGUID&#160;"],
["GetEntityByName","CScriptBind_System__GetEntityByName@IFunctionHandler_@char_.html","  ! &#160;"],
["GetEntityByTextGUID","CScriptBind_System__GetEntityByTextGUID@IFunctionHandler_@char_const_.html","  Syntax: System.GetEntityByTextGUID( entityGuid ) Retrieve entity with the given entityGUID&#160;"],
["GetEntityClass","CScriptBind_System__GetEntityClass@IFunctionHandler_.html","  ! &#160;"],
["GetEntityIdByName","CScriptBind_System__GetEntityIdByName@IFunctionHandler_@char_.html","  ! &#160;"],
["GetFrameID","CScriptBind_System__GetFrameID@IFunctionHandler_.html","  ! &#160;"],
["GetFrameTime","CScriptBind_System__GetFrameTime@IFunctionHandler_.html","  ! &#160;"],
["GetHDRDynamicMultiplier","CScriptBind_System__GetHDRDynamicMultiplier@IFunctionHandler_.html","  ! &#160;"],
["GetLocalOSTime","CScriptBind_System__GetLocalOSTime@IFunctionHandler_.html","  ! &#160;"],
["GetMemoryUsage","CScriptBind_System__GetMemoryUsage@ICrySizer_@const.html","  This is GetMemoryUsage, a member of class CScriptBind_System.&#160;"],
["GetNearestEntityByClass","CScriptBind_System__GetNearestEntityByClass@IFunctionHandler_@Vec3@float@char_.html","  ! &#160;"],
["GetNearestEntityByName","CScriptBind_System__GetNearestEntityByName@IFunctionHandler_@char_.html","  ! &#160;"],
["GetOutdoorAmbientColor","CScriptBind_System__GetOutdoorAmbientColor@IFunctionHandler_.html","  ! &#160;"],
["GetPhysicalEntitiesInBox","CScriptBind_System__GetPhysicalEntitiesInBox@IFunctionHandler_@Vec3@float.html","  ! &#160;"],
["GetPhysicalEntitiesInBoxByClass","CScriptBind_System__GetPhysicalEntitiesInBoxByClass@IFunctionHandler_@Vec3@float@char_.html","  ! &#160;"],
["GetPostProcessFxParam","CScriptBind_System__GetPostProcessFxParam@IFunctionHandler_.html","  ! &#160;"],
["GetScreenFx","CScriptBind_System__GetScreenFx@IFunctionHandler_.html","  ! &#160;"],
["GetSkyColor","CScriptBind_System__GetSkyColor@IFunctionHandler_.html","  ! &#160;"],
["GetSkyHighlight","CScriptBind_System__GetSkyHighlight@IFunctionHandler_@SmartScriptTable.html","  ! &#160;"],
["GetSunColor","CScriptBind_System__GetSunColor@IFunctionHandler_.html","  ! &#160;"],
["GetSurfaceTypeIdByName","CScriptBind_System__GetSurfaceTypeIdByName@IFunctionHandler_@char_.html","  ! &#160;"],
["GetSurfaceTypeNameById","CScriptBind_System__GetSurfaceTypeNameById@IFunctionHandler_@int.html","  ! &#160;"],
["GetSystemMem","CScriptBind_System__GetSystemMem@IFunctionHandler_.html","  ! &#160;"],
["GetTerrainElevation","CScriptBind_System__GetTerrainElevation@IFunctionHandler_.html","  ! &#160;"],
["GetUserName","CScriptBind_System__GetUserName@IFunctionHandler_.html","  ! &#160;"],
["GetViewCameraAngles","CScriptBind_System__GetViewCameraAngles@IFunctionHandler_.html","  ! &#160;"],
["GetViewCameraDir","CScriptBind_System__GetViewCameraDir@IFunctionHandler_.html","  ! &#160;"],
["GetViewCameraFov","CScriptBind_System__GetViewCameraFov@IFunctionHandler_.html","  ! &#160;"],
["GetViewCameraPos","CScriptBind_System__GetViewCameraPos@IFunctionHandler_.html","  ! &#160;"],
["GetViewCameraUpDir","CScriptBind_System__GetViewCameraUpDir@IFunctionHandler_.html","  ! &#160;"],
["GetViewport","CScriptBind_System__GetViewport@IFunctionHandler_.html","  ! &#160;"],
["GetWind","CScriptBind_System__GetWind@IFunctionHandler_.html","  ! &#160;"],
["IsDevModeEnable","CScriptBind_System__IsDevModeEnable@IFunctionHandler_.html","  ! &#160;"],
["IsEditing","CScriptBind_System__IsEditing@IFunctionHandler_.html","  ! &#160;"],
["IsEditor","CScriptBind_System__IsEditor@IFunctionHandler_.html","  ! &#160;"],
["IsFileExist","CScriptBind_System__IsFileExist@IFunctionHandler_@char_.html","  ! &#160;"],
["IsHDRSupported","CScriptBind_System__IsHDRSupported@IFunctionHandler_.html","  ! &#160;"],
["IsMultiplayer","CScriptBind_System__IsMultiplayer@IFunctionHandler_.html","  ! &#160;"],
["IsPointIndoors","CScriptBind_System__IsPointIndoors@IFunctionHandler_.html","  ! &#160;"],
["IsPointVisible","CScriptBind_System__IsPointVisible@IFunctionHandler_@Vec3.html","  ! &#160;"],
["IsPS20Supported","CScriptBind_System__IsPS20Supported@IFunctionHandler_.html","  ! &#160;"],
["IsValidMapPos","CScriptBind_System__IsValidMapPos@IFunctionHandler_.html","  ! &#160;"],
["LoadFont","CScriptBind_System__LoadFont@IFunctionHandler_.html","  ! &#160;"],
["LoadLocalizationXml","CScriptBind_System__LoadLocalizationXml@IFunctionHandler_@char_.html","  ! &#160;"],
["LoadTextFile","CScriptBind_System__LoadTextFile@IFunctionHandler_@char_.html","  ! &#160;"],
["Log","CScriptBind_System__Log@IFunctionHandler_.html","  ! &#160;"],
["LogAlways","CScriptBind_System__LogAlways@IFunctionHandler_.html","  ! &#160;"],
["LogToConsole","CScriptBind_System__LogToConsole@IFunctionHandler_.html","  ! &#160;"],
["PrepareEntityFromPool","CScriptBind_System__PrepareEntityFromPool@IFunctionHandler_.html","  ! &#160;"],
["ProjectToScreen","CScriptBind_System__ProjectToScreen@IFunctionHandler_@Vec3.html","  ! &#160;"],
["Quit","CScriptBind_System__Quit@IFunctionHandler_.html","  ! &#160;"],
["QuitInNSeconds","CScriptBind_System__QuitInNSeconds@IFunctionHandler_.html","  ! &#160;"],
["RayTraceCheck","CScriptBind_System__RayTraceCheck@IFunctionHandler_.html","  ! &#160;"],
["RayWorldIntersection","CScriptBind_System__RayWorldIntersection@IFunctionHandler_.html","  ! &#160;"],
["RemoveEntity","CScriptBind_System__RemoveEntity@IFunctionHandler_@ScriptHandle.html","  ! &#160;"],
["ResetPoolEntity","CScriptBind_System__ResetPoolEntity@IFunctionHandler_.html","  ! &#160;"],
["ReturnEntityToPool","CScriptBind_System__ReturnEntityToPool@IFunctionHandler_.html","  ! &#160;"],
["ScanDirectory","CScriptBind_System__ScanDirectory@IFunctionHandler_.html","  ! &#160;"],
["ScreenToTexture","CScriptBind_System__ScreenToTexture@IFunctionHandler_.html","  ! &#160;"],
["SetBudget","CScriptBind_System__SetBudget@IFunctionHandler_.html","  ! &#160;"],
["SetConsoleImage","CScriptBind_System__SetConsoleImage@IFunctionHandler_.html","  ! &#160;"],
["SetCVar","CScriptBind_System__SetCVar@IFunctionHandler_.html","  ! &#160;"],
["SetGammaDelta","CScriptBind_System__SetGammaDelta@IFunctionHandler_.html","  ! &#160;"],
["SetHDRDynamicMultiplier","CScriptBind_System__SetHDRDynamicMultiplier@IFunctionHandler_.html","  ! &#160;"],
["SetOutdoorAmbientColor","CScriptBind_System__SetOutdoorAmbientColor@IFunctionHandler_.html","  ! &#160;"],
["SetPostProcessFxParam","CScriptBind_System__SetPostProcessFxParam@IFunctionHandler_.html","  ! &#160;"],
["SetScissor","CScriptBind_System__SetScissor@IFunctionHandler_.html","  ! &#160;"],
["SetScreenFx","CScriptBind_System__SetScreenFx@IFunctionHandler_.html","  ! &#160;"],
["SetSkyColor","CScriptBind_System__SetSkyColor@IFunctionHandler_@Vec3.html","  ! &#160;"],
["SetSkyHighlight","CScriptBind_System__SetSkyHighlight@IFunctionHandler_@SmartScriptTable.html","  ! &#160;"],
["SetSunColor","CScriptBind_System__SetSunColor@IFunctionHandler_@Vec3.html","  ! &#160;"],
["SetViewCameraFov","CScriptBind_System__SetViewCameraFov@IFunctionHandler_@float.html","  ! &#160;"],
["SetVolumetricFogModifiers","CScriptBind_System__SetVolumetricFogModifiers@IFunctionHandler_.html","  ! &#160;"],
["SetWaterVolumeOffset","CScriptBind_System__SetWaterVolumeOffset@IFunctionHandler_.html","  ! &#160;"],
["SetWind","CScriptBind_System__SetWind@IFunctionHandler_.html","  ! &#160;"],
["ShowConsole","CScriptBind_System__ShowConsole@IFunctionHandler_.html","  ! &#160;"],
["ShowDebugger","CScriptBind_System__ShowDebugger@IFunctionHandler_.html","  ! &#160;"],
["SpawnEntity","CScriptBind_System__SpawnEntity@IFunctionHandler_@SmartScriptTable.html","  ! &#160;"],
["ViewDistanceGet","CScriptBind_System__ViewDistanceGet@IFunctionHandler_.html","  ! &#160;"],
["ViewDistanceSet","CScriptBind_System__ViewDistanceSet@IFunctionHandler_.html","  ! &#160;"],
["Warning","CScriptBind_System__Warning@IFunctionHandler_.html","  ! &#160;"],
["C_ScriptBindGameCodeCoverage Class","C_ScriptBindGameCodeCoverage.html",""],
["CheckNumCCCPointHits","C_ScriptBindGameCodeCoverage__CheckNumCCCPointHits@IFunctionHandler__@char_const__.html","  Syntax: GameCodeCoverage.CheckNumCCCPointHits(&quot;ActorStance_OtherActorStartHorse&quot;);&#160;"],
["EnableReportUnwatched","C_ScriptBindGameCodeCoverage__EnableReportUnwatched@IFunctionHandler__@bool.html","  Syntax: GameCodeCoverage.EnableReportUnwatched(true);&#160;"],
["GetMemoryUsage","C_ScriptBindGameCodeCoverage__GetMemoryUsage@ICrySizer__@const.html","  This is GetMemoryUsage, a member of class C_ScriptBindGameCodeCoverage.&#160;"],
["Reset","C_ScriptBindGameCodeCoverage__Reset@IFunctionHandler__.html","  Syntax: GameCodeCoverage.Reset();&#160;"],
["ResetCCCPointHitCounters","C_ScriptBindGameCodeCoverage__ResetCCCPointHitCounters@IFunctionHandler__@char_const__.html","  Syntax: GameCodeCoverage.ResetCCCPointHitCounters(&quot;ActorStance_OtherActorStartHorse&quot;);&#160;"],
["SCCPOINT","C_ScriptBindGameCodeCoverage__SCCPOINT@IFunctionHandler_@char_const_.html","  Syntax: GameCodeCoverage.SCCPOINT(&quot;MyPoint_ProximityTrigger_OnEntered&quot;);&#160;"],
["SCCPOINTID","C_ScriptBindGameCodeCoverage__SCCPOINTID@IFunctionHandler_@char_const_@int.html","  Syntax: GameCodeCoverage.SCCPOINTID(&quot;MyPoint_ProximityTrigger_OnEntered&quot;, idx); Same as SCCPOINT but will pas one additional user index to callback. &#160;"],
["WatchCCCPoint","C_ScriptBindGameCodeCoverage__WatchCCCPoint@IFunctionHandler__@char_const__@SmartScriptTable.html","  Syntax: GameCodeCoverage.WatchCCCPoint(&quot;ActorStance_OtherActorStartHorse&quot;, {});&#160;"],
["Trace","C_ScriptBindTrace.html",""],
["GetMemoryUsage","C_ScriptBindTrace__GetMemoryUsage@ICrySizer__@const.html","  This is GetMemoryUsage, a member of class C_ScriptBindTrace.&#160;"],
["Msg","C_ScriptBindTrace__Msg@IFunctionHandler__@int@char__.html","  This is Msg, a member of class C_ScriptBindTrace.&#160;"],
["PlotXY","C_ScriptBindTrace__PlotXY@IFunctionHandler__@int@float@float@char_const__.html","  Syntax: Trace.PlotXY(level, x, y, tag)&#160;"],
["RegisterGlobals","C_ScriptBindTrace__RegisterGlobals.html","  This is RegisterGlobals, a member of class C_ScriptBindTrace.&#160;"],
["RegisterMethods","C_ScriptBindTrace__RegisterMethods.html","  This is RegisterMethods, a member of class C_ScriptBindTrace.&#160;"],
["TableXY","C_ScriptBindTrace__TableXY@IFunctionHandler__@int@float@float@char_const__.html","  This is TableXY, a member of class C_ScriptBindTrace.&#160;"],
["TRACELEVEL_ENUM","C_ScriptBindTrace__TRACELEVEL_ENUM@FW_TRACE_DEF_LVL_MSG.html","  This is TRACELEVEL_ENUM, a member of class C_ScriptBindTrace.&#160;"],
["C_ScriptBindVariables Class","C_ScriptBindVariables.html",""],
["CreateContext","C_ScriptBindVariables__CreateContext@IFunctionHandler__@char_const_.html","  returns Id of context &#160;"],
["DecrementGlobal","C_ScriptBindVariables__DecrementGlobal@IFunctionHandler__@char_const_.html","  &#160;"],
["DecrementLocal","C_ScriptBindVariables__DecrementLocal@IFunctionHandler__@char_const_@int.html","  &#160;"],
["DestroyContext","C_ScriptBindVariables__DestroyContext@IFunctionHandler__@int.html","  &#160;"],
["DiscardContextVariables","C_ScriptBindVariables__DiscardContextVariables@IFunctionHandler__@int.html","  &#160;"],
["GetGlobal","C_ScriptBindVariables__GetGlobal@IFunctionHandler__@char_const_.html","  &#160;"],
["GetLocal","C_ScriptBindVariables__GetLocal@IFunctionHandler__@char_const_@int.html","  &#160;"],
["IncrementGlobal","C_ScriptBindVariables__IncrementGlobal@IFunctionHandler__@char_const_.html","  &#160;"],
["IncrementLocal","C_ScriptBindVariables__IncrementLocal@IFunctionHandler__@char_const_@int.html","  &#160;"],
["SetGlobal","C_ScriptBindVariables__SetGlobal@IFunctionHandler__@char_const_@T_ExpressionValueType.html","  &#160;"],
["SetLocal","C_ScriptBindVariables__SetLocal@IFunctionHandler__@char_const_@int@T_ExpressionValueType.html","  &#160;"],
["C_ScriptBindFramework Class","C_ScriptBindFramework.html",""],
["Expr","C_ScriptBindFramework__Expr@IFunctionHandler__@char_const_.html","  Syntax: Framework.Expr(expression) Evaluates expression, output is written to console &#160;"],
["IsValidWUID","C_ScriptBindFramework__IsValidWUID@IFunctionHandler__@T_WUIDScriptType.html","  Syntax: Framework.IsValidWUID(wuid) Returns true if the argument is not equal to the INVALID_WUID C++ constant.&#160;"],
["ScriptHandlerToString","C_ScriptBindFramework__ScriptHandlerToString@IFunctionHandler__.html","  Syntax: Framework.ScriptHandlerToString(sriptHandle) Returns string. In case &quot;sriptHandle&quot; is nil the empty string is returned. &#160;"],
["WUIDToMsg","C_ScriptBindFramework__WUIDToMsg@IFunctionHandler__@T_WUIDScriptType.html","  Syntax: Framework.WUIDToMsg(wuid) Returns string suitable for AI message.&#160;"],
["WUIDToString","C_ScriptBindFramework__WUIDToString@IFunctionHandler__@T_WUIDScriptType.html","  Syntax: Framework.WUIDToString(wuid) Returns more human readable representation of wuid.&#160;"],
["WUIDToUI","C_ScriptBindFramework__WUIDToUI@IFunctionHandler__@T_WUIDScriptType.html","  Syntax: Framework.WUIDToUI(wuid) Returns wuid representation for UI (string). &#160;"],
["C_ScriptBindDatabase Class","C_ScriptBindDatabase.html",""],
["GetColumnInfo","C_ScriptBindDatabase__GetColumnInfo@IFunctionHandler__@char_const_@int.html","  Syntax: Database.GetColumnInfo(&quot;weapons&quot;, 2) Returns lua table with description of one column. &#160;"],
["GetTableColumnData","C_ScriptBindDatabase__GetTableColumnData@IFunctionHandler__@char_const_@int.html","  Syntax: Database.GetTableColumnData(&quot;weapons&quot;, 2) Returns lua table with members of one table column &#160;"],
["GetTableInfo","C_ScriptBindDatabase__GetTableInfo@IFunctionHandler__@char_const_.html","  Syntax: Database.GetTableInfo(&quot;weapons&quot;) Returns lua table with C_Table properties. &#160;"],
["GetTableLine","C_ScriptBindDatabase__GetTableLine@IFunctionHandler__@char_const_@int.html","  Syntax: Database.GetTableLine(&quot;weapons&quot;, 5) Returns lua table with members of one data line. &#160;"],
["LoadTable","C_ScriptBindDatabase__LoadTable@IFunctionHandler__@char_const_.html","  Syntax: Database.LoadTable(&quot;weapons&quot;) Loads or reloads table. Returns true if table is loaded. &#160;"],
["C_ScriptBindDialog Class","C_ScriptBindDialog.html",""],
["AnalyzeRequest","C_ScriptBindDialog__AnalyzeRequest@IFunctionHandler__.html","  Syntax: DialogModule.AnalyzeRequest() Analyze dialog request situation. Checks if entities are in correct distance and facing correct directions. &#160;"],
["ForceDialog","C_ScriptBindDialog__ForceDialog@IFunctionHandler__@ScriptHandle@ScriptHandle.html","  Syntax: DialogModule.ForceDialog() Start dialog between selected entities. This should not be used in standard situations. It overrides AI and does not care about entity positioning. &#160;"],
["IsDialogInterruptibleByPlayer","C_ScriptBindDialog__IsDialogInterruptibleByPlayer@IFunctionHandler__@framework__T_WUIDScriptType.html","  Syntax: DialogModule.IsDialogInterruptibleByPlayer(wuid) return whether soul can be interrupted by another dialog from player &#160;"],
["IsSequenceAvailable","C_ScriptBindDialog__IsSequenceAvailable@IFunctionHandler_@wh__dialogmodule__T_SequenceId.html","  Syntax: DialogModule.IsSequenceAvailable(12345) return true if sequence is not on cool down &#160;"],
["IsSequenceUsed","C_ScriptBindDialog__IsSequenceUsed@IFunctionHandler_@wh__dialogmodule__T_SequenceId.html","  Syntax: DialogModule.IsSequenceUsed(12345) return true if sequence was selected at last once &#160;"],
["IsSoulInDialog","C_ScriptBindDialog__IsSoulInDialog@IFunctionHandler__@framework__T_WUIDScriptType.html","  Syntax: DialogModule.IsSoulInDialog(soulWuid) return whether soul is currently in some dialog &#160;"],
["ResetHaggle","C_ScriptBindDialog__ResetHaggle@IFunctionHandler__.html","  Syntax: DialogModule.ResetHaggle() Resets haggle attributes. Please call this at the end of every haggle otherwise ended haggle can interfered into future one &#160;"],
["ResetHaveDialogCache","C_ScriptBindDialog__ResetHaveDialogCache@IFunctionHandler__.html","  Syntax: DialogModule.ResetHaveDialogCache() reset have dialog cache so NPC will evaluate dialog options next time interactor asks for it &#160;"],
["ResetSequenceTimer","C_ScriptBindDialog__ResetSequenceTimer@IFunctionHandler_@wh__dialogmodule__T_SequenceId.html","  Syntax: DialogModule.ResetSequenceTimer(12345) resets sequence cool down and used flags &#160;"],
["SetAIInteractionState","C_ScriptBindDialog__SetAIInteractionState@IFunctionHandler__@framework__T_WUIDScriptType@bool.html","  Syntax: DialogModule.SetAIInteractionState(soulid, true) notifies dialog that it should wait for AI until somebody call this function and set false &#160;"],
["SetPlayerInteractiveState","C_ScriptBindDialog__SetPlayerInteractiveState@IFunctionHandler__@char__.html","  Syntax: DialogModule.SetPlayerInteractiveState(stateName) Sets interactive state for players dialog. StateName must correspond to E_D_InteractiveState enum &#160;"],
["StartMonolog","C_ScriptBindDialog__StartMonolog@IFunctionHandler__@ScriptHandle@T_TopicId.html","  Syntax: DialogModule.StartMonolog(entity, 2258) Start monolog using dialog system. Specific topic can be selected. &#160;"],
["C_ScriptBindInteractiveObject Class","C_ScriptBindInteractiveObject.html",""],
["AbortUse","C_ScriptBindInteractiveObject__AbortUse@IFunctionHandler__.html","  This is AbortUse, a member of class C_ScriptBindInteractiveObject.&#160;"],
["AttachTo","C_ScriptBindInteractiveObject__AttachTo@C_InteractiveObjectEx__.html","  This is AttachTo, a member of class C_ScriptBindInteractiveObject.&#160;"],
["CanUse","C_ScriptBindInteractiveObject__CanUse@IFunctionHandler__@ScriptHandle.html","  This is CanUse, a member of class C_ScriptBindInteractiveObject.&#160;"],
["Detach","C_ScriptBindInteractiveObject__Detach@EntityId.html","  This is Detach, a member of class C_ScriptBindInteractiveObject.&#160;"],
["GetMemoryUsage","C_ScriptBindInteractiveObject__GetMemoryUsage@ICrySizer__@const.html","  This is GetMemoryUsage, a member of class C_ScriptBindInteractiveObject.&#160;"],
["GetObjectDataRegistry","C_ScriptBindInteractiveObject__GetObjectDataRegistry.html","  This is GetObjectDataRegistry, a member of class C_ScriptBindInteractiveObject.&#160;"],
["StopUse","C_ScriptBindInteractiveObject__StopUse@IFunctionHandler__@ScriptHandle.html","  This is StopUse, a member of class C_ScriptBindInteractiveObject.&#160;"],
["Use","C_ScriptBindInteractiveObject__Use@IFunctionHandler__@ScriptHandle.html","  This is Use, a member of class C_ScriptBindInteractiveObject.&#160;"],
["Actor","C_ScriptBindActor.html",""],
["GetActor","C_ScriptBindActor__GetActor@IFunctionHandler__.html","  &#160;"],
["GetActorId","C_ScriptBindActor__GetActorId@IFunctionHandler__.html","  This is GetActorId, a member of class C_ScriptBindActor.&#160;"],
["AcceptStealthActionByVictim","C_ScriptBindActor__AcceptStealthActionByVictim@IFunctionHandler__.html","  Syntax: Actor.AcceptStealthActionByVictim() Called by victim to accept stealth action. &#160;"],
["AddBlood","C_ScriptBindActor__AddBlood@IFunctionHandler__@char__@float.html","  Syntax: actor:AddBlood(&#39;all&#39;, 1) Adds blood on all equipped items and body in given zone (or all zones). &#160;"],
["AddDirt","C_ScriptBindActor__AddDirt@IFunctionHandler__@float.html","  Syntax: actor:AddDirt(1) Adds dirt on all equipped items. &#160;"],
["AddFrost","C_ScriptBindActor__AddFrost@IFunctionHandler__@float.html","  Syntax: actor.AddFrost( float frost ) Adds the specified frost amount. &#160;"],
["AttachTo","C_ScriptBindActor__AttachTo@C_Actor__.html","  &#160;"],
["AttachVulnerabilityEffect","C_ScriptBindActor__AttachVulnerabilityEffect@IFunctionHandler__@int@int@Vec3@float@char_@char_.html","  Syntax: Actor.AttachVulnerabilityEffect( int characterSlot, int partid, Vec3 hitPos, float radius, const char* effect, const char* attachmentIdentifier) Attaches vulnerability effect. &#160;"],
["CameraShake","C_ScriptBindActor__CameraShake@IFunctionHandler__@float@float@float@Vec3.html","  Syntax: Actor.CameraShake( float amount,float duration,float frequency,Vec3 pos ) Applies a shake movement to the camera.&#160;"],
["CanDoMercyKill","C_ScriptBindActor__CanDoMercyKill@IFunctionHandler__@ScriptHandle.html","  Syntax: Actor.CanDoMercyKill(EntityId victimEntityId) Find out if we actor is allowed to kill another from mercy&#160;"],
["CanGrabCorpse","C_ScriptBindActor__CanGrabCorpse@IFunctionHandler__@ScriptHandle.html","  Syntax: Actor.CanGrabCorpse(EntityId victimEntityId) Returns true if actor can grab vitimEntintyId&#160;"],
["CanHorsePullDown","C_ScriptBindActor__CanHorsePullDown@IFunctionHandler__@ScriptHandle.html","  Syntax: Actor.CanHorsePullDown(EntityId victimEntityId) Find out if we actor is allowed to pull down another actor from horse&#160;"],
["CanHuntAttack","C_ScriptBindActor__CanHuntAttack@IFunctionHandler__@ScriptHandle.html","  Syntax: Actor.CanHuntAttack(EntityId victimEntityId) Find out if we actor is allowed to hunt attack from run&#160;"],
["CanInteractWith","C_ScriptBindActor__CanInteractWith@IFunctionHandler__@ScriptHandle.html","  Syntax: Actor.CanInteractWith() Checks if entity is close enough to interact with another one. Distance is defined by wh_player_TalkInteractorDistance &#160;"],
["CanLoot","C_ScriptBindActor__CanLoot@IFunctionHandler__@ScriptHandle.html","  Syntax: Actor.CanLoot(EntityId victimEntityId) Returns true if actor can loot vitimEntintyId&#160;"],
["CanPutCorpse","C_ScriptBindActor__CanPutCorpse@IFunctionHandler__.html","  Syntax: Actor.CanPutCorpse() Returns true if actor is carrying a corpse and can put it back to the ground &#160;"],
["CanStealthKill","C_ScriptBindActor__CanStealthKill@IFunctionHandler__@ScriptHandle.html","  Combat stealth actions =============================================  Syntax: Actor.CanStealthKill(EntityId victimEntityId) Find out if we actor is allowed to kill given entity by stealth kill&#160;"],
["CanStealthKnockout","C_ScriptBindActor__CanStealthKnockout@IFunctionHandler__@ScriptHandle.html","  Syntax: Actor.CanStealthKnockout(EntityId victimEntityId) Find out if we actor is allowed to knockout given entity by stealth&#160;"],
["CanTalk","C_ScriptBindActor__CanTalk@IFunctionHandler__.html","  Syntax: Actor.CanTalk() Checks if this human have something to say. &#160;"],
["CheckInventoryRestrictions","C_ScriptBindActor__CheckInventoryRestrictions@IFunctionHandler__@char__.html","  Syntax: Actor.CheckInventoryRestrictions( const char *itemClassName ) Checks if there is any restriction in the inventory for the specific item class. &#160;"],
["CheckVirtualInventoryRestrictions","C_ScriptBindActor__CheckVirtualInventoryRestrictions@IFunctionHandler__@SmartScriptTable@char__.html","  Syntax: Actor.CheckVirtualInventoryRestrictions( SmartScriptTable inventory, const char *itemClassName ) Checks if there is any restriction in the virtual inventory for the specific item class. &#160;"],
["CleanDirt","C_ScriptBindActor__CleanDirt@IFunctionHandler__@float.html","  Syntax: actor:CleanDirt(1) Use only when you want to clean somebody programmatically. If you want to clean player after its in-game action, call WashDirtAndBlood instead. Cleans all actor clothes with 0 - 100% cleaning efficiency&#160;"],
["ClearForcedLookDir","C_ScriptBindActor__ClearForcedLookDir@IFunctionHandler__.html","  &#160;"],
["ClearForcedLookObjectId","C_ScriptBindActor__ClearForcedLookObjectId@IFunctionHandler__.html","  &#160;"],
["CreateCodeEvent","C_ScriptBindActor__CreateCodeEvent@IFunctionHandler__@SmartScriptTable.html","  Syntax: Actor.CreateCodeEvent( SmartScriptTable params ) Creates a code event. &#160;"],
["DumpActorInfo","C_ScriptBindActor__DumpActorInfo@IFunctionHandler__.html","  Syntax: Actor.DumpActorInfo() Dumps actor info in the log file. &#160;"],
["EnableAspect","C_ScriptBindActor__EnableAspect@IFunctionHandler__@char__@bool.html","  Syntax: Actor.EnableAspect( const char *aspect, bool enable ) Enables/Disables the specified aspect. &#160;"],
["EquipClothingPreset","C_ScriptBindActor__EquipClothingPreset@IFunctionHandler__@char_const_.html","  Clothing =============================================  Syntax: Actor.EquipClothingPreset( &quot;46ea38bb-0be7-ca10-a8ac-d526056c04b3&quot; ) Clothing preset is equipped to actor. Dirt level of actor is used for new items. Health of equipment slots is ignored. &#160;"],
["EquipInventoryItem","C_ScriptBindActor__EquipInventoryItem@IFunctionHandler__@framework__T_WUIDScriptType.html","  Syntax: Actor.EquipInventoryItem( ScriptHandle itemId ) Equips item from inventory &#160;"],
["EquipWeaponPreset","C_ScriptBindActor__EquipWeaponPreset@IFunctionHandler__@char_const_.html","  Weapon preset =============================================  Syntax: Actor.EquipWeaponPreset( &quot;46ea38bb-0be7-ca10-a8ac-d526056c04b3&quot; ) Weapon preset is equipped to actor. Health of equipment slots is ignored. &#160;"],
["Fall","C_ScriptBindActor__Fall@IFunctionHandler__@Vec3.html","  Syntax: Actor.Fall( Vec3 hitPos ) Makes the actor falling down. &#160;"],
["GetAngles","C_ScriptBindActor__GetAngles@IFunctionHandler__.html","  Syntax: Actor.GetAngles() Gets the rotation angle of the actor.&#160;"],
["GetArmor","C_ScriptBindActor__GetArmor@IFunctionHandler__.html","  Syntax: Actor.GetArmor() Gets the amount of armor. &#160;"],
["GetChannel","C_ScriptBindActor__GetChannel@IFunctionHandler__.html","  Syntax: Actor.GetChannel() Gets network channel. &#160;"],
["GetCloseColliderParts","C_ScriptBindActor__GetCloseColliderParts@IFunctionHandler__@int@Vec3@float.html","  Syntax: Actor.GetCloseColliderParts( int characterSlot, Vec3 hitPos, float radius ) Gets the closer collider parts. &#160;"],
["GetClosestAttachment","C_ScriptBindActor__GetClosestAttachment@IFunctionHandler__@int@Vec3@float@char_.html","  Syntax: Actor.GetClosestAttachment( int characterSlot, Vec3 testPos, float maxDistance, const char* suffix ) Gets the closest attachment to the specified position within the specified distance.&#160;"],
["GetCurrentAnimationState","C_ScriptBindActor__GetCurrentAnimationState@IFunctionHandler__.html","  Syntax: Actor.GetCurrentAnimationState() Gets the state for the current animation. &#160;"],
["GetExtensionParams","C_ScriptBindActor__GetExtensionParams@IFunctionHandler_@char__@SmartScriptTable.html","  Syntax: Actor.GetExtensionParams( const char *extension, SmartScriptTable params ) Gets the parameters for the specified extension. &#160;"],
["GetFrozenAmount","C_ScriptBindActor__GetFrozenAmount@IFunctionHandler__.html","  Syntax: actor.GetFrozenAmount() Gets the frozen amount. &#160;"],
["GetHeadDir","C_ScriptBindActor__GetHeadDir@IFunctionHandler__.html","  Syntax: Actor.GetHeadDir() Gets the the actor&#39;s head direction. has to be changed! (maybe bone position)&#160;"],
["GetHeadPos","C_ScriptBindActor__GetHeadPos@IFunctionHandler__.html","  Syntax: Actor.GetHeadPos() Gets the actor&#39;s head position. has to be changed! (maybe bone position)&#160;"],
["GetHealth","C_ScriptBindActor__GetHealth@IFunctionHandler__.html","  Syntax: Actor.GetHealth() Gets the amount of health. NOTE: call soul.GetHealth() &#160;"],
["GetInitialClothingPreset","C_ScriptBindActor__GetInitialClothingPreset@IFunctionHandler__.html","  Syntax: Actor.GetInitialClothingPreset() Returns string - GUID of initial clothing preset &#160;"],
["GetInitialWeaponPreset","C_ScriptBindActor__GetInitialWeaponPreset@IFunctionHandler__.html","  Syntax: Actor.GetInitialWeaponPreset() Returns string - GUID of initial weapon preset &#160;"],
["GetLinkedEntity","C_ScriptBindActor__GetLinkedEntity@IFunctionHandler__.html","  Syntax: Actor.GetLinkedEntity() Returns entity which is this actor linked to. &#160;"],
["GetMaxArmor","C_ScriptBindActor__GetMaxArmor@IFunctionHandler__.html","  Syntax: Actor.GetMaxArmor() Gets the maximum amount of armor. &#160;"],
["GetMaxHealth","C_ScriptBindActor__GetMaxHealth@IFunctionHandler__.html","  Syntax: Actor.GetMaxHealth() Gets the maximum amount of health. &#160;"],
["GetPhysicalizationProfile","C_ScriptBindActor__GetPhysicalizationProfile@IFunctionHandler__.html","  Syntax: Actor.GetPhysicalizationProfile() Gets the physicalization profile. &#160;"],
["GetSpectatorMode","C_ScriptBindActor__GetSpectatorMode@IFunctionHandler__.html","  Syntax: Actor.GetSpectatorMode() Gets the current spectator mode. &#160;"],
["IsCarryingCorpse","C_ScriptBindActor__IsCarryingCorpse@IFunctionHandler__.html","  Syntax: Actor.IsCarryingCorpse() Checks if this human is carrying a corpse. &#160;"],
["IsFlying","C_ScriptBindActor__IsFlying@IFunctionHandler__.html","  Syntax: Actor.IsFlying() Checks if the actor is flying. &#160;"],
["IsGhostPit","C_ScriptBindActor__IsGhostPit@IFunctionHandler__.html","  Syntax: Actor.IsGhostPit() Checks if the actor in the vehicle is hidden. &#160;"],
["IsLocalClient","C_ScriptBindActor__IsLocalClient@IFunctionHandler__.html","  Syntax: Actor.IsLocalClient() Checks if the script is runnin on a local client. &#160;"],
["IsMoreDirty","C_ScriptBindActor__IsMoreDirty@IFunctionHandler_@float.html","  Syntax: actor:IsMoreDirty(0.2) Returns true if any equipped item has more dirt status than the dirtLevel argument. &#160;"],
["IsPlayer","C_ScriptBindActor__IsPlayer@IFunctionHandler__.html","  Syntax: Actor.IsPlayer() Checks if the actor is the player. &#160;"],
["IsUnconscious","C_ScriptBindActor__IsUnconscious@IFunctionHandler__.html","  Syntax: Actor.IsUnconscious() Returns true if the actor is unconscious. &#160;"],
["LinkToEntity","C_ScriptBindActor__LinkToEntity@IFunctionHandler__.html","  Syntax: Actor.LinkToEntity() Links the Actor to an entity. &#160;"],
["MakeLookAsActor","C_ScriptBindActor__MakeLookAsActor@IFunctionHandler__@ScriptHandle@bool.html","  Syntax: Actor.MakeLookAsActor(sourceEntityId, bInHand) Actor will look as another existing actor &#160;"],
["MakeLookAsSoul","C_ScriptBindActor__MakeLookAsSoul@IFunctionHandler__@char_const_.html","  Syntax: Actor.MakeLookAsActor(sourceSoulGuid) Actor will look as another actor according to initial values in soul table. The source actor needs not be in scene. &#160;"],
["OpenInventory","C_ScriptBindActor__OpenInventory@IFunctionHandler_@ScriptHandle@int@framework__T_WUIDScriptType@char_const_.html","  Syntax: Actor:OpenInventory(entityId, mode, otherInventoryId, filter) Returns more human readable representation of wuid.&#160;"],
["PlayerSetViewAngles","C_ScriptBindActor__PlayerSetViewAngles@IFunctionHandler__@Ang3.html","  &#160;"],
["PostPhysicalize","C_ScriptBindActor__PostPhysicalize@IFunctionHandler__.html","  Syntax: Actor.PostPhysicalize() Forces the physical proxy to be rebuilt. &#160;"],
["RagDollize","C_ScriptBindActor__RagDollize@IFunctionHandler__.html","  Syntax: Actor.RagDollize() Activates the ragdoll death animations for the Actor. &#160;"],
["RenderScore","C_ScriptBindActor__RenderScore@IFunctionHandler__@ScriptHandle@int@int@int.html","  Syntax: Actor.RenderScore( ScriptHandle player, int kills, int deaths, int ping ) Renders the score to the HUD. &#160;"],
["RequestDialog","C_ScriptBindActor__RequestDialog@IFunctionHandler__.html","  Syntax: Actor.RequestDialog(entity, roles, bOnce, bIsInterruptibleByPlayer) Requests dialog with this human. roles - meta roles override for source soul Dialog does not start immediately but it only notifies targeted entity that somebody wants to interact with it. If target entity does not respond in proper time the request is canceled automatically. Returns true in case request was successfully accepted by dialog manager. In some cases it can return false which means that dialog was refused.&#160;"],
["RequestGrabCorpse","C_ScriptBindActor__RequestGrabCorpse@IFunctionHandler__@ScriptHandle.html","  Syntax: Actor.RequestGrabCorpse(EntityId victimEntityId) Start grabbing target entity&#160;"],
["RequestHorsePullDown","C_ScriptBindActor__RequestHorsePullDown@IFunctionHandler__@ScriptHandle.html","  Syntax: Actor.RequestHorsePullDown(EntityId victimEntityId) Request to pull down from horse&#160;"],
["RequestHuntAttack","C_ScriptBindActor__RequestHuntAttack@IFunctionHandler__@ScriptHandle.html","  Syntax: Actor.RequestHuntAttack(EntityId victimEntityId) Request to hunt attack from run&#160;"],
["RequestItemExchange","C_ScriptBindActor__RequestItemExchange@IFunctionHandler__.html","  Syntax: Actor.RequestItemExchange(entity) Requests inventory item exchange from this actor, loot in case actor is dead. &#160;"],
["RequestKnockOut","C_ScriptBindActor__RequestKnockOut@IFunctionHandler__@ScriptHandle.html","  Syntax: Actor.RequestKnockOut(EntityId victimEntityId) Request to knock out given entity&#160;"],
["RequestMercyKill","C_ScriptBindActor__RequestMercyKill@IFunctionHandler__@ScriptHandle.html","  Syntax: Actor.RequestMercyKill(EntityId victimEntityId) Request to mercy kill on dying entity&#160;"],
["RequestPutCorpse","C_ScriptBindActor__RequestPutCorpse@IFunctionHandler__.html","  Syntax: Actor.RequesPutCorpse() Start putting corpse to the ground &#160;"],
["RequestStealthKill","C_ScriptBindActor__RequestStealthKill@IFunctionHandler__@ScriptHandle.html","  Syntax: Actor.RequestStealthKill(EntityId victimEntityId) Request to kill given entity by stealth kill&#160;"],
["ResetScores","C_ScriptBindActor__ResetScores@IFunctionHandler__.html","  Syntax: Actor.ResetScores() Resets scores. &#160;"],
["ResetVulnerabilityEffects","C_ScriptBindActor__ResetVulnerabilityEffects@IFunctionHandler__@int.html","  Syntax: Actor.ResetVulnerabilityEffects( int characterSlot ) Resets the vulnerability effects. &#160;"],
["Revive","C_ScriptBindActor__Revive@IFunctionHandler__@bool.html","  Syntax: actor.Revive() Revives the Actor. &#160;"],
["ReviveToDefaults","C_ScriptBindActor__ReviveToDefaults@IFunctionHandler__.html","  Syntax: actor.ReviveToDefaults() Revives the Actor to default values. &#160;"],
["SetAngles","C_ScriptBindActor__SetAngles@IFunctionHandler__@Ang3.html","  Syntax: Actor.SetAngles( Ang3 vAngles ) Sets the rotation angle for the actor. TOFIX:rendundant with CScriptBindEntity::SetAngles&#160;"],
["SetDialogAnimationState","C_ScriptBindActor__SetDialogAnimationState@IFunctionHandler__@bool.html","  Syntax: Actor.SetDialogAnimationState(true) Turns automatic dialog animation on and off &#160;"],
["SetExtensionActivation","C_ScriptBindActor__SetExtensionActivation@IFunctionHandler__@char__@bool.html","  Syntax: Actor.SetExtensionActivation( const char *extension, bool activation ) &#160;"],
["SetExtensionParams","C_ScriptBindActor__SetExtensionParams@IFunctionHandler_@char__@SmartScriptTable.html","  Syntax: Actor.SetExtensionParams( const char *extension, SmartScriptTable params ) Sets some parameters to the specified extension. &#160;"],
["SetForcedLookDir","C_ScriptBindActor__SetForcedLookDir@IFunctionHandler__@CScriptVector.html","  &#160;"],
["SetForcedLookObjectId","C_ScriptBindActor__SetForcedLookObjectId@IFunctionHandler__@ScriptHandle.html","  &#160;"],
["SetHealth","C_ScriptBindActor__SetHealth@IFunctionHandler__@float.html","  Syntax: Actor.SetHealth( float health ) OBSOLETE: use soul script bind &#160;"],
["SetLookIK","C_ScriptBindActor__SetLookIK@IFunctionHandler__@bool.html","  Syntax: Actor.SetLookIK(true) Enable/disable look IK for this actor &#160;"],
["SetMaxHealth","C_ScriptBindActor__SetMaxHealth@IFunctionHandler__@float.html","  Syntax: Actor.SetMaxHealth( float health ) Sets the maximum of health. &#160;"],
["SetMovementControlledByAnimation","C_ScriptBindActor__SetMovementControlledByAnimation@IFunctionHandler__@bool.html","  Syntax: Actor.SetMovementControlledByAnimation(true); Enables or disables animation controlled movement for an actor. &#160;"],
["SetMovementRestriction","C_ScriptBindActor__SetMovementRestriction@IFunctionHandler__@bool@bool.html","  Syntax: Actor.SetMovementRestriction(true, true) Sets movement restriction. First param is bAllowSprint and second param is bAllowRun.&#160;"],
["SetPhysicalizationProfile","C_ScriptBindActor__SetPhysicalizationProfile@IFunctionHandler__@char__.html","  Syntax: Actor.SetPhysicalizationProfile( const char *profile ) Sets the physicalization profile. &#160;"],
["SetSearchBeam","C_ScriptBindActor__SetSearchBeam@IFunctionHandler__@Vec3.html","  Syntax: Actor.SetSearchBeam( Vec3 dir ) Sets the search beam. &#160;"],
["SetSpectatorMode","C_ScriptBindActor__SetSpectatorMode@IFunctionHandler__@int@ScriptHandle.html","  Syntax: Actor.SetSpectatorMode( int mode, ScriptHandle targetId ) Sets the specified spectator mode. &#160;"],
["SetStats","C_ScriptBindActor__SetStats@IFunctionHandler__.html","  Syntax: Actor.SetStats() Sets somes tats for the actor. set some status of the actor&#160;"],
["SetViewLimits","C_ScriptBindActor__SetViewLimits@IFunctionHandler__@Vec3@float@float.html","  Syntax: Actor.SetViewLimits( IFunctionHandler *pH,Vec3 dir,float rangeH,float rangeV ) Sets the limit of the view.&#160;"],
["SetViewShake","C_ScriptBindActor__SetViewShake@IFunctionHandler__@Ang3@Vec3@float@float@float.html","  Syntax: Actor.SetViewShake( Ang3 shakeAngle, Vec3 shakeShift, float duration, float frequency, float randomness ) Sets the shake movement for the view.&#160;"],
["SimulateOnAction","C_ScriptBindActor__SimulateOnAction@IFunctionHandler__@char__@int@float.html","  Syntax: Actor.SimulateOnAction( IFunctionHandler *pH,const char *action,int mode,float value ) &#160;"],
["StandUp","C_ScriptBindActor__StandUp@IFunctionHandler__.html","  Syntax: Actor.StandUp() Makes the Actor standing up. &#160;"],
["StartInteractiveActionByName","C_ScriptBindActor__StartInteractiveActionByName@IFunctionHandler__@char_const_@ScriptHandle@bool@float.html","  Syntax: Actor:StartInteractiveActionByName(&quot;ActionName&quot;, objectId, true, 1.0) Starts interactive action. &#160;"],
["StopTimeWarp","C_ScriptBindActor__StopTimeWarp@IFunctionHandler__.html","  Syntax: Actor.StopTimeWarp() Stops time warp effect &#160;"],
["TrackViewControlled","C_ScriptBindActor__TrackViewControlled@IFunctionHandler__@int.html","  Syntax: Actor.TrackViewControlled( int characterSlot ) Checks if the track view is controlled. &#160;"],
["UnequipInventoryItem","C_ScriptBindActor__UnequipInventoryItem@IFunctionHandler__@framework__T_WUIDScriptType.html","  Syntax: Actor.UnequipInventoryItem( ScriptHandle itemId ) Unequips item from inventory &#160;"],
["VectorToLocal","C_ScriptBindActor__VectorToLocal@IFunctionHandler__.html","  Syntax: Actor.VectorToLocal() Converts a vector to the local coordinates system.&#160;"],
["WarpTime","C_ScriptBindActor__WarpTime@IFunctionHandler__@float@float.html","  Time effects =============================================  Syntax: Actor.WarpTime(float wantedSpeed, float duration) Slowdown/speedup actor animation for given time period&#160;"],
["WashDirtAndBlood","C_ScriptBindActor__WashDirtAndBlood@IFunctionHandler__@float.html","  Syntax: actor:WashDirtAndBlood(1) Call when somebody washes himself in the game. Cleans all actor clothes with 0 - 100% cleaning efficiency &#160;"],
["WashItems","C_ScriptBindActor__WashItems@IFunctionHandler__@float.html","  Syntax: actor:WashItems(1) Wash all actor items in inventory or his horse&#160;"],
["Boids","CScriptBindBoids.html",""],
["CreateBugsFlock","CScriptBindBoids__CreateBugsFlock@IFunctionHandler__@SmartScriptTable@SmartScriptTable.html","  Syntax: Boids.CreateBugsFlock( entity,paramsTable ) Creates a bugs flock and binds it to the given entity.&#160;"],
["CreateFishFlock","CScriptBindBoids__CreateFishFlock@IFunctionHandler__@SmartScriptTable@SmartScriptTable.html","  Syntax: Boids.CreateFishFlock( entity,paramsTable ) Creates a fishes flock and binds it to the given entity.&#160;"],
["CreateFlock","CScriptBindBoids__CreateFlock@IFunctionHandler__@SmartScriptTable@int@SmartScriptTable.html","  Syntax: Boids.CreateFlock( entity,paramsTable ) Creates a flock of boids and binds it to the given entity.&#160;"],
["EnableFlock","CScriptBindBoids__EnableFlock@IFunctionHandler__@SmartScriptTable@bool.html","  Syntax: Boids.EnableFlock( entity,paramsTable ) Enables/Disables flock in the entity.&#160;"],
["GetMemoryUsage","CScriptBindBoids__GetMemoryUsage@ICrySizer__@const.html","  This is GetMemoryUsage, a member of class CScriptBindBoids.&#160;"],
["OnBoidHit","CScriptBindBoids__OnBoidHit@IFunctionHandler__@SmartScriptTable@SmartScriptTable@SmartScriptTable.html","  Syntax: Boids.OnBoidHit( flockEntity,boidEntity,hit ) Events that occurs on boid hit.&#160;"],
["SetAttractionPoint","CScriptBindBoids__SetAttractionPoint@IFunctionHandler__@SmartScriptTable@Vec3.html","  Syntax: Boids.SetAttractionPoint( entity,paramsTable ) Sets the one time attraction point for the boids&#160;"],
["SetFlockParams","CScriptBindBoids__SetFlockParams@IFunctionHandler__@SmartScriptTable@SmartScriptTable.html","  Syntax: Boids.SetFlockParams( entity,paramsTable ) Modifies parameters of the existing flock in the specified enity.&#160;"],
["SetFlockPercentEnabled","CScriptBindBoids__SetFlockPercentEnabled@IFunctionHandler__@SmartScriptTable@int.html","  Syntax: Boids.SetFlockPercentEnabled( entity,paramsTable ) Used to gradually enable flock. Depending on the percentage more or less boid objects will be rendered in flock.&#160;"],
["C_ScriptBindEntityModule Class","C_ScriptBindEntityModule.html",""],
["AcquireInventory","C_ScriptBindEntityModule__AcquireInventory@IFunctionHandler__@char_const_@ScriptHandle.html","  returns Id of inventory &#160;"],
["AnimCharCopyVisual","C_ScriptBindEntityModule__AnimCharCopyVisual@IFunctionHandler__@ScriptHandle.html","  Syntax: EntityModule.AnimCharCopyVisual(entityId) Debug function &#160;"],
["AnimCharSetBodyBlood","C_ScriptBindEntityModule__AnimCharSetBodyBlood@IFunctionHandler__@ScriptHandle@char__@float.html","  Syntax: EntityModule.AnimCharSetBodyBlood(entityId, &quot;zone&quot;, float01) Debug function&#160;"],
["CanUseInventory","C_ScriptBindEntityModule__CanUseInventory@IFunctionHandler__@framework__T_WUIDScriptType.html","  &#160;"],
["EnableLayerProfile","C_ScriptBindEntityModule__EnableLayerProfile@IFunctionHandler__@char__@bool.html","  ! &#160;"],
["GetEntityScriptMisc","C_ScriptBindEntityModule__GetEntityScriptMisc@IFunctionHandler__@ScriptHandle.html","  general &#160;"],
["GetInventoryOwner","C_ScriptBindEntityModule__GetInventoryOwner@IFunctionHandler__@framework__T_WUIDScriptType.html","  ! &#160;"],
["GetSlotHand","C_ScriptBindEntityModule__GetSlotHand@IFunctionHandler__@ScriptHandle.html","  ItemSlot &#160;"],
["GetSlotItemClassId","C_ScriptBindEntityModule__GetSlotItemClassId@IFunctionHandler__@ScriptHandle.html","  &#160;"],
["GetSlotSpawnOnStart","C_ScriptBindEntityModule__GetSlotSpawnOnStart@IFunctionHandler__@ScriptHandle.html","  &#160;"],
["IsInventoryReadOnly","C_ScriptBindEntityModule__IsInventoryReadOnly@IFunctionHandler__@framework__T_WUIDScriptType.html","  &#160;"],
["IsLayerProfileEnabled","C_ScriptBindEntityModule__IsLayerProfileEnabled@IFunctionHandler__@char__.html","  This is IsLayerProfileEnabled, a member of class C_ScriptBindEntityModule.&#160;"],
["LoadInventoryFromDB","C_ScriptBindEntityModule__LoadInventoryFromDB@IFunctionHandler__@char_const_@ScriptHandle.html","  clears inventory and loads inventory items from DB &#160;"],
["MakeParticleEffectActive","C_ScriptBindEntityModule__MakeParticleEffectActive@IFunctionHandler__@ScriptHandle.html","  ParticleEffect &#160;"],
["MakeParticleEffectIdle","C_ScriptBindEntityModule__MakeParticleEffectIdle@IFunctionHandler__@ScriptHandle.html","  &#160;"],
["ReleaseInventory","C_ScriptBindEntityModule__ReleaseInventory@IFunctionHandler__@ScriptHandle.html","  &#160;"],
["SequenceEntitiesCopyVisual","C_ScriptBindEntityModule__SequenceEntitiesCopyVisual@IFunctionHandler__@char_.html","  Syntax: EntityModule.SequenceEntitiesCopyVisual(sequenceName) For all AnimChar entities in the anim sequence tries to find related soul and copy its look. &#160;"],
["SequenceEntitiesCopyVisualImpl","C_ScriptBindEntityModule__SequenceEntitiesCopyVisualImpl@IAnimSequence_.html","  &#160;"],
["WillSleepingOnThisBedSave","C_ScriptBindEntityModule__WillSleepingOnThisBedSave@IFunctionHandler__@ScriptHandle.html","  ! &#160;"],
["C_ScriptBindGameRules Class","C_ScriptBindGameRules.html",""],
["AbortEntityRemoval","C_ScriptBindGameRules__AbortEntityRemoval@IFunctionHandler__@ScriptHandle.html","  Syntax: GameRules.AbortEntityRemoval( ScriptHandle entityId ) Aborts the entity removal. &#160;"],
["AbortEntityRespawn","C_ScriptBindGameRules__AbortEntityRespawn@IFunctionHandler__@ScriptHandle@bool.html","  Syntax: GameRules.AbortEntityRespawn( ScriptHandle entityId, bool destroyData ) Aborts a respawning for the specified entity. &#160;"],
["AddMinimapEntity","C_ScriptBindGameRules__AddMinimapEntity@IFunctionHandler__@ScriptHandle@int@float.html","  Syntax: GameRules.AddMinimapEntity( ScriptHandle entityId, int type, float lifetime ) Adds a mipmap entity. &#160;"],
["AddObjective","C_ScriptBindGameRules__AddObjective@IFunctionHandler__@int@char__@int@ScriptHandle.html","  Syntax: GameRules.AddObjective( int teamId, const char *objective, int status, ScriptHandle entityId ) Adds an objective for the specified team with the specified status.&#160;"],
["AddSpawnGroup","C_ScriptBindGameRules__AddSpawnGroup@IFunctionHandler__@ScriptHandle.html","  Syntax: GameRules.AddSpawnGroup(groupId) Adds a spawn group. &#160;"],
["AddSpawnLocation","C_ScriptBindGameRules__AddSpawnLocation@IFunctionHandler__@ScriptHandle.html","  Syntax: GameRules.AddSpawnLocation(entityId) Adds the spawn location for the specified entity. &#160;"],
["AddSpawnLocationToSpawnGroup","C_ScriptBindGameRules__AddSpawnLocationToSpawnGroup@IFunctionHandler__@ScriptHandle@ScriptHandle.html","  Syntax: GameRules.AddSpawnLocationToSpawnGroup(groupId,location) Add a spawn location to spawn a group. &#160;"],
["AddSpectatorLocation","C_ScriptBindGameRules__AddSpectatorLocation@IFunctionHandler__@ScriptHandle.html","  Syntax: GameRules.AddSpectatorLocation( ScriptHandle location ) Adds a spectator location.&#160;"],
["AttachTo","C_ScriptBindGameRules__AttachTo@CGameRules__.html","  &#160;"],
["CanChangeSpectatorMode","C_ScriptBindGameRules__CanChangeSpectatorMode@IFunctionHandler_@ScriptHandle.html","  Syntax: GameRules.CanChangeSpectatorMode( ScriptHandle playerId ) Check if it&#39;s possible to change the spectator mode.&#160;"],
["CanCheat","C_ScriptBindGameRules__CanCheat@IFunctionHandler__.html","  Syntax: GameRules.CanCheat() Checks if in this game entity is possible to cheat. &#160;"],
["ChangePlayerClass","C_ScriptBindGameRules__ChangePlayerClass@IFunctionHandler__@int@char__.html","  Syntax: GameRules.ChangePlayerClass( int channelId, const char *className ) Changes the player class. &#160;"],
["ChangeSpectatorMode","C_ScriptBindGameRules__ChangeSpectatorMode@IFunctionHandler_@ScriptHandle@int@ScriptHandle.html","  Syntax: GameRules.ChangeSpectatorMode( ScriptHandle playerId, int mode, ScriptHandle targetId ) Changes the spectator mode.&#160;"],
["CreateTeam","C_ScriptBindGameRules__CreateTeam@IFunctionHandler__@char__.html","  Syntax: GameRules.CreateTeam( const char *name ) Creates a team. &#160;"],
["DebugCollisionDamage","C_ScriptBindGameRules__DebugCollisionDamage@IFunctionHandler__.html","  Syntax: GameRules.DebugCollisionDamage() Debugs collision damage. &#160;"],
["DebugHits","C_ScriptBindGameRules__DebugHits@IFunctionHandler__.html","  Syntax: GameRules.DebugHits() Debugs hits. &#160;"],
["EndGame","C_ScriptBindGameRules__EndGame@IFunctionHandler__.html","  Syntax: GameRules.EndGame() Ends the game. &#160;"],
["EndGameNear","C_ScriptBindGameRules__EndGameNear@IFunctionHandler_@ScriptHandle.html","  Syntax: GameRules.EndGameNear( ScriptHandle entityId )&#160;"],
["EnteredGame","C_ScriptBindGameRules__EnteredGame@IFunctionHandler_.html","  Syntax: GameRules.EnteredGame() Get the game rules and enter the game. &#160;"],
["ForbiddenAreaWarning","C_ScriptBindGameRules__ForbiddenAreaWarning@IFunctionHandler__@bool@int@ScriptHandle.html","  Syntax: GameRules.ForbiddenAreaWarning( bool active, int timer, ScriptHandle targetId ) Warnings for a forbidden area. &#160;"],
["ForceScoreboard","C_ScriptBindGameRules__ForceScoreboard@IFunctionHandler__@bool.html","  Syntax: GameRules.ForceScoreboard( bool force ) Forces the display of the scoreboard on the HUD. &#160;"],
["ForceSynchedStorageSynch","C_ScriptBindGameRules__ForceSynchedStorageSynch@IFunctionHandler__@int.html","  Syntax: GameRules.ForceSynchedStorageSynch( int channelId ) Forces sync storage syncing. &#160;"],
["FreezeInput","C_ScriptBindGameRules__FreezeInput@IFunctionHandler__@bool.html","  Syntax: GameRules.FreezeInput( bool freeze ) Freezes the input. &#160;"],
["GameOver","C_ScriptBindGameRules__GameOver@IFunctionHandler_@int.html","  For the power struggle tutorial.  Syntax: GameRules.GameOver( int localWinner ) Ends the game with a local winner. &#160;"],
["GetChannelId","C_ScriptBindGameRules__GetChannelId@IFunctionHandler__@ScriptHandle.html","  Syntax: GameRules.GetChannelId( playerId ) Gets the channel id where the specified player is. &#160;"],
["GetChannelTeam","C_ScriptBindGameRules__GetChannelTeam@IFunctionHandler__@int.html","  Syntax: GameRules.GetChannelTeam( int channelId ) Gets the team in the specified channel. &#160;"],
["GetFirstSpawnLocation","C_ScriptBindGameRules__GetFirstSpawnLocation@IFunctionHandler__@int.html","  Syntax: GameRules.GetFirstSpawnLocation( int teamId ) Gets the first spawn location for the team. &#160;"],
["GetFragLead","C_ScriptBindGameRules__GetFragLead@IFunctionHandler__.html","  Syntax: GameRules.GetFragLead() Gets the frag lead. &#160;"],
["GetFragLimit","C_ScriptBindGameRules__GetFragLimit@IFunctionHandler__.html","  Syntax: GameRules.GetFragLimit() Gets the frag limit. &#160;"],
["GetFriendlyFireRatio","C_ScriptBindGameRules__GetFriendlyFireRatio@IFunctionHandler__.html","  Syntax: GameRules.GetFriendlyFireRatio() Gets the friendly fire ratio. &#160;"],
["GetHitMaterialId","C_ScriptBindGameRules__GetHitMaterialId@IFunctionHandler__@char__.html","  Syntax: GameRules.GetHitMaterialId( const char *materialName ) Gets the hit material identifier from its name. &#160;"],
["GetHitMaterialName","C_ScriptBindGameRules__GetHitMaterialName@IFunctionHandler__@int.html","  Syntax: GameRules.GetHitMaterialName( int materialId ) Gets the hit material name from its identifier. &#160;"],
["GetHitType","C_ScriptBindGameRules__GetHitType@IFunctionHandler__@int.html","  Syntax: GameRules.GetHitType( int id ) id - Identifier. &#160;"],
["GetHitTypeId","C_ScriptBindGameRules__GetHitTypeId@IFunctionHandler__@char__.html","  Syntax: GameRules.GetHitTypeId( const char *type ) Gets a hit type identifier from the name. &#160;"],
["GetInterestingSpectatorLocation","C_ScriptBindGameRules__GetInterestingSpectatorLocation@IFunctionHandler__.html","  Syntax: GameRules.GetInterestingSpectatorLocation( ) Gets an interesting spectator location.&#160;"],
["GetMinPlayerLimit","C_ScriptBindGameRules__GetMinPlayerLimit@IFunctionHandler__.html","  Syntax: GameRules.GetMinPlayerLimit() Gets the minimum player limit.&#160;"],
["GetMinTeamLimit","C_ScriptBindGameRules__GetMinTeamLimit@IFunctionHandler__.html","  Syntax: GameRules.GetMinTeamLimit() Gets the minimum team limit. &#160;"],
["GetNextSpectatorTarget","C_ScriptBindGameRules__GetNextSpectatorTarget@IFunctionHandler__@ScriptHandle@int.html","  Syntax: GameRules.GetNextSpectatorTarget( ScriptHandle playerId, int change ) For 3rd person follow-cam mode. Gets the next spectator target.&#160;"],
["GetPing","C_ScriptBindGameRules__GetPing@IFunctionHandler__@int.html","  Syntax: GameRules.GetPing( int channelId ) Gets the ping to a channel. &#160;"],
["GetPlayerByChannelId","C_ScriptBindGameRules__GetPlayerByChannelId@IFunctionHandler__@int.html","  Syntax: GameRules.GetPlayerByChannelId( int channelId ) Gets the player from the channel id. &#160;"],
["GetPlayerCount","C_ScriptBindGameRules__GetPlayerCount@IFunctionHandler__.html","  Syntax: GameRules.GetPlayerCount() Gets the number of the players. &#160;"],
["GetPlayers","C_ScriptBindGameRules__GetPlayers@IFunctionHandler__.html","  Syntax: GameRules.GetPlayers() Gets the player. &#160;"],
["GetPreRoundTime","C_ScriptBindGameRules__GetPreRoundTime@IFunctionHandler__.html","  Syntax: GameRules.GetPreRoundTime() Gets the pre-round time. &#160;"],
["GetRandomSpectatorLocation","C_ScriptBindGameRules__GetRandomSpectatorLocation@IFunctionHandler__.html","  Syntax: GameRules.GetRandomSpectatorLocation( ) Gets a random spectator location.&#160;"],
["GetRemainingGameTime","C_ScriptBindGameRules__GetRemainingGameTime@IFunctionHandler__.html","  Syntax: GameRules.GetRemainingGameTime() Gets the remaining game time. &#160;"],
["GetRemainingPreRoundTime","C_ScriptBindGameRules__GetRemainingPreRoundTime@IFunctionHandler__.html","  Syntax: GameRules.GetRemainingPreRoundTime() Gets the remaining pre-round time. &#160;"],
["GetRemainingReviveCycleTime","C_ScriptBindGameRules__GetRemainingReviveCycleTime@IFunctionHandler__.html","  Syntax: GameRules.GetRemainingReviveCycleTime() Gets the remaining cycle time. &#160;"],
["GetRemainingRoundTime","C_ScriptBindGameRules__GetRemainingRoundTime@IFunctionHandler__.html","  Syntax: GameRules.GetRemainingRoundTime() Gets the remaining round time. &#160;"],
["GetRemainingStartTimer","C_ScriptBindGameRules__GetRemainingStartTimer@IFunctionHandler__.html","  Syntax: GameRules.GetRemainingStartTimer( ) Gets the remaining start timer. &#160;"],
["GetReviveTime","C_ScriptBindGameRules__GetReviveTime@IFunctionHandler__.html","  Syntax: GameRules.GetReviveTime() Gets the revive time. &#160;"],
["GetRoundLimit","C_ScriptBindGameRules__GetRoundLimit@IFunctionHandler__.html","  Syntax: GameRules.GetRoundLimit() Gets the round time limit. &#160;"],
["GetRoundTime","C_ScriptBindGameRules__GetRoundTime@IFunctionHandler__.html","  Syntax: GameRules.GetRoundTime() Gets the round time. &#160;"],
["GetSpawnGroups","C_ScriptBindGameRules__GetSpawnGroups@IFunctionHandler__.html","  Syntax: GameRules.GetSpawnGroups() Gets spawn groups. &#160;"],
["GetSpawnLocation","C_ScriptBindGameRules__GetSpawnLocation@IFunctionHandler__@ScriptHandle@bool@bool.html","  Syntax: GameRules.GetSpawnLocation( playerId, bool ignoreTeam, bool includeNeutral )&#160;"],
["GetSpawnLocationByIdx","C_ScriptBindGameRules__GetSpawnLocationByIdx@IFunctionHandler__@int.html","  Syntax: GameRules.GetSpawnLocationByIdx( int idx ) Gets the spawn location from its identifier. &#160;"],
["GetSpawnLocationCount","C_ScriptBindGameRules__GetSpawnLocationCount@IFunctionHandler__.html","  Syntax: GameRules.GetSpawnLocationCount() Gets the number of the spawn location. &#160;"],
["GetSpawnLocationGroup","C_ScriptBindGameRules__GetSpawnLocationGroup@IFunctionHandler__@ScriptHandle.html","  Syntax: GameRules.GetSpawnLocationGroup(spawnId) Gets spawn location group. &#160;"],
["GetSpawnLocations","C_ScriptBindGameRules__GetSpawnLocations@IFunctionHandler__.html","  Syntax: GameRules.GetSpawnLocations() Gets the spawn locations. &#160;"],
["GetSpectatorCount","C_ScriptBindGameRules__GetSpectatorCount@IFunctionHandler__.html","  Syntax: GameRules.GetSpectatorCount() Gets the number of the spectators.&#160;"],
["GetSpectatorLocation","C_ScriptBindGameRules__GetSpectatorLocation@IFunctionHandler__@int.html","  Syntax: GameRules.GetSpectatorLocation( int idx ) Gets the spectator location from its identifier.&#160;"],
["GetSpectatorLocationCount","C_ScriptBindGameRules__GetSpectatorLocationCount@IFunctionHandler__.html","  Syntax: GameRules.GetSpectatorLocationCount( ) Gets the number of the spectator locations.&#160;"],
["GetSpectatorLocations","C_ScriptBindGameRules__GetSpectatorLocations@IFunctionHandler__.html","  Syntax: GameRules.GetSpectatorLocations( ) Gets the spectator locations.&#160;"],
["GetSynchedEntityValue","C_ScriptBindGameRules__GetSynchedEntityValue@IFunctionHandler__@ScriptHandle@int.html","  Syntax: GameRules.GetSynchedEntityValue( ScriptHandle entityId, int key ) Gets the specified sync entity value. &#160;"],
["GetSynchedGlobalValue","C_ScriptBindGameRules__GetSynchedGlobalValue@IFunctionHandler__@int.html","  Syntax: GameRules.GetSynchedGlobalValue( int key ) Gets the sync global value from its key. &#160;"],
["GetTeam","C_ScriptBindGameRules__GetTeam@IFunctionHandler__@ScriptHandle.html","  Syntax: GameRules.GetTeam( ScriptHandle playerId ) Gets the team of the specified player. &#160;"],
["GetTeamChannelCount","C_ScriptBindGameRules__GetTeamChannelCount@IFunctionHandler__@int.html","  Syntax: GameRules.GetTeamChannelCount( int teamId ) Gets the team channel count. &#160;"],
["GetTeamCount","C_ScriptBindGameRules__GetTeamCount@IFunctionHandler__.html","  Syntax: GameRules.GetTeamCount( ) Gets the team number. &#160;"],
["GetTeamDefaultSpawnGroup","C_ScriptBindGameRules__GetTeamDefaultSpawnGroup@IFunctionHandler__@int.html","  Syntax: GameRules.GetTeamDefaultSpawnGroup( int teamId ) Gets team default spawn group. &#160;"],
["GetTeamId","C_ScriptBindGameRules__GetTeamId@IFunctionHandler__@char__.html","  Syntax: GameRules.GetTeamId( const char *teamName ) Gets the team identifier from the team name. &#160;"],
["GetTeamLock","C_ScriptBindGameRules__GetTeamLock@IFunctionHandler__.html","  Syntax: GameRules.GetTeamLock() Gets the team lock. &#160;"],
["GetTeamName","C_ScriptBindGameRules__GetTeamName@IFunctionHandler__@int.html","  Syntax: GameRules.GetTeamName( int teamId ) Gets the name of the specified team. &#160;"],
["GetTeamPlayerCount","C_ScriptBindGameRules__GetTeamPlayerCount@IFunctionHandler__@int.html","  Syntax: GameRules.GetTeamPlayerCount( int teamId ) Gets the number of players in the specified team. &#160;"],
["GetTeamPlayers","C_ScriptBindGameRules__GetTeamPlayers@IFunctionHandler__@int.html","  Syntax: GameRules.GetTeamPlayers( int teamId ) Gets the players in the specified team. &#160;"],
["GetTimeLimit","C_ScriptBindGameRules__GetTimeLimit@IFunctionHandler__.html","  Syntax: GameRules.GetTimeLimit() Gets the time limit. &#160;"],
["IsClient","C_ScriptBindGameRules__IsClient@IFunctionHandler__.html","  Syntax: GameRules.IsClient() Checks if this entity is a client. &#160;"],
["IsDemoMode","C_ScriptBindGameRules__IsDemoMode@IFunctionHandler__.html","  Syntax: GameRules.IsDemoMode() Checks if the game is running in demo mode. &#160;"],
["IsInvulnerable","C_ScriptBindGameRules__IsInvulnerable@IFunctionHandler_@ScriptHandle.html","  Syntax: GameRules.IsInvulnerable( ScriptHandle playerId ) Checks if the player is invulnerable. &#160;"],
["IsNeutral","C_ScriptBindGameRules__IsNeutral@IFunctionHandler__@ScriptHandle.html","  Syntax: GameRules.IsNeutral(entityId) Checks if the entity is neutral. &#160;"],
["IsPlayerInGame","C_ScriptBindGameRules__IsPlayerInGame@IFunctionHandler__@ScriptHandle.html","  Syntax: GameRules.IsPlayerInGame(playerId) Checks if the specified player is in game. &#160;"],
["IsProjectile","C_ScriptBindGameRules__IsProjectile@IFunctionHandler__@ScriptHandle.html","  Syntax: GameRules.IsProjectile(entityId) Checks if the specified entity is a projectile. &#160;"],
["IsRoundTimeLimited","C_ScriptBindGameRules__IsRoundTimeLimited@IFunctionHandler__.html","  Syntax: GameRules.IsRoundTimeLimited() Checks if the round time is limited. &#160;"],
["IsSameTeam","C_ScriptBindGameRules__IsSameTeam@IFunctionHandler__@ScriptHandle@ScriptHandle.html","  Syntax: GameRules.IsSameTeam(entityId0,entityId1) Checks if the two entity are in the same team. &#160;"],
["IsServer","C_ScriptBindGameRules__IsServer@IFunctionHandler__.html","  Syntax: GameRules.IsServer() Checks if this entity is a server. &#160;"],
["IsSpawnGroup","C_ScriptBindGameRules__IsSpawnGroup@IFunctionHandler__@ScriptHandle.html","  Syntax: GameRules.IsSpawnGroup(entityId) Checks if the entity is a spawn group. &#160;"],
["IsTimeLimited","C_ScriptBindGameRules__IsTimeLimited@IFunctionHandler__.html","  Syntax: GameRules.IsTimeLimited() Checks if the game time is limited. &#160;"],
["KillPlayer","C_ScriptBindGameRules__KillPlayer@IFunctionHandler__@ScriptHandle@bool@bool@ScriptHandle@ScriptHandle@float@int@int@Vec3.html","  Syntax: GameRules.KillPlayer( ScriptHandle playerId, bool dropItem, bool ragdoll, ScriptHandle shooterId, ScriptHandle weaponId, float damage, int material, int hit_type, Vec3 impulse) Kills the player. &#160;"],
["MovePlayer","C_ScriptBindGameRules__MovePlayer@IFunctionHandler__@ScriptHandle@Vec3@Vec3.html","  Syntax: GameRules.MovePlayer( ScriptHandle playerId, Vec3 pos, Vec3 angles ) Moves the player. &#160;"],
["NextLevel","C_ScriptBindGameRules__NextLevel@IFunctionHandler__.html","  Syntax: GameRules.NextLevel() Loads the next level. &#160;"],
["PerformDeadHit","C_ScriptBindGameRules__PerformDeadHit@IFunctionHandler_.html","  Syntax: GameRules.PerformDeadHit() Performs a death hit. &#160;"],
["ProcessEMPEffect","C_ScriptBindGameRules__ProcessEMPEffect@IFunctionHandler_@ScriptHandle@float.html","  Syntax: GameRules.ProcessEMPEffect( ScriptHandle targetId, float timeScale ) Processes the EMP (Electro Magnetic Pulse) effect. &#160;"],
["RegisterHitMaterial","C_ScriptBindGameRules__RegisterHitMaterial@IFunctionHandler__@char__.html","  Syntax: GameRules.RegisterHitMaterial( const char *materialName ) Registers the specified hit material. &#160;"],
["RegisterHitType","C_ScriptBindGameRules__RegisterHitType@IFunctionHandler__@char__.html","  Syntax: GameRules.RegisterHitType( const char *type ) Registers a type for the hits. &#160;"],
["RemoveMinimapEntity","C_ScriptBindGameRules__RemoveMinimapEntity@IFunctionHandler__@ScriptHandle.html","  Syntax: GameRules.RemoveMinimapEntity( ScriptHandle entityId ) Removes a mipmap entity. &#160;"],
["RemoveObjective","C_ScriptBindGameRules__RemoveObjective@IFunctionHandler__@int@char__.html","  Syntax: GameRules.RemoveObjective( int teamId, const char *objective ) Removes an objective.&#160;"],
["RemoveSpawnGroup","C_ScriptBindGameRules__RemoveSpawnGroup@IFunctionHandler__@ScriptHandle.html","  Syntax: GameRules.RemoveSpawnGroup(groupId) Removes spawn group. &#160;"],
["RemoveSpawnLocation","C_ScriptBindGameRules__RemoveSpawnLocation@IFunctionHandler__@ScriptHandle.html","  Syntax: GameRules.RemoveSpawnLocation(id) Removes the span location. &#160;"],
["RemoveSpawnLocationFromSpawnGroup","C_ScriptBindGameRules__RemoveSpawnLocationFromSpawnGroup@IFunctionHandler__@ScriptHandle@ScriptHandle.html","  Syntax: GameRules.RemoveSpawnLocationFromSpawnGroup(groupId,location) Removes a spawn location from spawn group. &#160;"],
["RemoveSpectatorLocation","C_ScriptBindGameRules__RemoveSpectatorLocation@IFunctionHandler__@ScriptHandle.html","  Syntax: GameRules.RemoveSpectatorLocation( ScriptHandle id ) Removes a spectator location.&#160;"],
["RemoveTeam","C_ScriptBindGameRules__RemoveTeam@IFunctionHandler__@int.html","  Syntax: GameRules.RemoveTeam( int teamId ) Removes the specified team. &#160;"],
["RenamePlayer","C_ScriptBindGameRules__RenamePlayer@IFunctionHandler__@ScriptHandle@char__.html","  Syntax: GameRules.RenamePlayer( ScriptHandle playerId, const char *name ) Renames the player. &#160;"],
["ResetEntities","C_ScriptBindGameRules__ResetEntities@IFunctionHandler__.html","  Syntax: GameRules.ResetEntities( ) &#160;"],
["ResetGameStartTimer","C_ScriptBindGameRules__ResetGameStartTimer@IFunctionHandler__@float.html","  Syntax: GameRules.ResetGameStartTimer() Resets game start timer. &#160;"],
["ResetGameTime","C_ScriptBindGameRules__ResetGameTime@IFunctionHandler__.html","  Syntax: GameRules.ResetGameTime() Resets the game time. &#160;"],
["ResetHitMaterials","C_ScriptBindGameRules__ResetHitMaterials@IFunctionHandler__.html","  Syntax: GameRules.ResetHitMaterials() Resets the hit materials. &#160;"],
["ResetHitTypes","C_ScriptBindGameRules__ResetHitTypes@IFunctionHandler__.html","  Syntax: GameRules.ResetHitTypes() Resets the hit types. &#160;"],
["ResetMinimap","C_ScriptBindGameRules__ResetMinimap@IFunctionHandler__.html","  Syntax: GameRules.ResetMinimap( ) &#160;"],
["ResetObjectives","C_ScriptBindGameRules__ResetObjectives@IFunctionHandler__.html","  Syntax: GameRules.ResetObjectives( ) Resets all the objectives.&#160;"],
["ResetPreRoundTime","C_ScriptBindGameRules__ResetPreRoundTime@IFunctionHandler__.html","  Syntax: GameRules.ResetPreRoundTime() Resets the pre-round time. &#160;"],
["ResetReviveCycleTime","C_ScriptBindGameRules__ResetReviveCycleTime@IFunctionHandler__.html","  Syntax: GameRules.ResetReviveCycleTime() Resets the revive cycle time. &#160;"],
["ResetRoundTime","C_ScriptBindGameRules__ResetRoundTime@IFunctionHandler__.html","  Syntax: GameRules.ResetRoundTime() Resets the round time. &#160;"],
["ResetSynchedStorage","C_ScriptBindGameRules__ResetSynchedStorage@IFunctionHandler__.html","  Syntax: GameRules.ResetSynchedStorage() Resets the sync storage. &#160;"],
["RevivePlayer","C_ScriptBindGameRules__RevivePlayer@IFunctionHandler__@ScriptHandle@Vec3@Vec3@int@bool.html","  Syntax: GameRules.RevivePlayer( ScriptHandle playerId, Vec3 pos, Vec3 angles, int teamId, bool clearInventory ) Revives the player. &#160;"],
["RevivePlayerInVehicle","C_ScriptBindGameRules__RevivePlayerInVehicle@IFunctionHandler__@ScriptHandle@ScriptHandle@int@int@bool.html","  Syntax: GameRules.RevivePlayerInVehicle( ScriptHandle playerId, ScriptHandle vehicleId, int seatId, int teamId, bool clearInventory ) Revives a player inside a vehicle. &#160;"],
["ScheduleEntityRemoval","C_ScriptBindGameRules__ScheduleEntityRemoval@IFunctionHandler__@ScriptHandle@float@bool.html","  Syntax: GameRules.ScheduleEntityRemoval( ScriptHandle entityId, float timer, bool visibility ) Schedules the removal of the specified entity. &#160;"],
["ScheduleEntityRespawn","C_ScriptBindGameRules__ScheduleEntityRespawn@IFunctionHandler__@ScriptHandle@bool@float.html","  Syntax: GameRules.ScheduleEntityRespawn( ScriptHandle entityId, bool unique, float timer ) Schedules a respawning of the specified entity. &#160;"],
["SendChatMessage","C_ScriptBindGameRules__SendChatMessage@IFunctionHandler__@int@ScriptHandle@ScriptHandle@char__.html","  Syntax: GameRules.SendChatMessage( int type, ScriptHandle sourceId, ScriptHandle targetId, const char *msg ) Sends a text message from the source to the target with the specified type and text. &#160;"],
["SendDamageIndicator","C_ScriptBindGameRules__SendDamageIndicator@IFunctionHandler_@ScriptHandle@ScriptHandle@ScriptHandle.html","  Syntax: GameRules.SendDamageIndicator( ScriptHandle targetId, ScriptHandle shooterId, ScriptHandle weaponId ) Send a damage indicator from the shooter to the target. &#160;"],
["SendHitIndicator","C_ScriptBindGameRules__SendHitIndicator@IFunctionHandler_@ScriptHandle.html","  Syntax: GameRules.SendHitIndicator( ScriptHandle shooterId ) Sends a hit indicator. &#160;"],
["SendTextMessage","C_ScriptBindGameRules__SendTextMessage@IFunctionHandler__@int@char__.html","  Syntax: GameRules.SendTextMessage( int type, const char *msg ) Sends a text message type with the specified text. &#160;"],
["ServerExplosion","C_ScriptBindGameRules__ServerExplosion@IFunctionHandler__@ScriptHandle@ScriptHandle@float@Vec3@Vec3@float@float@float@float.html","  Syntax: GameRules.ServerExplosion( ScriptHandle shooterId, ScriptHandle weaponId, float dmg, Vec3 pos, Vec3 dir, float radius, float angle, float pressure, float holesize ) &#160;"],
["ServerHit","C_ScriptBindGameRules__ServerHit@IFunctionHandler__@ScriptHandle@ScriptHandle@ScriptHandle@float@float@int@int@int.html","  Syntax: GameRules.ServerHit( ScriptHandle targetId, ScriptHandle shooterId, ScriptHandle weaponId, float dmg, float radius, int materialId, int partId, int typeId ) &#160;"],
["SetInvulnerability","C_ScriptBindGameRules__SetInvulnerability@IFunctionHandler_@ScriptHandle@bool.html","  Syntax: GameRules.SetInvulnerability( ScriptHandle playerId, bool invulnerable ) Sets/unsets invulnerability for the specified player. &#160;"],
["SetObjectiveEntity","C_ScriptBindGameRules__SetObjectiveEntity@IFunctionHandler__@int@char__@ScriptHandle.html","  Syntax: GameRules.SetObjectiveEntity( int teamId, const char *objective, ScriptHandle entityId ) Sets the objective entity.&#160;"],
["SetObjectiveStatus","C_ScriptBindGameRules__SetObjectiveStatus@IFunctionHandler__@int@char__@int.html","  Syntax: GameRules.SetObjectiveStatus( int teamId, const char *objective, int status ) Sets the status of an objective.&#160;"],
["SetPlayerSpawnGroup","C_ScriptBindGameRules__SetPlayerSpawnGroup@IFunctionHandler__@ScriptHandle@ScriptHandle.html","  Syntax: GameRules.SetPlayerSpawnGroup(ScriptHandle playerId, ScriptHandle groupId) Sets the player spawn group. &#160;"],
["SetSynchedEntityValue","C_ScriptBindGameRules__SetSynchedEntityValue@IFunctionHandler__@ScriptHandle@int.html","  Syntax: GameRules.SetSynchedEntityValue( ScriptHandle entityId, int key ) Sets a sync entity value. &#160;"],
["SetSynchedGlobalValue","C_ScriptBindGameRules__SetSynchedGlobalValue@IFunctionHandler__@int.html","  Syntax: GameRules.SetSynchedGlobalValue( int key , value) Sets a sync global value. &#160;"],
["SetTeam","C_ScriptBindGameRules__SetTeam@IFunctionHandler__@int@ScriptHandle.html","  Syntax: GameRules.SetTeam( int teamId, ScriptHandle playerId ) Adds a player to a team. &#160;"],
["SetTeamDefaultSpawnGroup","C_ScriptBindGameRules__SetTeamDefaultSpawnGroup@IFunctionHandler__@int@ScriptHandle.html","  Syntax: GameRules.SetTeamDefaultSpawnGroup( int teamId, groupId) Sets the default spawn group for the team. &#160;"],
["SpawnPlayer","C_ScriptBindGameRules__SpawnPlayer@IFunctionHandler__@int@char__@char__@Vec3@Vec3.html","  Syntax: GameRules.SpawnPlayer( int channelId, const char *name, const char *className, Vec3 pos, Vec3 angles ) Spawns a player. &#160;"],
["SPNotifyPlayerKill","C_ScriptBindGameRules__SPNotifyPlayerKill@IFunctionHandler_@ScriptHandle@ScriptHandle@bool.html","  Syntax: GameRules.SPNotifyPlayerKill( ScriptHandle targetId, ScriptHandle weaponId, bool bHeadShot ) Notifies that the player kills somebody.&#160;"],
["TextMessage","C_ScriptBindGameRules__TextMessage@IFunctionHandler__@int@char__.html","  Syntax: GameRules.TextMessage( ) Displays a text message type with the specified text. &#160;"],
["C_ScriptBindHorse Class","C_ScriptBindHorse.html",""],
["GetHorse","C_ScriptBindHorse__GetHorse@IFunctionHandler__.html","  &#160;"],
["AttachTo","C_ScriptBindHorse__AttachTo@C_Horse__.html","  &#160;"],
["HasRider","C_ScriptBindHorse__HasRider@IFunctionHandler__.html","  Syntax: Horse.HasRider() &#160;"],
["IsMountable","C_ScriptBindHorse__IsMountable@IFunctionHandler__.html","  Syntax: Horse.IsMountable &#160;"],
["RearAndThrowDown","C_ScriptBindHorse__RearAndThrowDown@IFunctionHandler__.html","  Syntax: Horse.RearAndThrowDown &#160;"],
["C_ScriptBindHuman Class","C_ScriptBindHuman.html",""],
["C_ScriptBindHuman::GetHuman (EntityId)","C_ScriptBindHuman__GetHuman@EntityId@const.html",""],
["C_ScriptBindHuman::GetHuman (IFunctionHandler *)","C_ScriptBindHuman__GetHuman@IFunctionHandler__@const.html",""],
["GetHuman","!!OVERLOADED_GetHuman_C_ScriptBindHuman.html","  This is the overview for the GetHuman method overload.&#160;"],
["AttachEntityToHand","C_ScriptBindHuman__AttachEntityToHand@IFunctionHandler__@ScriptHandle@uint.html","  Syntax: Human.AttachEntityToHand(id, hand) Attaches entity to human&#39;s hand &#160;"],
["AttachTo","C_ScriptBindHuman__AttachTo@C_Human__.html","  &#160;"],
["CanBeRobbed","C_ScriptBindHuman__CanBeRobbed@IFunctionHandler__.html","  Syntax: Human.CanBeRobbed(EntityId victimEntityId) Find out if actor can be robbed&#160;"],
["CanInteractWith","C_ScriptBindHuman__CanInteractWith@IFunctionHandler__@ScriptHandle.html","  Syntax: Human.CanInteractWith() Checks if entity is close enough to interact with another one. @deprecated use Actor.CanInteractWith &#160;"],
["CanTalk","C_ScriptBindHuman__CanTalk@IFunctionHandler__.html","  Syntax: Human.CanTalk() Checks if this human have something to say. @deprecated use Actor.CanTalk &#160;"],
["CanUseLadder","C_ScriptBindHuman__CanUseLadder@IFunctionHandler__@ScriptHandle@float@bool.html","  Syntax: Human.CanUseLadder(ladderEntity,useOnlyFromFront) Return 0/1 depending if the ladder can be climbed on &#160;"],
["DetachFromHand","C_ScriptBindHuman__DetachFromHand@IFunctionHandler__@uint.html","  Syntax: Human.DetachFromHand(hand) removes item from human&#39;s hand - drops if not equip or holster otherwise &#160;"],
["Dismount","C_ScriptBindHuman__Dismount@IFunctionHandler__.html","  Syntax: Human.Dismount() Mounts selected horse. &#160;"],
["DrawFromInventory","C_ScriptBindHuman__DrawFromInventory@IFunctionHandler__@framework__T_WUIDScriptType@int@bool.html","  Syntax: Human.DrawFromInventory( itemId, hand, animate ) Spawn item from inventory to human hands and animate drawing it from somewhere &#160;"],
["DrawWeapon","C_ScriptBindHuman__DrawWeapon@IFunctionHandler__.html","  Syntax: Human.DrawWeapon() Draw active weapon set &#160;"],
["ForceDismount","C_ScriptBindHuman__ForceDismount@IFunctionHandler__.html","  Syntax: Human.Dismount() Mounts selected horse. &#160;"],
["ForceMount","C_ScriptBindHuman__ForceMount@IFunctionHandler__@ScriptHandle.html","  Syntax: Human.Mount(EntityId horseId) Mounts selected horse. &#160;"],
["GetDialogRequestSourceName","C_ScriptBindHuman__GetDialogRequestSourceName@IFunctionHandler_.html","  Syntax: Human.GetDialogRequestSourceName() Returns name of entity which initiated dialog request with this human. &#160;"],
["GetHorse","C_ScriptBindHuman__GetHorse@IFunctionHandler__.html","  Syntax: Human.GetHorse() Returns WUID of a horse the human is mounted on, otherwise returns invalid WUID. &#160;"],
["GetHorseMountPoint","C_ScriptBindHuman__GetHorseMountPoint@IFunctionHandler__@ScriptHandle.html","  Syntax: Horse.GetHorseMountPoint(EntityId horseId, Vector3 pos, Vector3 dir) &#160;"],
["GetItemInHand","C_ScriptBindHuman__GetItemInHand@IFunctionHandler__@int.html","  &#160;"],
["GrabOnLadder","C_ScriptBindHuman__GrabOnLadder@IFunctionHandler__@ScriptHandle.html","  Syntax: Human.GrabOnLadder() Grabs actor on a ladder &#160;"],
["HolsterToInventory","C_ScriptBindHuman__HolsterToInventory@IFunctionHandler__@int@bool.html","  Syntax: Human.HolsterToInventory( hand, animate ) Despawn inventory item and animate holstering it to somewhere &#160;"],
["HolsterWeapon","C_ScriptBindHuman__HolsterWeapon@IFunctionHandler__.html","  Syntax: Human.HolsterWeapon() Holster active weapon set &#160;"],
["InterruptDialog","C_ScriptBindHuman__InterruptDialog@IFunctionHandler_.html","  Syntax: Human.InterruptDialog() Interrupts an ongoing dialog. &#160;"],
["IsInDialog","C_ScriptBindHuman__IsInDialog@IFunctionHandler__.html","  Syntax: Human.IsInDialog() Checks if this human is currently in dialogue/monologue. &#160;"],
["IsMounted","C_ScriptBindHuman__IsMounted@IFunctionHandler__.html","  Syntax: Human.IsMounted() Returns if a human is mounted on a horse &#160;"],
["IsOnLadder","C_ScriptBindHuman__IsOnLadder@IFunctionHandler__.html","  Syntax: Human.IsOnLadder() Returns 0/1 depending on if actor is already grabbed on a ladder &#160;"],
["IsPickpocketing","C_ScriptBindHuman__IsPickpocketing@IFunctionHandler__.html","  Syntax: Human.IsPickpocketing() True if human is pickpocketing&#160;"],
["IsWeaponDrawn","C_ScriptBindHuman__IsWeaponDrawn@IFunctionHandler__.html","  Syntax: Human.IsWeaponDrawn() return true if human have any weapon set active &#160;"],
["Mount","C_ScriptBindHuman__Mount@IFunctionHandler__@ScriptHandle.html","  Syntax: Human.Mount(EntityId horseId) Mounts selected horse. &#160;"],
["PickUpItem","C_ScriptBindHuman__PickUpItem@IFunctionHandler__@framework__T_WUIDScriptType@bool.html","  Syntax: Human.PickUpItem( itemId, toHand ) Picks up an item &#160;"],
["PlaceItem","C_ScriptBindHuman__PlaceItem@IFunctionHandler__@framework__T_WUIDScriptType@ScriptHandle@bool.html","  Syntax: Human.Place( itemId, entityId, fromHand) Places an item &#160;"],
["PlayAnim","C_ScriptBindHuman__PlayAnim@IFunctionHandler__@char_const_@char_const_.html","  &#160;"],
["PrepareFood","C_ScriptBindHuman__PrepareFood@IFunctionHandler__@framework__T_WUIDScriptType@int.html","  Syntax: Human.PrepareFood(id, type) Cooking functionality.&#160;"],
["PrepareForDialog","C_ScriptBindHuman__PrepareForDialog@IFunctionHandler_.html","  Syntax: Human.PrepareForDialog() Notifies dialog manager that this human is preparing for dialog. This is a response to signal dialog request start which handled by AI. &#160;"],
["ReadyForDialog","C_ScriptBindHuman__ReadyForDialog@IFunctionHandler_@bool.html","  Syntax: Human.ReadyForDialog(false) Notifies dialog manager that this human is ready for dialog. This is a response to signal dialog request start which handled by AI. &#160;"],
["ReadyForDialogWithTwins","C_ScriptBindHuman__ReadyForDialogWithTwins@IFunctionHandler_@bool.html","  Syntax: Human.ReadyForDialogWithTwins(false) Notifies dialog manager that this human is not ready for dialog so twins should be used instead. This is a response to signal dialog request start which handled by AI. &#160;"],
["RequestDialog","C_ScriptBindHuman__RequestDialog@IFunctionHandler__.html","  Syntax: Human.RequestDialog(entity, roles, bOnce, bIsInterruptibleByPlayer) Requests dialog with this human. roles - meta roles override for source soul Dialog does not start immediately but it only notifies targeted entity that somebody wants to interact with it. If target entity does not respond in proper time the request is canceled automatically. Returns true in case request was successfully accepted by dialog manager. In some cases it can return false which means that dialog was refused.&#160;"],
["RequestPickpocketing","C_ScriptBindHuman__RequestPickpocketing@IFunctionHandler__@ScriptHandle@int.html","  Syntax: Human.RequestPickpocketing(EntityId victimEntityId, mode) Start stealing from victim&#160;"],
["SetAnimMotionParam","C_ScriptBindHuman__SetAnimMotionParam@IFunctionHandler__@int@float.html","  &#160;"],
["StartBookTranscription","C_ScriptBindHuman__StartBookTranscription@IFunctionHandler__@ScriptHandle.html","  &#160;"],
["StartBuilding","C_ScriptBindHuman__StartBuilding@IFunctionHandler__@ScriptHandle.html","  This is StartBuilding, a member of class C_ScriptBindHuman.&#160;"],
["StartReading","C_ScriptBindHuman__StartReading@IFunctionHandler__@ScriptHandle.html","  &#160;"],
["StopAnim","C_ScriptBindHuman__StopAnim@IFunctionHandler__.html","  &#160;"],
["ToggleWeapon","C_ScriptBindHuman__ToggleWeapon@IFunctionHandler__.html","  Syntax: Human.ToggleWeapon() Toggle active weapon set &#160;"],
["ToggleWeaponSet","C_ScriptBindHuman__ToggleWeaponSet@IFunctionHandler__@int.html","  Syntax: Human.ToggleWeaponSet(set) Toggle selected weapon set if available. &#160;"],
["C_ScriptBindInventory Class","C_ScriptBindInventory.html",""],
["AddItem","C_ScriptBindInventory__AddItem@IFunctionHandler__@framework__T_WUIDScriptType.html","  Syntax: Inventory.AddItem( framework::T_WUIDScriptType id ) Adds item defined by id. &#160;"],
["AttachTo","C_ScriptBindInventory__AttachTo@IEntity_@C_Inventory_.html","  &#160;"],
["CreateItem","C_ScriptBindInventory__CreateItem@IFunctionHandler__@char_const_@float@int.html","  Syntax: Inventory.CreateItem() Creates item defined by guid and immediately insert it into inventory&#160;"],
["DeleteItem","C_ScriptBindInventory__DeleteItem@IFunctionHandler__@framework__T_WUIDScriptType@int.html","  Syntax: Inventory.DeleteItem( id ) Removes an item from the inventory and deletes it. &#160;"],
["DeleteItemOfClass","C_ScriptBindInventory__DeleteItemOfClass@IFunctionHandler__@char_const_@int.html","  Syntax: Inventory.DeleteItemOfClass( classIdText, count ) Removes an item from the inventory and deletes it. &#160;"],
["DetachFrom","C_ScriptBindInventory__DetachFrom@IEntity_.html","  This is DetachFrom, a member of class C_ScriptBindInventory.&#160;"],
["Dump","C_ScriptBindInventory__Dump@IFunctionHandler__.html","  Syntax: Inventory.Dump() Dumps the inventory. &#160;"],
["FindItem","C_ScriptBindInventory__FindItem@IFunctionHandler__@char_const_.html","  Syntax: Inventory.FindItem( classIdText ) Finds an item that matches to class id. &#160;"],
["GetCount","C_ScriptBindInventory__GetCount@IFunctionHandler__.html","  Syntax: Inventory.GetCount() Gets the number of the inventory elements. &#160;"],
["GetCountOfCategory","C_ScriptBindInventory__GetCountOfCategory@IFunctionHandler__@char__.html","  Syntax: Inventory.GetCountOfCategory( const char* category ) Gets the number of element of the specified category inside the inventory. &#160;"],
["GetCountOfClass","C_ScriptBindInventory__GetCountOfClass@IFunctionHandler__@char_const_.html","  Syntax: Inventory.GetCountOfClass( char const* classIdText ) Gets the number of element of the specified DB id inside the inventory. &#160;"],
["GetId","C_ScriptBindInventory__GetId@IFunctionHandler__.html","  Syntax: Inventory.GetId() Returns runtime inventory id. &#160;"],
["GetInventoryTable","C_ScriptBindInventory__GetInventoryTable@IFunctionHandler__.html","  Syntax: Inventory.GetInventoryTable() Gets the inventory table. &#160;"],
["GetMemoryUsage","C_ScriptBindInventory__GetMemoryUsage@ICrySizer__@const.html","  This is GetMemoryUsage, a member of class C_ScriptBindInventory.&#160;"],
["GetMoney","C_ScriptBindInventory__GetMoney@IFunctionHandler__.html","  Syntax: Inventory.GetMoney() Returns amount of money in this inventory converted into float &#160;"],
["HasItem","C_ScriptBindInventory__HasItem@IFunctionHandler__@framework__T_WUIDScriptType.html","  Syntax: Inventory.HasItem( framework::T_WUIDScriptType itemId ) Returns true if item is in this inventory. &#160;"],
["MoveItemOfClass","C_ScriptBindInventory__MoveItemOfClass@IFunctionHandler__@framework__T_WUIDScriptType@char_const_@int@bool.html","  Syntax: Inventory.MoveItemOfClass( classIdText, count ) Moves an item from the inventory to target inventory. &#160;"],
["Release","C_ScriptBindInventory__Release.html","  This is Release, a member of class C_ScriptBindInventory.&#160;"],
["RemoveAllItems","C_ScriptBindInventory__RemoveAllItems@IFunctionHandler__.html","  Syntax: Inventory.RemoveAllItems() Removes all items from the inventory. &#160;"],
["RemoveItem","C_ScriptBindInventory__RemoveItem@IFunctionHandler__@framework__T_WUIDScriptType@int.html","  Syntax: Inventory.RemoveItem( id ) Removes an item from the inventory. &#160;"],
["RemoveMoney","C_ScriptBindInventory__RemoveMoney@IFunctionHandler__@float.html","  Syntax: Inventory.RemoveMoney(5.5) Removes 5.5 of actual currency. Money are removed only if inventory have such amount. &#160;"],
["Validate","C_ScriptBindInventory__Validate@IFunctionHandler__.html","  Syntax: Inventory.Validate() Validates the inventory. &#160;"],
["C_ScriptBindItemManager Class","C_ScriptBindItemManager.html",""],
["AddOnEquipBuff","C_ScriptBindItemManager__AddOnEquipBuff@IFunctionHandler__@framework__T_WUIDScriptType@char__@bool.html","  &#160;"],
["CreateItem","C_ScriptBindItemManager__CreateItem@IFunctionHandler__@char_const_@float@int.html","  creates new item with defined health and amount &#160;"],
["GetItem","C_ScriptBindItemManager__GetItem@IFunctionHandler__@framework__T_WUIDScriptType.html","  Syntax: ItemManager.GetItem( id ) Returns item script table which can be used to access item specific data &#160;"],
["GetItemName","C_ScriptBindItemManager__GetItemName@IFunctionHandler__@char_const_.html","  Syntax: ItemManager.GetItemName( classId ) Returns database name of the item. &#160;"],
["GetItemOwner","C_ScriptBindItemManager__GetItemOwner@IFunctionHandler__@framework__T_WUIDScriptType.html","  Syntax: ItemManager.GetItemOwner( id ) Returns item owner wuid &#160;"],
["GetItemUIName","C_ScriptBindItemManager__GetItemUIName@IFunctionHandler__@char_const_.html","  Syntax: ItemManager.GetItemUIName( classId ) Returns UI name of the item. &#160;"],
["IsItemOversized","C_ScriptBindItemManager__IsItemOversized@IFunctionHandler__@framework__T_WUIDScriptType.html","  Syntax: ItemManager.IsItemOversized( id ) Returns whether item is oversized &#160;"],
["RemoveItem","C_ScriptBindItemManager__RemoveItem@IFunctionHandler__@framework__T_WUIDScriptType.html","  Syntax: ItemManager.RemoveItem( id ) Removes item. Item creation/remove might be disabled on master to avoid cheating. &#160;"],
["SetItemOwner","C_ScriptBindItemManager__SetItemOwner@IFunctionHandler__@framework__T_WUIDScriptType@framework__T_WUIDScriptType@bool.html","  Syntax: ItemManager.SerItemOwner( itemId, ownerId, markAsStolen ) No return value. &#160;"],
["C_ScriptBindPickableItem Class","C_ScriptBindPickableItem.html",""],
["AttachTo","C_ScriptBindPickableItem__AttachTo@C_PickableItem__.html","  &#160;"],
["BelongsToDeadBody","C_ScriptBindPickableItem__BelongsToDeadBody@IFunctionHandler_.html","  Syntax: Item.BelongsToDeadBody() DEPRECATED Returns true if the item&#39;s owner is dead &#160;"],
["CanPickUp","C_ScriptBindPickableItem__CanPickUp@IFunctionHandler__@ScriptHandle.html","  Syntax: Item.CanPickUp( ScriptHandle userId ) Checks if the item can be picked up by the user. &#160;"],
["CanSteal","C_ScriptBindPickableItem__CanSteal@IFunctionHandler__@ScriptHandle.html","  Syntax: Item.CanSteal( ScriptHandle userId ) Checks if the item can be stolen by the user. &#160;"],
["CanUse","C_ScriptBindPickableItem__CanUse@IFunctionHandler__@ScriptHandle.html","  Syntax: Item.CanUse( ScriptHandle userId ) Checks if the item can be used by the user. &#160;"],
["GetExtensionParams","C_ScriptBindPickableItem__GetExtensionParams@IFunctionHandler_@char__@SmartScriptTable.html","  Syntax: Item.GetExtensionParams( const char *extension, SmartScriptTable params ) Gets extension parameters. &#160;"],
["GetHealth","C_ScriptBindPickableItem__GetHealth@IFunctionHandler__.html","  Syntax: Item.GetHealth() Gets item health. &#160;"],
["GetId","C_ScriptBindPickableItem__GetId@IFunctionHandler__.html","  Syntax: Item.GetId() Gets item id &#160;"],
["GetLinkedOwner","C_ScriptBindPickableItem__GetLinkedOwner@IFunctionHandler_.html","  Syntax: Item.GetLinkedOwner() Returns linked owner &#160;"],
["GetMaxHealth","C_ScriptBindPickableItem__GetMaxHealth@IFunctionHandler__.html","  Syntax: Item.GetMaxHealth() Gets the maximum item health. &#160;"],
["GetMountedAngleLimits","C_ScriptBindPickableItem__GetMountedAngleLimits@IFunctionHandler__.html","  Syntax: Item.GetMountedAngleLimits() Gets the mounted angle limits for the item. &#160;"],
["GetMountedDir","C_ScriptBindPickableItem__GetMountedDir@IFunctionHandler__.html","  Syntax: Item.GetMountedDir() Gets the mounted direction for the item. &#160;"],
["GetOwnerId","C_ScriptBindPickableItem__GetOwnerId@IFunctionHandler__.html","  Syntax: Item.GetOwnerId() Gets the identifier of the item&#39;s owner. &#160;"],
["GetParams","C_ScriptBindPickableItem__GetParams@IFunctionHandler__.html","  Syntax: Item.GetParams() Gets the item parameters. &#160;"],
["GetPhase","C_ScriptBindPickableItem__GetPhase@IFunctionHandler_.html","  Syntax: Item.GetPhase() Returns phase relative from 0 to 1. &#160;"],
["GetPhaseById","C_ScriptBindPickableItem__GetPhaseById@IFunctionHandler_.html","  Syntax: Item.GetPhaseId() Returns absolute phase id from 0 to max phases. &#160;"],
["GetStats","C_ScriptBindPickableItem__GetStats@IFunctionHandler__.html","  Syntax: Item.GetStats() Gets the item statistics. &#160;"],
["GetUIName","C_ScriptBindPickableItem__GetUIName@IFunctionHandler__.html","  Syntax: Item.GetUIName() Gets the UI name. &#160;"],
["IsDestroyed","C_ScriptBindPickableItem__IsDestroyed@IFunctionHandler__.html","  Syntax: Item.IsDestroyed() Event that occurs when the item is destroyed. &#160;"],
["IsFromShop","C_ScriptBindPickableItem__IsFromShop@IFunctionHandler_.html","  Syntax: Item.IsFromShop() Returns true if the item is owner by some shop and can be bought instead of picked &#160;"],
["IsMounted","C_ScriptBindPickableItem__IsMounted@IFunctionHandler__.html","  Syntax: Item.IsMounted() Checks if the item is mounted. &#160;"],
["IsOversized","C_ScriptBindPickableItem__IsOversized@IFunctionHandler__.html","  Syntax: Item.IsOversized() Returns true if the item is too big to be picket up &#160;"],
["IsUsed","C_ScriptBindPickableItem__IsUsed@IFunctionHandler__.html","  Syntax: Item.IsUsed() Checks if the item is used. &#160;"],
["OnHit","C_ScriptBindPickableItem__OnHit@IFunctionHandler__@SmartScriptTable.html","  Syntax: Item.OnHit( SmartScriptTable hitTable ) Events that occurs when the item is hit. &#160;"],
["OnSteal","C_ScriptBindPickableItem__OnSteal@IFunctionHandler__@ScriptHandle.html","  Syntax: Item.OnSteal( ScriptHandle userId ) If user is player, asks if he wants to steal the item and steals it. &#160;"],
["OnUsed","C_ScriptBindPickableItem__OnUsed@IFunctionHandler__@ScriptHandle.html","  Syntax: Item.OnUsed( ScriptHandle userId ) Events that occurs when the item is used. &#160;"],
["PlayAnimation","C_ScriptBindPickableItem__PlayAnimation@IFunctionHandler__@char__.html","  Syntax: Item.PlayAnimation( const char *animationName ) Plays the specified animation. &#160;"],
["Reset","C_ScriptBindPickableItem__Reset@IFunctionHandler__.html","  Syntax: Item.Reset() Resets the item. &#160;"],
["Select","C_ScriptBindPickableItem__Select@IFunctionHandler__@bool.html","  Syntax: Item.Select( bool select ) Selects/deselects the item. &#160;"],
["SetExtensionActivation","C_ScriptBindPickableItem__SetExtensionActivation@IFunctionHandler__@char__@bool.html","  Syntax: Item.SetExtensionActivation( const char *extension, bool activation ) Activates/deactivates an extension. &#160;"],
["SetExtensionParams","C_ScriptBindPickableItem__SetExtensionParams@IFunctionHandler_@char__@SmartScriptTable.html","  Syntax: Item.SetExtensionParams( const char *extension, SmartScriptTable params ) Sets extension parameters. &#160;"],
["SetIgnoreSaveFlag","C_ScriptBindPickableItem__SetIgnoreSaveFlag@IFunctionHandler__@bool.html","  Syntax: Item.SetSaveFlag( bool save ) Sets or unsets E_IF_NoSaving flag on item. This item won&#39;t be saved or loaded (it will keep it&#39;s state through load - use with extreme caution). Intended for use only with transcription books &#160;"],
["SetMountedAngleLimits","C_ScriptBindPickableItem__SetMountedAngleLimits@IFunctionHandler__@float@float@float.html","  Syntax: Item.SetMountedAngleLimits( float min_pitch, float max_pitch, float yaw_range ) Sets the mounted angle limits (yaw-pitch). &#160;"],
["SetPhase","C_ScriptBindPickableItem__SetPhase@IFunctionHandler_@float.html","  Syntax: Item.SetPhase(phase) Sets phase of this objects and reload its mode. Phase relative from 0 to 1. &#160;"],
["SetPhaseById","C_ScriptBindPickableItem__SetPhaseById@IFunctionHandler_@uint.html","  Syntax: Item.SetPhaseById(id) Sets phase of this objects by phase id and reload its model. Id is absolute phase from 0 to max phases. Max phases needs to be known from DB. &#160;"],
["StartUse","C_ScriptBindPickableItem__StartUse@IFunctionHandler__@ScriptHandle.html","  Syntax: Item.StartUse( ScriptHandle userId ) The specified user now will start to use the item. &#160;"],
["StopUse","C_ScriptBindPickableItem__StopUse@IFunctionHandler__@ScriptHandle.html","  Syntax: Item.StopUse( ScriptHandle userId ) The specified user now will stop to use the item. &#160;"],
["Use","C_ScriptBindPickableItem__Use@IFunctionHandler__@ScriptHandle.html","  Syntax: Item.Use( ScriptHandle userId ) The specified user now will use the item. &#160;"],
["C_ScriptBindPlayer Class","C_ScriptBindPlayer.html",""],
["GetPlayer","C_ScriptBindPlayer__GetPlayer@IFunctionHandler__.html","  &#160;"],
["AddLuaActions","C_ScriptBindPlayer__AddLuaActions@IFunctionHandler__.html","  &#160;"],
["AddSoAction","C_ScriptBindPlayer__AddSoAction@IFunctionHandler__@framework__T_WUIDScriptType@char_@char_@int.html","  Syntax: Human.AddSoAction(wuid, type, name, interaction, enabled = true, disabled_reason = &quot;&quot;) Adds hint for given SO. Be careful, because of only one of them can be set up in at a same time. &#160;"],
["AttachTo","C_ScriptBindPlayer__AttachTo@C_Player__.html","  &#160;"],
["CancelDogObjective","C_ScriptBindPlayer__CancelDogObjective@IFunctionHandler__.html","  &#160;"],
["CanMountHorse","C_ScriptBindPlayer__CanMountHorse@IFunctionHandler__@ScriptHandle.html","  Syntax: Player.CanMountHorse(horseEntityId) Returns if the player can mount a target horse &#160;"],
["CanSleepAndReportProblem","C_ScriptBindPlayer__CanSleepAndReportProblem@IFunctionHandler__.html","  Syntax: Player.CanSleepAndReportProblem() Returns bool and report why player cannot sleep right now. &#160;"],
["ChangePlayerHeadLight","C_ScriptBindPlayer__ChangePlayerHeadLight@IFunctionHandler__@char_.html","  Syntax: Player.ChangePlayerHeadLight(&quot;Archetype&quot;) Recreates player head light with selected archetype. &#160;"],
["ClearPlayerHorse","C_ScriptBindPlayer__ClearPlayerHorse@IFunctionHandler__.html","  &#160;"],
["DebugDisableInteractionFilter","C_ScriptBindPlayer__DebugDisableInteractionFilter@IFunctionHandler__@char__.html","  &#160;"],
["DebugEnableInteractionFilter","C_ScriptBindPlayer__DebugEnableInteractionFilter@IFunctionHandler__@char__.html","  &#160;"],
["DebugStopMinigame","C_ScriptBindPlayer__DebugStopMinigame@IFunctionHandler__.html","  &#160;"],
["EnableFastTravel","C_ScriptBindPlayer__EnableFastTravel@IFunctionHandler__@bool.html","  &#160;"],
["EnablePlayerHorseInventory","C_ScriptBindPlayer__EnablePlayerHorseInventory@IFunctionHandler__@bool.html","  &#160;"],
["FeedDog","C_ScriptBindPlayer__FeedDog@IFunctionHandler__.html","  &#160;"],
["GetHorseId","C_ScriptBindPlayer__GetHorseId@IFunctionHandler__.html","  &#160;"],
["GetPlayerHorse","C_ScriptBindPlayer__GetPlayerHorse@IFunctionHandler__.html","  &#160;"],
["HasRunningDogObjective","C_ScriptBindPlayer__HasRunningDogObjective@IFunctionHandler__.html","  &#160;"],
["HorseInspect","C_ScriptBindPlayer__HorseInspect@IFunctionHandler__@ScriptHandle.html","  &#160;"],
["IsLaying","C_ScriptBindPlayer__IsLaying@IFunctionHandler__.html","  Syntax: Player.IsLaying() Returns true when player is laying &#160;"],
["IsSitting","C_ScriptBindPlayer__IsSitting@IFunctionHandler__.html","  Syntax: Player.IsSitting() Returns true when player is sitting &#160;"],
["OnBedInterrupt","C_ScriptBindPlayer__OnBedInterrupt@IFunctionHandler__.html","  &#160;"],
["OnBedPrepareForDialog","C_ScriptBindPlayer__OnBedPrepareForDialog@IFunctionHandler__.html","  Syntax: Player.OnBedPrepareForDialog(WUID speaker) Wake up player and prepare him for dialog with speaker, if speaker is not specified player can end up in bed position &#160;"],
["OnBedStop","C_ScriptBindPlayer__OnBedStop@IFunctionHandler__.html","  &#160;"],
["OnEndInteractive","C_ScriptBindPlayer__OnEndInteractive@IFunctionHandler__.html","  &#160;"],
["OnEndItemInteraction","C_ScriptBindPlayer__OnEndItemInteraction@IFunctionHandler__.html","  &#160;"],
["OnEnterInteractive","C_ScriptBindPlayer__OnEnterInteractive@IFunctionHandler__.html","  &#160;"],
["OnSleeping","C_ScriptBindPlayer__OnSleeping@IFunctionHandler__@float@framework__T_WUIDScriptType.html","  &#160;"],
["PushBack","C_ScriptBindPlayer__PushBack@IFunctionHandler__@int.html","  &#160;"],
["RequestDogObjective","C_ScriptBindPlayer__RequestDogObjective@IFunctionHandler__@ScriptHandle.html","  &#160;"],
["SetPlayerDog","C_ScriptBindPlayer__SetPlayerDog@IFunctionHandler__@ScriptHandle.html","  This is SetPlayerDog, a member of class C_ScriptBindPlayer.&#160;"],
["SetPlayerHorse","C_ScriptBindPlayer__SetPlayerHorse@IFunctionHandler__@ScriptHandle.html","  &#160;"],
["SetWhistling","C_ScriptBindPlayer__SetWhistling@IFunctionHandler__@bool.html","  &#160;"],
["ToggleWeaponSet","C_ScriptBindPlayer__ToggleWeaponSet@IFunctionHandler__@int.html","  Syntax: Human.ToggleWeaponSet(set) Toggle selected weapon set if available. &#160;"],
["TryDrawTorch","C_ScriptBindPlayer__TryDrawTorch@IFunctionHandler_.html","  Syntax: Player.TryDrawTorch() Attempts to draw torch if equipped and hands are empty &#160;"],
["C_ScriptBindEnvironment Class","C_ScriptBindEnvironment.html",""],
["BlendTimeOfDay","C_ScriptBindEnvironment__BlendTimeOfDay@IFunctionHandler_@char_@int@bool.html","  Syntax: EnvironmentModule.BlendTimeOfDay(pProfileName, blendDuration, force) Blends Time Of Day profile from current one to specific one. If blending is already in progress it will queue next blend. Only last blend is queued.&#160;"],
["CoverHole","C_ScriptBindEnvironment__CoverHole@IFunctionHandler__@bool@ScriptHandle.html","  &#160;"],
["ForceImmediateWeatherUpdate","C_ScriptBindEnvironment__ForceImmediateWeatherUpdate@IFunctionHandler_.html","  Syntax: EnvironmentModule.ForceImmediateWeatherUpdate() Apply all weather params immediately and recreate weather state from those params.&#160;"],
["ForceWindDirection","C_ScriptBindEnvironment__ForceWindDirection@IFunctionHandler_@float.html","  Syntax: EnvironmentModule.ForceWindDirection() Set wind direction override. Negative value turns off override.&#160;"],
["MakeHole","C_ScriptBindEnvironment__MakeHole@IFunctionHandler__@bool@ScriptHandle.html","  int AddPickable(IFunctionHandler *pH, ScriptHandle entityId); int HidePicked(IFunctionHandler *pH, int hide, ScriptHandle entityId); &#160;"],
["RebuildClouds","C_ScriptBindEnvironment__RebuildClouds@IFunctionHandler_.html","  Syntax: EnvironmentModule.RebuildClouds() Regenerates all clouds with current values of cloudiness and cloud granularity&#160;"],
["C_ScriptBindMap Class","C_ScriptBindMap.html",""],
["C_ScriptBindMap::CallScript (char*, char*)","C_ScriptBindMap__CallScript@char_@char_.html",""],
["C_ScriptBindMap::CallScript (char*, std::list&lt;string&gt;&amp;)","C_ScriptBindMap__CallScript@char_@std__list_string__.html",""],
["CallScript","!!OVERLOADED_CallScript_C_ScriptBindMap.html","  This is the overview for the CallScript method overload.&#160;"],
["C_ScriptBind_Alchemy Class","C_ScriptBind_Alchemy.html",""],
["GetFlagTextFor","C_ScriptBind_Alchemy__GetFlagTextFor@IFunctionHandler__@int@int.html","  Syntax: Alchemy.GetFlagTextFor(EntityId user, item_type) returns flag text for alchemy item &#160;"],
["GetUsableFor","C_ScriptBind_Alchemy__GetUsableFor@IFunctionHandler__@int@int.html","  Syntax: Alchemy.GetUsableFor(EntityId user, item_type) returns usable state &#160;"],
["IsUsableByHold","C_ScriptBind_Alchemy__IsUsableByHold@IFunctionHandler__@int@int.html","  &#160;"],
["IsUsableEnabledFor","C_ScriptBind_Alchemy__IsUsableEnabledFor@IFunctionHandler__@int@int.html","  Syntax: Alchemy.IsUsableEnabledFor(EntityId user, item_type) returns true if item can be currently used &#160;"],
["ResetTable","C_ScriptBind_Alchemy__ResetTable@IFunctionHandler__@ScriptHandle.html","  Resets alchemy table and all linked alchemy items to theirs default positions. &#160;"],
["StartAlchemy","C_ScriptBind_Alchemy__StartAlchemy@IFunctionHandler__@ScriptHandle@ScriptHandle.html","  Syntax: Alchemy.StartAlchemy(EntityId user, EntityId table) Starts alchemy mini game. &#160;"],
["C_ScriptBind_Dice Class","C_ScriptBind_Dice.html",""],
["GetDice","C_ScriptBind_Dice__GetDice.html","  &#160;"],
["HoldDie","C_ScriptBind_Dice__HoldDie@IFunctionHandler_@ScriptHandle@ScriptHandle@int@int.html","  &#160;"],
["OverrideNextThrow","C_ScriptBind_Dice__OverrideNextThrow@IFunctionHandler_@int@SmartScriptTable.html","  &#160;"],
["RollDie","C_ScriptBind_Dice__RollDie@IFunctionHandler_@ScriptHandle@ScriptHandle@int.html","  Syntax: Dice.RollDie(dieNumber) Rolls a single die. &#160;"],
["SetAdvantage","C_ScriptBind_Dice__SetAdvantage@IFunctionHandler_@int@float.html","  &#160;"],
["SetAIDifficulty","C_ScriptBind_Dice__SetAIDifficulty@IFunctionHandler_@float.html","  &#160;"],
["SetAIRiskTaking","C_ScriptBind_Dice__SetAIRiskTaking@IFunctionHandler_@float.html","  &#160;"],
["SetScore","C_ScriptBind_Dice__SetScore@IFunctionHandler_@int@int.html","  &#160;"],
["ToggleHoldDie","C_ScriptBind_Dice__ToggleHoldDie@IFunctionHandler_@ScriptHandle@ScriptHandle@int.html","  &#160;"],
["C_ScriptBindMinigame Class","C_ScriptBindMinigame.html",""],
["BookTranscriptionNextPage","C_ScriptBindMinigame__BookTranscriptionNextPage@IFunctionHandler__.html","  &#160;"],
["CloseInventory","C_ScriptBindMinigame__CloseInventory@IFunctionHandler_.html","  Support functions &#160;"],
["GetBookStudyProgress","C_ScriptBindMinigame__GetBookStudyProgress@IFunctionHandler__@char_.html","  &#160;"],
["StartDice","C_ScriptBindMinigame__StartDice@IFunctionHandler__.html","  Syntax: Minigame.StartDice(ScriptHandle tableId, ScriptHandle playerId, ScriptHandle opponentNpcId, SmartScriptTable options) Start dice minigame. &#160;"],
["StartDiceByName","C_ScriptBindMinigame__StartDiceByName@IFunctionHandler__@char_.html","  Syntax: Minigame.StartDiceByName(const char* name) Start dice minigame. &#160;"],
["StartDiceWithScore","C_ScriptBindMinigame__StartDiceWithScore@IFunctionHandler__@ScriptHandle@ScriptHandle@ScriptHandle@int.html","  Syntax: Minigame.StartDice(ScriptHandle tableId, ScriptHandle playerId, ScriptHandle opponentNpcId) Start dice minigame. &#160;"],
["StartHerbGathering","C_ScriptBindMinigame__StartHerbGathering@IFunctionHandler__@ScriptHandle.html","  &#160;"],
["StartHoleDigging","C_ScriptBindMinigame__StartHoleDigging@IFunctionHandler__@ScriptHandle.html","  &#160;"],
["StartLockPicking","C_ScriptBindMinigame__StartLockPicking@IFunctionHandler__@ScriptHandle.html","  &#160;"],
["WasBookOpened","C_ScriptBindMinigame__WasBookOpened@IFunctionHandler__@char_.html","  &#160;"],
["C_ScriptBind_Sharpening Class","C_ScriptBind_Sharpening.html",""],
["DoStepOnGrindstone","C_ScriptBind_Sharpening__DoStepOnGrindstone@IFunctionHandler__@ScriptHandle.html","  Syntax: Sharpening.DoStepOnGrindstone() Perform single step on grindstone, use SetWheelSpeed() for constant speed and automatic pedalling. &#160;"],
["GetTotalQuality","C_ScriptBind_Sharpening__GetTotalQuality@IFunctionHandler__@ScriptHandle.html","  Syntax: Sharpening.GetTotalQuality() Get current health of the weapon. Range &lt;0,1&gt;. 1 is best. &#160;"],
["GetWheelSpeed","C_ScriptBind_Sharpening__GetWheelSpeed@IFunctionHandler__@ScriptHandle.html","  Syntax: Sharpening.GetWheelSpeed() Returns current wheel speed of the grindstone on which is sharpening performed. Range &lt;0,1&gt;. &#160;"],
["IsActive","C_ScriptBind_Sharpening__IsActive@IFunctionHandler__@ScriptHandle.html","  Syntax: Sharpening.IsActive) Returns sharpening state. True after StartSharpening and false after StopSharpening. &#160;"],
["MoveToWorstZone","C_ScriptBind_Sharpening__MoveToWorstZone@IFunctionHandler__@ScriptHandle.html","  Syntax: Sharpening.MoveToWorstZone() Moves to worst sharpened zone or stay on same position, if weapon is sharpened evenly. &#160;"],
["SetGrindstone","C_ScriptBind_Sharpening__SetGrindstone@IFunctionHandler__@ScriptHandle@ScriptHandle.html","  Syntax: Sharpening.SetGrindstone(EntityId entityId) Sets which grindstone will be used for sharpening. &#160;"],
["SetOptimalRotation","C_ScriptBind_Sharpening__SetOptimalRotation@IFunctionHandler__@ScriptHandle.html","  Syntax: Sharpening.SetOptimalRotation() Sets optimal rotation on which weapon is sharpened correctly. &#160;"],
["SetPosition","C_ScriptBind_Sharpening__SetPosition@IFunctionHandler__@ScriptHandle@float.html","  Syntax: Sharpening.SetPosition(float value) Weapon will slowly move to desired position. &#160;"],
["SetPressure","C_ScriptBind_Sharpening__SetPressure@IFunctionHandler__@ScriptHandle@float.html","  Syntax: Sharpening.SetPressure(float value) Set sharpening pressure, more pressure requires more energy but increases sharpening efficiency. &#160;"],
["SetRotation","C_ScriptBind_Sharpening__SetRotation@IFunctionHandler__@ScriptHandle@float.html","  Syntax: Sharpening.SetRotation(float value) Weapon will slowly move to desired rotation, use SetOptimalRotation() to sharpen weapon correctly &#160;"],
["SetWheelSpeed","C_ScriptBind_Sharpening__SetWheelSpeed@IFunctionHandler__@ScriptHandle@float.html","  Syntax: Sharpening.SetWheelSpeed(float value) Sets speed of grindstone wheel on which is sharpening performed. &#160;"],
["Start","C_ScriptBind_Sharpening__Start@IFunctionHandler__@ScriptHandle@ScriptHandle@framework__T_WUIDScriptType.html","  Syntax: Sharpening.Start(EntityId grindstoneId, int itemId) Starts sharpening weapon with selected inventory item on selected grindstone. &#160;"],
["Stop","C_ScriptBind_Sharpening__Stop@IFunctionHandler__@ScriptHandle.html","  Syntax: Sharpening.Stop() Stops sharpening, reseting state of the grindstone and setting new health to the weapon according to the results of sharpening. &#160;"],
["C_ScriptBindTutorial Class","C_ScriptBindTutorial.html",""],
["Complete","C_ScriptBindTutorial__Complete@IFunctionHandler_@char_const_.html","  Syntax: Tutorial.Complete() Completes tutorial. &#160;"],
["GetStage","C_ScriptBindTutorial__GetStage@IFunctionHandler_@char_const_.html","  Syntax: Tutorial.GetStage() Returns current tutorial progress stage &#160;"],
["IsActive","C_ScriptBindTutorial__IsActive@IFunctionHandler_@char_const_.html","  Syntax: Tutorial.IsActive() Return true in case tutorial is in progress. &#160;"],
["IsComplete","C_ScriptBindTutorial__IsComplete@IFunctionHandler_@char_const_.html","  Syntax: Tutorial.IsComplete() Returns true in case tutorial is completed. &#160;"],
["Proceed","C_ScriptBindTutorial__Proceed@IFunctionHandler_@char_const_.html","  Syntax: Tutorial.Proceed() Proceed to next tutorial stage. &#160;"],
["Restart","C_ScriptBindTutorial__Restart@IFunctionHandler_@char_const_.html","  Syntax: Tutorial.Restart() Restarts tutorial. &#160;"],
["C_ScriptBindQuest Class","C_ScriptBindQuest.html",""],
["ActivateQuest","C_ScriptBindQuest__ActivateQuest@IFunctionHandler__@char__.html","  Syntax: QuestSystem.ActivateQuest(const char *questName) Activate quest &#160;"],
["AreQuestVIPsAlive","C_ScriptBindQuest__AreQuestVIPsAlive@IFunctionHandler__@char__.html","  Syntax: QuestSystem.AreQuestVIPsAlive(const char *questName) Returns true if all quest vip are still alive&#160;"],
["C_ScriptBindQuest::CallScript (char*, char*)","C_ScriptBindQuest__CallScript@char_@char_.html",""],
["C_ScriptBindQuest::CallScript (char*, std::list&lt;string&gt;&amp;)","C_ScriptBindQuest__CallScript@char_@std__list_string__.html",""],
["CallScript","!!OVERLOADED_CallScript_C_ScriptBindQuest.html","  This is the overview for the CallScript method overload.&#160;"],
["CancelObjective","C_ScriptBindQuest__CancelObjective@IFunctionHandler__@char__.html","  Syntax: QuestSystem.CancelObjective(const char *questName) Cancel quest objective (tracked object count) &#160;"],
["CancelQuest","C_ScriptBindQuest__CancelQuest@IFunctionHandler__@char__@int.html","  Syntax: QuestSystem.CancelQuest(const char *questName, int flag) Cancel quest (repeat count, tracked object count) &#160;"],
["CanRepeatQuest","C_ScriptBindQuest__CanRepeatQuest@IFunctionHandler__@char__.html","  Syntax: QuestSystem.CanRepeatQuest(const char *questName) Returns if quest can be repeated &#160;"],
["CompleteObjective","C_ScriptBindQuest__CompleteObjective@IFunctionHandler__@char__.html","  Syntax: QuestSystem.CompleteObjective(const char *questName) Complete objective of quest with id, only if it is active &#160;"],
["DeactivateQuest","C_ScriptBindQuest__DeactivateQuest@IFunctionHandler__@char__.html","  Syntax: QuestSystem.DeactivateQuest(const char *questName) Deactivate quest &#160;"],
["GetActiveObjectives","C_ScriptBindQuest__GetActiveObjectives@IFunctionHandler__@char__.html","  Syntax: QuestSystem.GetActiveObjectives(const char *questName) Returns table with ids of active objectives &#160;"],
["GetObjectiveExpCoeff","C_ScriptBindQuest__GetObjectiveExpCoeff@IFunctionHandler__@char__.html","  Syntax: QuestSystem.OpenInventory() Opens inventory with item asset which should be delivered &#160;"],
["IsObjectiveCanceled","C_ScriptBindQuest__IsObjectiveCanceled@IFunctionHandler__@char__.html","  Syntax: QuestSystem.IsObjectiveCanceled(const char *questName) Returns true if objective is canceled, false if not, or quest or objective does not exist &#160;"],
["IsObjectiveCompleted","C_ScriptBindQuest__IsObjectiveCompleted@IFunctionHandler__@char__.html","  Syntax: QuestSystem.IsObjectiveCompleted(const char *questName) Returns true if objective is completed, false if not, or quest or objective does not exist &#160;"],
["IsObjectiveStarted","C_ScriptBindQuest__IsObjectiveStarted@IFunctionHandler__@char__.html","  Syntax: QuestSystem.IsObjectiveStarted(const char *questName) Returns true if objective has been started, false if not, or quest or objective does not exist &#160;"],
["IsObjectiveTrackedCompleted","C_ScriptBindQuest__IsObjectiveTrackedCompleted@IFunctionHandler__@char__.html","  Syntax: QuestSystem.IsObjectiveTrackedCompleted(const char *questName) Returns true if objective tracked assets count is enough &#160;"],
["IsObjectiveUnchanged","C_ScriptBindQuest__IsObjectiveUnchanged@IFunctionHandler__@char__.html","  Syntax: QuestSystem.IsObjectiveUnchanged(const char *questName) Returns true if objective is same as after reset, false if not, or quest or objective does not exist &#160;"],
["IsQuestActivated","C_ScriptBindQuest__IsQuestActivated@IFunctionHandler__@char__.html","  Syntax: QuestSystem.IsQuestActivated(const char *questName) Returns true if quest has been activated, false if not, or quest does not exist &#160;"],
["IsQuestAvailable","C_ScriptBindQuest__IsQuestAvailable@IFunctionHandler__@char__.html","  Syntax: QuestSystem.IsQuestAvailable(const char *questName) Returns true if quest is available, false if not, or quest does not exist &#160;"],
["IsQuestCanceled","C_ScriptBindQuest__IsQuestCanceled@IFunctionHandler__@char__.html","  Syntax: QuestSystem.IsQuestCanceled(const char *questName) Returns true if quest is completed, false if not, or quest or objective does not exist &#160;"],
["IsQuestCompleted","C_ScriptBindQuest__IsQuestCompleted@IFunctionHandler__@char__.html","  Syntax: QuestSystem.IsQuestCompleted(const char *questName) Returns true if quest is completed, false if not, or quest or objective does not exist &#160;"],
["IsQuestStarted","C_ScriptBindQuest__IsQuestStarted@IFunctionHandler__@char__.html","  Syntax: QuestSystem.IsQuestStarted(const char *questName) Returns true if quest has been started, false if not, or quest does not exist &#160;"],
["IsQuestUnchanged","C_ScriptBindQuest__IsQuestUnchanged@IFunctionHandler__@char__.html","  Syntax: QuestSystem.IsQuestUnchanged(const char *questName) Returns true if quest has only been loaded from DB &#160;"],
["LoadScripts","C_ScriptBindQuest__LoadScripts@char_@bool.html","  &#160;"],
["OpenInventory","C_ScriptBindQuest__OpenInventory@IFunctionHandler__@char__.html","  Syntax: QuestSystem.OpenInventory() Opens inventory with item asset which should be delivered &#160;"],
["RegisterQuestEntity","C_ScriptBindQuest__RegisterQuestEntity@IFunctionHandler__@ScriptHandle.html","  Syntax: QuestSystem.RegisterQuestEntity() Registers entity with quest smart object. Not on master. &#160;"],
["ReloadQuest","C_ScriptBindQuest__ReloadQuest@IFunctionHandler__@char_.html","  Syntax: QuestSystem.ReloadQuest() Reload quest DB tables. Not on master. &#160;"],
["ReloadQuests","C_ScriptBindQuest__ReloadQuests@IFunctionHandler__.html","  Syntax: QuestSystem.ReloadQuests() Reload all quests. Not on master. &#160;"],
["ResetQuest","C_ScriptBindQuest__ResetQuest@IFunctionHandler__@char__.html","  Syntax: QuestSystem.ResetQuest(const char *questName) Reset quest (repeat count, tracked object count) &#160;"],
["StartObjective","C_ScriptBindQuest__StartObjective@IFunctionHandler__@char__.html","  Syntax: QuestSystem.StartObjective(const char *questName) Start objective of quest with id &#160;"],
["StartQuest","C_ScriptBindQuest__StartQuest@IFunctionHandler__@char__.html","  Syntax: QuestSystem.StartQuest(const char *questName) Start quest if loaded from xml &#160;"],
["TriggerCondition","C_ScriptBindQuest__TriggerCondition@IFunctionHandler__.html","  Syntax: QuestSystem.TriggerCondition() Trigger condition evaluation of all types for current active objectives &#160;"],
["UserEnteredTrigger","C_ScriptBindQuest__UserEnteredTrigger@IFunctionHandler__@int@ScriptHandle.html","  Syntax: QuestSystem.PlayerEnteredTrigger(int placeAssetId, EntityId userId) Called from script when player enters ProximityTrigger or AreaTrigger &#160;"],
["C_ScriptBindCalendar Class","C_ScriptBindCalendar.html",""],
["GetGameTime","C_ScriptBindCalendar__GetGameTime@IFunctionHandler__.html","  Syntax: Calendar.GetGameTime() Returns game time (whole seconds from start of level) &#160;"],
["GetWorldDay","C_ScriptBindCalendar__GetWorldDay@IFunctionHandler__.html","  Syntax: Calendar.GetWorldDay() Returns number of whole days from start of level. &#160;"],
["GetWorldDayOfWeek","C_ScriptBindCalendar__GetWorldDayOfWeek@IFunctionHandler__.html","  Syntax: Calendar.GetWorldDayOfWeek() Returns ordinal number of day in current week. Range is &lt;0,6&gt; monday is 0 &#160;"],
["GetWorldHourOfDay","C_ScriptBindCalendar__GetWorldHourOfDay@IFunctionHandler__.html","  Syntax: Calendar.GetWorldHourOfDay() Returns hour of current day. Range is &lt;0,24) The number is float. &#160;"],
["GetWorldTime","C_ScriptBindCalendar__GetWorldTime@IFunctionHandler__.html","  Syntax: Calendar.GetWorldTime() Returns world time (whole seconds from start of level) &#160;"],
["GetWorldTimeRatio","C_ScriptBindCalendar__GetWorldTimeRatio@IFunctionHandler__.html","  Syntax: Calendar.GetWorldTimeRatio() Returns ratio of world time. &#160;"],
["IsFakedTimeOfDay","C_ScriptBindCalendar__IsFakedTimeOfDay@IFunctionHandler__.html","  Syntax: Calendar.IsFakedTimeOfDay() Returns true in case fake time of day is on. &#160;"],
["IsNightTimeOfDay","C_ScriptBindCalendar__IsNightTimeOfDay@IFunctionHandler__.html","  Syntax: Calendar.IsNightTimeOfDay() Returns true in night, false in day. Uses time from TimeOfDay. &#160;"],
["IsWorldTimePaused","C_ScriptBindCalendar__IsWorldTimePaused@IFunctionHandler__.html","  Syntax: Calendar.IsWorldTimePaused() Returns true if world time is paused. &#160;"],
["SetFakeTimeOfDay","C_ScriptBindCalendar__SetFakeTimeOfDay@IFunctionHandler__@float.html","  Syntax: Calendar.SetFakeTimeOfDay(10) Forces CryEngine to believe there is time different from our world time. The fake time is static. It is not used for RPG systems, only in TimeOfDay. &#160;"],
["SetWorldTime","C_ScriptBindCalendar__SetWorldTime@IFunctionHandler__@int.html","  Syntax: Calendar.SetWorldTime(3000) Sets ratio of world time. &#160;"],
["SetWorldTimePaused","C_ScriptBindCalendar__SetWorldTimePaused@IFunctionHandler__@bool.html","  Syntax: Calendar.SetWorldTimePaused(true) Pauses/unpauses world time. &#160;"],
["SetWorldTimeRatio","C_ScriptBindCalendar__SetWorldTimeRatio@IFunctionHandler__@float.html","  Syntax: Calendar.SetWorldTimeRatio(30) Sets ratio of world time. &#160;"],
["UnfakeTimeOfDay","C_ScriptBindCalendar__UnfakeTimeOfDay@IFunctionHandler__.html","  Syntax: Calendar.UnfakeTimeOfDay() Switches CryEngine back to our world time &#160;"],
["RPG","C_ScriptBindRPGModule.html",""],
["_GetConstant","C_ScriptBindRPGModule___GetConstant@IFunctionHandler__@SmartScriptTable@char__.html","  &#160;"],
["_SetConstant","C_ScriptBindRPGModule___SetConstant@IFunctionHandler__@SmartScriptTable@char__@float.html","  This is _SetConstant, a member of class C_ScriptBindRPGModule.&#160;"],
["AddStatXP","C_ScriptBindRPGModule__AddStatXP@IFunctionHandler_@ScriptHandle@framework__T_WUIDScriptType@char_@int@float@float.html","  Syntax: RPG.AddStatXP(event, soul, statName, totalXp, oldProgress, newProgress) Gives soul &#39;soul&#39; X XP points towards RPG stat &#39;statName&#39; (e.g. &#39;str&#39; for strength, &#39;agi&#39; for agility), where &#39;X = floor(totalXp * newProgress) - floor(totalXp * oldProgress)&#39;. &#160;"],
["CaptionObjectUsed","C_ScriptBindRPGModule__CaptionObjectUsed@IFunctionHandler_@ScriptHandle@bool.html","  &#160;"],
["GetFactionById","C_ScriptBindRPGModule__GetFactionById@IFunctionHandler_@int.html","  Syntax: RPG.GetFactionById(factionId) Returns faction with the given id or nil if no such faction exists. &#160;"],
["GetFactions","C_ScriptBindRPGModule__GetFactions@IFunctionHandler_.html","  Syntax: RPG.GetFactions() Rerturns an array of all factions. &#160;"],
["GetHobbies","C_ScriptBindRPGModule__GetHobbies@IFunctionHandler__.html","  Syntax: RPG.GetHobbies() Returns a table indexed by hobby names.&#160;"],
["GetLocationById","C_ScriptBindRPGModule__GetLocationById@IFunctionHandler_@char_.html","  Syntax: RPG.GetLocationById() Returns a location object or nil. &#160;"],
["GetLocationByName","C_ScriptBindRPGModule__GetLocationByName@IFunctionHandler_@char_.html","  Syntax: RPG.GetLocationByName() Returns a location object or nil. &#160;"],
["GetLocations","C_ScriptBindRPGModule__GetLocations@IFunctionHandler_.html","  Syntax: RPG.GetLocations() Returns an array of all locations. &#160;"],
["GetMemoryUsage","C_ScriptBindRPGModule__GetMemoryUsage@ICrySizer__@const.html","  This is GetMemoryUsage, a member of class C_ScriptBindRPGModule.&#160;"],
["Help","C_ScriptBindRPGModule__Help@IFunctionHandler__.html","  Syntax: RPG.Help() Print RPG constants/params with their values. You can supply one string argument to filter the results.&#160;"],
["IsPublicEnemy","C_ScriptBindRPGModule__IsPublicEnemy@IFunctionHandler__@framework__T_WUIDScriptType.html","  Syntax: RPG.IsPublicEnemy(wuid) Returns if soul represented by wuid is public enemy. &#160;"],
["NotifyLevelXpGain","C_ScriptBindRPGModule__NotifyLevelXpGain@IFunctionHandler_@char__.html","  This is NotifyLevelXpGain, a member of class C_ScriptBindRPGModule.&#160;"],
["Release","C_ScriptBindRPGModule__Release.html","  This is Release, a member of class C_ScriptBindRPGModule.&#160;"],
["UnlockRecipe","C_ScriptBindRPGModule__UnlockRecipe@IFunctionHandler_@ScriptHandle@int@int.html","  Syntax: RPG.UnlockRecipeStep() Unlocks recipe step.&#160;"],
["C_ScriptBindSoul Class","C_ScriptBindSoul.html",""],
["AddXP","C_ScriptBindSoul__AddXP@IFunctionHandler__@char__@XP_T@bool.html","  &#160;"],
["GetSoulValue","C_ScriptBindSoul__GetSoulValue@IFunctionHandler__@char___const.html","  &#160;"],
["OverrideCharacterElement","C_ScriptBindSoul__OverrideCharacterElement@IFunctionHandler_@char_@entitymodule__T_CharacterElementId_S_CharacterBodyDescription___.html","  &#160;"],
["AddBuff","C_ScriptBindSoul__AddBuff@IFunctionHandler__@char__.html","  Syntax: soul:AddBuff(string buff_id) Adds buff identified by the database id. Returns the instance id. &#160;"],
["AddInjury","C_ScriptBindSoul__AddInjury@IFunctionHandler_@float@char_.html","  Syntax: soul:AddInjury(1, &#39;head&#39;) add [0,1] injury to a body part, bodyPartName from the database &#160;"],
["AddMetaRole","C_ScriptBindSoul__AddMetaRole@IFunctionHandler__@T_MetaRoleId.html","  Syntax: soul:AddMetaRole(id) Adds a metarole ids to this soul. &#160;"],
["AddMetaRoleByName","C_ScriptBindSoul__AddMetaRoleByName@IFunctionHandler__@char_const_.html","  Syntax: soul:AddMetaRoleByName(name) Adds a metarole by its name to this soul. &#160;"],
["AddPerk","C_ScriptBindSoul__AddPerk@IFunctionHandler__@char__.html","  Syntax: soul:AddPerk(string perk_id) Adds perk identified by the database id. Returns the instance id. &#160;"],
["AddSkillXP","C_ScriptBindSoul__AddSkillXP@IFunctionHandler__@char__@unsigned.html","  Syntax: soul:AddSkillXP(string skill, float xp) Adds experience points. Returns how many levels had been reached (0 if no level was reached).&#160;"],
["AddStatXP","C_ScriptBindSoul__AddStatXP@IFunctionHandler__@char__@unsigned.html","  Syntax: soul:AddStatXP(string stat, float xp) Adds experience points. Returns how many levels had been reached (0 if no level was reached).&#160;"],
["AdvanceToSkillLevel","C_ScriptBindSoul__AdvanceToSkillLevel@IFunctionHandler__@char__@T_SoulLvlValue.html","  Syntax: soul:AdvanceToSkillLevel(string skill, float level) Set skill level using string name (use skill_name from database). The function will perform correct transition (it will add XPs). Cannot lower the level.&#160;"],
["AdvanceToStatLevel","C_ScriptBindSoul__AdvanceToStatLevel@IFunctionHandler__@char__@T_SoulLvlValue.html","  Syntax: soul:AdvanceToStatLevel(string stat, float level) sets stat level, for example soul:AdvanceToStatLevel(&#39;str&#39;, 20), it will add xp. Cannot lower the level.&#160;"],
["AttachTo","C_ScriptBindSoul__AttachTo@IEntity__@C_Soul__.html","  This is AttachTo, a member of class C_ScriptBindSoul.&#160;"],
["CalculateBarterDominance","C_ScriptBindSoul__CalculateBarterDominance@IFunctionHandler__@framework__T_WUIDScriptType.html","  Syntax: customer:CalculateBarterDominance(shopkeeperSoulWuid) returns 1 if the soul has maximum dominance, -1 if the shopkeeper has maximum dominance &#160;"],
["DealDamage","C_ScriptBindSoul__DealDamage@IFunctionHandler__@float@float.html","  Syntax: soul:DealDamage(stamina, health, attackerId = invalid, suppressHitreaction = false, bodyPart = null) Causes the soul to loose given stamina and health. Negative values are accepted and treated as a heal. BodyParts are passed by name (from the database). &#160;"],
["DetachFrom","C_ScriptBindSoul__DetachFrom@IEntity__.html","  &#160;"],
["GenerateCompanionEventDebug","C_ScriptBindSoul__GenerateCompanionEventDebug@IFunctionHandler__.html","  Syntax: soul:GenerateCompanionEventDebug() sends a play event for the primary dog companion. Just for debug. &#160;"],
["GetArchetype","C_ScriptBindSoul__GetArchetype@IFunctionHandler__.html","  Syntax: soul:GetArchetype() Returns a table containing the archetype properties. &#160;"],
["GetDerivedStat","C_ScriptBindSoul__GetDerivedStat@IFunctionHandler__@char__.html","  Syntax: soul:GetDerivedStat(string stat, table context, table outUsedPerks) returns current value of a derived stat given by the shortcut name (cha, ...) &#160;"],
["GetFactionID","C_ScriptBindSoul__GetFactionID@IFunctionHandler__.html","  Syntax: soul:GetFactionID() Returns the ID of the faction that the soul belongs to. &#160;"],
["GetGatherMult","C_ScriptBindSoul__GetGatherMult@IFunctionHandler__.html","  Syntax: soul:GetGatherMult( ScriptHandle id) gets gather skill multiplier &#160;"],
["GetGender","C_ScriptBindSoul__GetGender@IFunctionHandler__.html","  Syntax: soul:GetGender() Returns soul gender.&#160;"],
["GetHobbies","C_ScriptBindSoul__GetHobbies@IFunctionHandler__.html","  Syntax: soul:GetHobbies() Returns a table containing all soul&#39;s hobbies. &#160;"],
["GetId","C_ScriptBindSoul__GetId@IFunctionHandler__.html","  Syntax: soul:GetId() Returns unique and persistent id of this soul (WUID). &#160;"],
["GetMemoryUsage","C_ScriptBindSoul__GetMemoryUsage@ICrySizer__@const.html","  This is GetMemoryUsage, a member of class C_ScriptBindSoul.&#160;"],
["GetMetaRoles","C_ScriptBindSoul__GetMetaRoles@IFunctionHandler__.html","  Syntax: soul:GetMetaRoles() Returns a table=array containing metarole ids. &#160;"],
["GetNameStringId","C_ScriptBindSoul__GetNameStringId@IFunctionHandler__.html","  Syntax: soul:GetNameString() returns value of name_string_id column from soul db table &#160;"],
["GetNextLevelSkillXP","C_ScriptBindSoul__GetNextLevelSkillXP@IFunctionHandler__@char_@unsigned.html","  Syntax: soul:GetNextLevelSkillXP(string skill, uint level) How many XP points is required for going from the level to level + 1. &#160;"],
["GetNextLevelStatXP","C_ScriptBindSoul__GetNextLevelStatXP@IFunctionHandler__@char_@unsigned.html","  Syntax: soul:GetNextLevelStatXP(string stat, uint level) How many XP points is required for going from the level to level + 1. &#160;"],
["GetPerceivedSuperfaction","C_ScriptBindSoul__GetPerceivedSuperfaction@IFunctionHandler_.html","  Syntax: soul:GetPerceivedSuperfaction() Returns the perceived super faction (calculated from all cloths) for this soul.&#160;"],
["GetReadCaptionObjectText","C_ScriptBindSoul__GetReadCaptionObjectText@IFunctionHandler__.html","  &#160;"],
["GetRelationship","C_ScriptBindSoul__GetRelationship@IFunctionHandler__@framework__T_WUIDScriptType.html","  Syntax: soul:GetRelationship(otherSoulId) returns the relationship between this and the other soul (-1 the worst enemies, 1 the best friends) Optional second argument selects the superfaction type for the other party. Can be Original, Current or Perceived.&#160;"],
["GetRoles","C_ScriptBindSoul__GetRoles@IFunctionHandler__.html","  Syntax: soul:GetRoles() Returns a table=array containing role ids. &#160;"],
["GetSchedule","C_ScriptBindSoul__GetSchedule@IFunctionHandler__.html","  Syntax: soul:GetSchedule() Returns a table containing float-encoded times indexed by activities. &#160;"],
["GetSkillLevel","C_ScriptBindSoul__GetSkillLevel@IFunctionHandler__@char__.html","  Syntax: soul:GetSkillLevel(string skill) Get skill value using string name (use skill_name from database). &#160;"],
["GetSkillProgress","C_ScriptBindSoul__GetSkillProgress@IFunctionHandler__@char__.html","  Syntax: soul:GetSkillProgress(string skill) Get skill progress from the current level to the next [0,1) using string name (use skill_name from database).&#160;"],
["GetSocialClass","C_ScriptBindSoul__GetSocialClass@IFunctionHandler__.html","  Syntax: soul:GetSocialClass() Returns social class as a table with Id, Name and Wealth keys.&#160;"],
["GetSoul","C_ScriptBindSoul__GetSoul@SmartScriptTable.html","  &#160;"],
["GetState","C_ScriptBindSoul__GetState@IFunctionHandler__@char__.html","  Syntax: soul:GetState(string state) returns state value for a given name (health, stamina,...)&#160;"],
["GetStatLevel","C_ScriptBindSoul__GetStatLevel@IFunctionHandler__@char__.html","  Syntax: soul:GetStatLevel(string stat) returns stat value for a given name (str, agi, spc, vit, hea, bar, ...)&#160;"],
["GetStatProgress","C_ScriptBindSoul__GetStatProgress@IFunctionHandler__@char__.html","  Syntax: soul:GetStatProgress(string stat) returns stat progress from the current level to the next level [0,1) for a given name (str, agi, spc, vit, hea, bar, ...)&#160;"],
["GetSuperfaction","C_ScriptBindSoul__GetSuperfaction@IFunctionHandler_.html","  Syntax: soul:GetSuperfaction() Returns the true super faction of soul. Optional second argument selects the superfaction type for the other party. Can be Original, Current or Perceived. &#160;"],
["HasAbility","C_ScriptBindSoul__HasAbility@IFunctionHandler__@char__.html","  Syntax: soul:HasAbility(string ability) returns true if soul have ability (cha, ...)&#160;"],
["HasBuffDebug","C_ScriptBindSoul__HasBuffDebug@IFunctionHandler__@char_.html","  Syntax: soul:HasBuffDebug(&quot;89dada87-6e6c-5d2c-a17a-483ada14b90b&quot;) supply buff definition id &#160;"],
["HasMetaRoleByName","C_ScriptBindSoul__HasMetaRoleByName@IFunctionHandler_@char_.html","  Syntax: soul:HasMetaRoleByName() Returns true if soul have specified role. Returns false if the soul doesn&#39;t have the specified meta role or the meta role doesn&#39;t exist. &#160;"],
["HasRoleByName","C_ScriptBindSoul__HasRoleByName@IFunctionHandler__@char_const_.html","  Syntax: soul:HasRoleByName(name) Returns true if soul have specified role. &#160;"],
["HaveSkill","C_ScriptBindSoul__HaveSkill@IFunctionHandler__@char__.html","  Syntax: soul:HaveSkill(string skill) Returns true if the soul can use this level. Parameter is name from the database. &#160;"],
["HealBleeding","C_ScriptBindSoul__HealBleeding@IFunctionHandler__@float@int.html","  Syntax: soul:HealBleeding(0.5, 1) heal [0,1] bleeding on body part &#160;"],
["IsDialogRestricted","C_ScriptBindSoul__IsDialogRestricted@IFunctionHandler__.html","  Syntax: soul:IsDialogRestricted() return whether dialog is currently restricted &#160;"],
["IsInCombatDanger","C_ScriptBindSoul__IsInCombatDanger@IFunctionHandler__.html","  Syntax: soul:IsInCombatDanger() returns 1 if the soul in in combat danger &#160;"],
["IsPublicEnemy","C_ScriptBindSoul__IsPublicEnemy@IFunctionHandler__.html","  &#160;"],
["ModifyMoraleDebug","C_ScriptBindSoul__ModifyMoraleDebug@IFunctionHandler__@int.html","  Syntax: soul:ModifyMoraleDebug(5) debug function to modify morale, given the database change id &#160;"],
["ModifyPlayerReputation","C_ScriptBindSoul__ModifyPlayerReputation@IFunctionHandler__@char__.html","  Syntax: soul:ModifyPlayerReputation(&#39;murder&#39;, true) Modify NPCs relationship (reputation) to player by the given name from the database. &#160;"],
["OnCompanionEvent","C_ScriptBindSoul__OnCompanionEvent@IFunctionHandler_@framework__T_WUIDScriptType@char_.html","  Syntax: soul:OnCompanionEvent(companion, &#39;EventName&#39;) sends an event. &#160;"],
["OnPerkUsed","C_ScriptBindSoul__OnPerkUsed@IFunctionHandler__@char__.html","  Syntax: soul:OnPerkUsed(&quot;89dada87-6e6c-5d2c-a17a-483ada14b90b&quot;) supply perk definition id &#160;"],
["OverrideHair","C_ScriptBindSoul__OverrideHair@IFunctionHandler_@char_.html","  Syntax: soul:OverrideHair(&quot;483ee159-9888-4955-ee19-e41d97637592&quot;) supply hair guid (character_hair). &#160;"],
["OverrideHead","C_ScriptBindSoul__OverrideHead@IFunctionHandler_@char_.html","  Syntax: soul:OverrideHead(&quot;4e653afe-1b23-db1e-74c8-350b21b958a8&quot;) supply head guid (character_head). &#160;"],
["Release","C_ScriptBindSoul__Release.html","  This is Release, a member of class C_ScriptBindSoul.&#160;"],
["RemoveAllBuffsByGuid","C_ScriptBindSoul__RemoveAllBuffsByGuid@IFunctionHandler__@char__.html","  Syntax: soul:RemoveAllBuffsByGuid(buffDatabaseId) Forces removal of all buffs of the same database guid.&#160;"],
["RemoveBuff","C_ScriptBindSoul__RemoveBuff@IFunctionHandler__@framework__T_WUIDScriptType.html","  Syntax: soul:RemoveBuff(buffInstanceId) Forces removal of a buff. Supply the buff instance id.&#160;"],
["RemoveMetaRole","C_ScriptBindSoul__RemoveMetaRole@IFunctionHandler__@T_MetaRoleId.html","  Syntax: soul:RemoveMetaRole(id) Removes a metarole from this soul. &#160;"],
["RemoveMetaRoleByName","C_ScriptBindSoul__RemoveMetaRoleByName@IFunctionHandler__@char_const_.html","  Syntax: soul:RemoveMetaRoleByName(metaroleName) Removes a metarole from this soul. &#160;"],
["RemovePerk","C_ScriptBindSoul__RemovePerk@IFunctionHandler__@char__.html","  Syntax: soul:RemovePerk(PerkInstanceId) Forces removal of a perk. Supply the perk id.&#160;"],
["RestrictDialog","C_ScriptBindSoul__RestrictDialog@IFunctionHandler__@bool.html","  Syntax: soul:RestrictDialog(true) set soul to dialog restricted mode so it cannot be speak to (hint will not be shown, and this functionality is implemented in lua, using IsDialogRestricted) Also deletes all unfinished requests &#160;"],
["SetPlayerReputationDebug","C_ScriptBindSoul__SetPlayerReputationDebug@IFunctionHandler__@float@int@bool.html","  Syntax: soul:SetPlayerReputationDebug(-0.5, 7, true) debug function to directly set reputation. Use the target flags from the database. &#160;"],
["SetSkillLevelDebug","C_ScriptBindSoul__SetSkillLevelDebug@IFunctionHandler__@char__@T_SoulLvlValue.html","  Syntax: soul:SetSkillLevelDebug(string skill, float level) Set skill level using string name (use skill_name from database).&#160;"],
["SetState","C_ScriptBindSoul__SetState@IFunctionHandler__@char__@float.html","  Syntax: soul:SetState(string state, float value) sets state value for a given name (health, stamina,...)&#160;"],
["SetStatLevelDebug","C_ScriptBindSoul__SetStatLevelDebug@IFunctionHandler__@char__@T_SoulLvlValue.html","  Syntax: soul:SetStatLevelDebug(string stat, float level) sets stat level, for example soul:SetStatLevelDebug(&#39;str&#39;, 20), sets strength to 20&#160;"],
["C_ScriptBindStatistics Class","C_ScriptBindStatistics.html",""],
["Increment","C_ScriptBindStatistics__Increment@IFunctionHandler__@char_@int.html","  Syntax: Statistics.Increment(statisticName, value); Increments a statistics counter by the value. &#160;"],
["Set","C_ScriptBindStatistics__Set@IFunctionHandler__@char_@int.html","  Syntax: Statistics.Set(statisticName, value); Sets a statistics counter to a specific value. &#160;"],
["C_ScriptBindShop Class","C_ScriptBindShop.html",""],
["AcceptTransaction","C_ScriptBindShop__AcceptTransaction@IFunctionHandler__@ScriptHandle@float.html","  &#160;"],
["AssignShopKeeper","C_ScriptBindShop__AssignShopKeeper@IFunctionHandler_@int@ScriptHandle.html","  Syntax: Shops.AssignShopKeeper(XX, ent) Assign soul of passed entity as shopkeeper to shop XX (db id).&#160;"],
["CancelTransaction","C_ScriptBindShop__CancelTransaction@IFunctionHandler__@ScriptHandle.html","  &#160;"],
["CloseShop","C_ScriptBindShop__CloseShop@IFunctionHandler__@int.html","  &#160;"],
["EnableRestockingOnOpen","C_ScriptBindShop__EnableRestockingOnOpen@IFunctionHandler__@int@bool.html","  &#160;"],
["FindItemInShop","C_ScriptBindShop__FindItemInShop@IFunctionHandler__@ScriptHandle.html","  Looks for item in owned shop and returns inventory slot for this item (or same one) &#160;"],
["FindShopInventoryForItem","C_ScriptBindShop__FindShopInventoryForItem@IFunctionHandler__@ScriptHandle.html","  Looks for shop&#39;s inventory id where this item belongs to &#160;"],
["GetBusinessHoursBegin","C_ScriptBindShop__GetBusinessHoursBegin@IFunctionHandler__@int.html","  returns float &#160;"],
["GetBusinessHoursEnd","C_ScriptBindShop__GetBusinessHoursEnd@IFunctionHandler__@int.html","  returns float &#160;"],
["GetShopDBIdByKeeper","C_ScriptBindShop__GetShopDBIdByKeeper@IFunctionHandler__@ScriptHandle.html","  returns shop DB Id. Returns -1 in case entity is not shopkeeper &#160;"],
["GetShopDBIdByLinkedEntityId","C_ScriptBindShop__GetShopDBIdByLinkedEntityId@IFunctionHandler__@ScriptHandle.html","  returns shop DB Id. Returns -1 in case entity is linked to no shop &#160;"],
["GetShopMoney","C_ScriptBindShop__GetShopMoney@IFunctionHandler__@ScriptHandle.html","  &#160;"],
["IsLinkedWithShop","C_ScriptBindShop__IsLinkedWithShop@IFunctionHandler__@ScriptHandle.html","  &#160;"],
["IsShopOpened","C_ScriptBindShop__IsShopOpened@IFunctionHandler__@int.html","  returns bool &#160;"],
["OnPropertyChange","C_ScriptBindShop__OnPropertyChange@IFunctionHandler__@int@ScriptHandle.html","  needed by editor &#160;"],
["OpenInventory","C_ScriptBindShop__OpenInventory@IFunctionHandler__@ScriptHandle@bool.html","  &#160;"],
["OpenInventoryForItem","C_ScriptBindShop__OpenInventoryForItem@IFunctionHandler__@framework__T_WUIDScriptType.html","  This is OpenInventoryForItem, a member of class C_ScriptBindShop.&#160;"],
["OpenShop","C_ScriptBindShop__OpenShop@IFunctionHandler__@int.html","  &#160;"],
["RestockShop","C_ScriptBindShop__RestockShop@IFunctionHandler__@int@bool.html","  &#160;"],
["SetShopModule","C_ScriptBindShop__SetShopModule@C_ShopModule_.html","  &#160;"],
["UnassignAllShopKeepersFromShop","C_ScriptBindShop__UnassignAllShopKeepersFromShop@IFunctionHandler_@int.html","  Syntax: Shops.UnassignAllShopKeepersFromShop(ShopId) Unassigns all shopkeepers from selected shop. Strongly discourage you from using that. Use rather Shops.UnassignShopKeeperFromShops script bind if it is possible. Assign soul of passed entity as shopkeeper to shop XX (db id).&#160;"],
["UnassignShopKeeperFromShops","C_ScriptBindShop__UnassignShopKeeperFromShops@IFunctionHandler_@ScriptHandle.html","  Syntax: Shops.UnassignShopKeeperFromShops(ent) Unassign given shop keeper entity from shop.&#160;"],
["C_ScriptBindSmartObject Class","C_ScriptBindSmartObject.html",""],
["AttachTo","C_ScriptBindSmartObject__AttachTo@C_SmartObject_.html","  &#160;"],
["GetHelperLinks","C_ScriptBindSmartObject__GetHelperLinks@IFunctionHandler__@char_const_.html","  &#160;"],
["GetHelperLinkTarget","C_ScriptBindSmartObject__GetHelperLinkTarget@IFunctionHandler__@char_const_@char_const_.html","  &#160;"],
["GetHelpers","C_ScriptBindSmartObject__GetHelpers@IFunctionHandler__.html","  Smart object helpers related methods &#160;"],
["GetHelpersCategory","C_ScriptBindSmartObject__GetHelpersCategory@IFunctionHandler__@char_const_.html","  &#160;"],
["GetHelperUserData","C_ScriptBindSmartObject__GetHelperUserData@IFunctionHandler__@char_const_@char_const_.html","  &#160;"],
["C_ScriptBindXGenAIModule Class","C_ScriptBindXGenAIModule.html",""],
["_GetDataVariable","C_ScriptBindXGenAIModule___GetDataVariable@IFunctionHandler_@char_const_.html","  Undocumented internal functions used in dataMetaTable &#160;"],
["_SetDataVariable","C_ScriptBindXGenAIModule___SetDataVariable@IFunctionHandler_@char_const_.html","  &#160;"],
["AddRecordedIntellectForFaderProfiling","C_ScriptBindXGenAIModule__AddRecordedIntellectForFaderProfiling@IFunctionHandler_@framework__T_WUIDScriptType.html","  Syntax: XGenAIModule.AddRecordedIntellectForFaderProfiling(wuid); Adds intellect of given object for replay tool recording during next fader profiling &#160;"],
["DespawnPerceptibleVolume","C_ScriptBindXGenAIModule__DespawnPerceptibleVolume@IFunctionHandler__@framework__T_WUIDScriptType.html","  Syntax: XGenAIModule.DespawnPerceptibleVolume(WUID pos, float rad, float height, float vis, float conspic, string label, string timer, bool isWorldTime); Despawns perceptible volume with given params. &#160;"],
["GetBrainVariable","C_ScriptBindXGenAIModule__GetBrainVariable@IFunctionHandler_@framework__T_WUIDScriptType@char_const_.html","  Syntax: XGenAIModule.GetBrainVariable(wuid, name); Returns brain variable &#39;name&#39;. &#160;"],
["GetCombatSimulatorHumanExperimentParams","C_ScriptBindXGenAIModule__GetCombatSimulatorHumanExperimentParams@IFunctionHandler_.html","  Syntax: XGenAIModule.GetCombatSimulatorHumanExperimentParams() Returns parameters for the currently running human experiment with combat simulator. &#160;"],
["GetEntityByWUID","C_ScriptBindXGenAIModule__GetEntityByWUID@IFunctionHandler__@framework__T_WUIDScriptType.html","  &#160;"],
["GetEntityIdByWUID","C_ScriptBindXGenAIModule__GetEntityIdByWUID@IFunctionHandler__@framework__T_WUIDScriptType.html","  &#160;"],
["GetMyWUID","C_ScriptBindXGenAIModule__GetMyWUID@IFunctionHandler__@SmartScriptTable.html","  Syntax: XGenAIModule.GetMyWUID(self) Retrieves the wuid of the entity based on its entity id, use with the self table only &#160;"],
["GetWuidDebugString","C_ScriptBindXGenAIModule__GetWuidDebugString@IFunctionHandler_@framework__T_WUIDScriptType.html","  Syntax: XGenAIModule.GetWuidDebugString(entity.this.id) Returns debug description of the wuid. &#160;"],
["IsPointInAreaWithLabel","C_ScriptBindXGenAIModule__IsPointInAreaWithLabel@IFunctionHandler__@Vec3@char__.html","  Syntax: XGenAIModule.IsPointInAreaWithLabel(Vec3 pos, string label); &#160;"],
["IsPointInAreaWithLabelWUID","C_ScriptBindXGenAIModule__IsPointInAreaWithLabelWUID@IFunctionHandler__@framework__T_WUIDScriptType@char__.html","  Syntax: XGenAIModule.IsPointInAreaWithLabel(WUID pos, string label); &#160;"],
["LootBegin","C_ScriptBindXGenAIModule__LootBegin@IFunctionHandler__@framework__T_WUIDScriptType.html","  Syntax: XGenAIModule.LootBegin(lootedWuid); Marks player as looting &#160;"],
["LootEnd","C_ScriptBindXGenAIModule__LootEnd@IFunctionHandler__@framework__T_WUIDScriptType.html","  Syntax: XGenAIModule.LootEnd(lootedWuid); Marks player as not looting &#160;"],
["LootInventoryBegin","C_ScriptBindXGenAIModule__LootInventoryBegin@IFunctionHandler__@framework__T_WUIDScriptType.html","  &#160;"],
["OnDestroy","C_ScriptBindXGenAIModule__OnDestroy@IFunctionHandler__@int.html","  needed by editor &#160;"],
["OnPropertyChange","C_ScriptBindXGenAIModule__OnPropertyChange@IFunctionHandler__@ScriptHandle.html","  needed by editor &#160;"],
["OnSpawn","C_ScriptBindXGenAIModule__OnSpawn@IFunctionHandler__@ScriptHandle@char_const_.html","  &#160;"],
["OnStart","C_ScriptBindXGenAIModule__OnStart@IFunctionHandler__@bool.html","  &#160;"],
["PlaceToSlotFromInventory","C_ScriptBindXGenAIModule__PlaceToSlotFromInventory@IFunctionHandler__@framework__T_WUIDScriptType@ScriptHandle.html","  Syntax: XGenAIModule.PlaceToSlotFromInventory( itemWuid, slotWuid ) Places given item to given slot. Guaranteed to work ONLY if the item is in inventory, and NOT in world &#160;"],
["ProduceSound","C_ScriptBindXGenAIModule__ProduceSound@IFunctionHandler_@int@Vec3@float.html","  Syntax: XGenAIModule.ProduceSound(sound_enum, pos, multiplier); Produces 0-1 multiplied sound at given position &#160;"],
["ProduceSoundWUID","C_ScriptBindXGenAIModule__ProduceSoundWUID@IFunctionHandler_@int@framework__T_WUIDScriptType@float.html","  Syntax: XGenAIModule.ProduceSoundWUID(sound_enum, wuid, multiplier); Produces 0-1 multiplied sound at given wuid &#160;"],
["RemoveDaycyclePatch","C_ScriptBindXGenAIModule__RemoveDaycyclePatch@IFunctionHandler_@framework__T_WUIDScriptType@char_.html","  Syntax: XGenAIModule.RemoveDaycyclePatch(Wuid wuid, string patchHandle) removes the patch with given handle from NPC with given WUID Returns true if the patch has been successfully removed, false otherwise (NPC with given wuid doesn&#39;t exist or it doesn&#39;t contain patch with specified handle) &#160;"],
["SaveCombatSimulatorHumanExperimentResult","C_ScriptBindXGenAIModule__SaveCombatSimulatorHumanExperimentResult@IFunctionHandler_@float@float.html","  Syntax: XGenAIModule.SaveCombatSimulatorHumanExperimentResult(playerHealth,opponentHealth) Saves the result of a human experiment. &#160;"],
["SendMessageToEntity","C_ScriptBindXGenAIModule__SendMessageToEntity@IFunctionHandler__@framework__T_WUIDScriptType@char_const_@char_const_.html","  &#160;"],
["SendMessageToEntityData","C_ScriptBindXGenAIModule__SendMessageToEntityData@IFunctionHandler__@framework__T_WUIDScriptType@char_const_@ScriptAnyValue.html","  &#160;"],
["SetBrainVariable","C_ScriptBindXGenAIModule__SetBrainVariable@IFunctionHandler_@framework__T_WUIDScriptType@char_const_.html","  Syntax: XGenAIModule.SetBrainVariable(wuid, name, data); Sets &#39;data&#39; in the brain variable &#39;name&#39;. &#160;"],
["SetModuleLink","C_ScriptBindXGenAIModule__SetModuleLink@C_XGenAIModule_.html","  &#160;"],
["SetPlayerDogMode","C_ScriptBindXGenAIModule__SetPlayerDogMode@IFunctionHandler__@char__.html","  Syntax: XGenAIModule.SetPlayerDogMode(set) Set given mode to the players companion. &#160;"],
["SpawnPerceptibleVolume","C_ScriptBindXGenAIModule__SpawnPerceptibleVolume@IFunctionHandler_@Vec3@float@float@float@float@char__@char__@bool@bool.html","  Syntax: XGenAIModule.SpawnPerceptibleVolume(Vec3 pos, float rad, float height, float vis, float conspic, string label, string timer, bool isWorldTime); Spawns perceptible volume with given params. If timer is empty string, infinite is used. &#160;"],
["SpawnPerceptibleVolumeOnWUID","C_ScriptBindXGenAIModule__SpawnPerceptibleVolumeOnWUID@IFunctionHandler_@framework__T_WUIDScriptType@float@float@float@float@char__@char__@bool@bool.html","  Syntax: XGenAIModule.SpawnPerceptibleVolume(WUID pos, float rad, float height, float vis, float conspic, string label, string timer, bool isWorldTime); Spawns perceptible volume with given params. If timer is empty string, infinite is used. &#160;"],
["TryEndCombat","C_ScriptBindXGenAIModule__TryEndCombat@IFunctionHandler_@framework__T_WUIDScriptType.html","  Syntax: XGenAIModule.TryEndCombat(entity.this.id) Tries to end combat mode. Returns true if the NPCs are already not in the combat mode. &#160;"],
["CScriptBindGame Class","CScriptBindGame.html",""],
["AddSaveLock","CScriptBindGame__AddSaveLock@IFunctionHandler__@char_@char_.html","  Syntax: Game.AddSaveLock( lockName, uiDescription ) Disable save&#160;"],
["AllowTutorials","CScriptBindGame__AllowTutorials@IFunctionHandler__.html","  Syntax: Game.AllowTutorials() Allow showing tutorials (eg. after dialogue, cut scene, video, etc.) &#160;"],
["BlockInfoText","CScriptBindGame__BlockInfoText@IFunctionHandler__@int.html","  Syntax: Game.BlockInfoText(category) Prevents InfoTexts with given category from being displayed to player. Categories are defined in db table infotext_category (everyone can add there) and are exported to lua as constants with prefix &quot;itc_&quot;.&#160;"],
["BlockTutorials","CScriptBindGame__BlockTutorials@IFunctionHandler__.html","  Syntax: Game.BlockTutorials() Block all tutorial messages except synced ones. &#160;"],
["CacheResource","CScriptBindGame__CacheResource@IFunctionHandler__@char_@char_@int@int.html","  &#160;"],
["CreatePrefab","CScriptBindGame__CreatePrefab@IFunctionHandler_@ScriptHandle@char_@char_@uint32.html","  Syntax: Game.CreatePrefab(self.id,props.filePrefabLibrary,props.ObjectVariation.sPrefabVariation,props.nMaxSpawn); Creates the runtime prefab in the same way as SpawnPrefab, but doesn&#39;t spawn the content of the prefab. Only creates the prefab and links to given entity id.&#160;"],
["CScriptBindGame::ShadowplayStartStop","CScriptBindGame__CScriptBindGame__ShadowplayStartStop@IFunctionHandler_.html","  Syntax: Game.ShadowplayStartStop() Sends [Alt] + [F9] to start/stop the Shadowplay capturing Only for Windows&#160;"],
["DEBUG_HideOverlayTutorial","CScriptBindGame__DEBUG_HideOverlayTutorial@IFunctionHandler__.html","  ! _RELEASE &#160;"],
["DebugDrawAABB","CScriptBindGame__DebugDrawAABB@IFunctionHandler__@float@float@float@float@float@float@int@int@int@int.html","  This is DebugDrawAABB, a member of class CScriptBindGame.&#160;"],
["DebugDrawCone","CScriptBindGame__DebugDrawCone@IFunctionHandler__@float@float@float@float@float@int@int@int@int.html","  This is DebugDrawCone, a member of class CScriptBindGame.&#160;"],
["DebugDrawCylinder","CScriptBindGame__DebugDrawCylinder@IFunctionHandler__@float@float@float@float@float@int@int@int@int.html","  Debug&#160;"],
["DebugDrawPersistanceDirection","CScriptBindGame__DebugDrawPersistanceDirection@IFunctionHandler__@float@float@float@float@float@float@int@int@int@float.html","  This is DebugDrawPersistanceDirection, a member of class CScriptBindGame.&#160;"],
["DebugDrawText","CScriptBindGame__DebugDrawText@IFunctionHandler__@float@float@float@char_@int@int@int@float.html","  Syntax: Game.DebugDrawText(float x, float y, float fontSize, const char* text, int r, int g, int b, float a) Draws texts on screen, needs to be called in OnUpdate function.&#160;"],
["DeletePrefab","CScriptBindGame__DeletePrefab@IFunctionHandler_@ScriptHandle.html","  &#160;"],
["HideInfoText","CScriptBindGame__HideInfoText@IFunctionHandler__.html","  Syntax: Game.HideInfoText() Hides info text sooner. &#160;"],
["HidePrefab","CScriptBindGame__HidePrefab@IFunctionHandler_@ScriptHandle@bool.html","  &#160;"],
["HideTutorial","CScriptBindGame__HideTutorial@IFunctionHandler__.html","  Syntax: Game.HideTutorial() Hide actually displayed tutorial message. &#160;"],
["InventoryModeOnlyCodex","CScriptBindGame__InventoryModeOnlyCodex@IFunctionHandler__@bool.html","  Syntax: Game.InventoryModeOnlyCodex( enable ) Do not allow player to switch to anything else than codex in player inventory. Other inventories (looting, shopping, ...) are not affected.&#160;"],
["IsDemo","CScriptBindGame__IsDemo@IFunctionHandler__.html","  if the code is compiled on a &quot;*Demo*&quot; configuration &#160;"],
["IsLoadingEngineSaveGame","CScriptBindGame__IsLoadingEngineSaveGame@IFunctionHandler_.html","  Syntax: local isLoading = Game.IsLoadingEngineSaveGame(); Determines whether a game save is being loaded (Cry Engine load only!!) &#160;"],
["IsPlayer","CScriptBindGame__IsPlayer@IFunctionHandler__@ScriptHandle.html","  Syntax: Game.IsPlayer() Checks if the given entity is player. &#160;"],
["KeybindsRebindInput","CScriptBindGame__KeybindsRebindInput@IFunctionHandler__@char_@char_@int@char_.html","  &#160;"],
["LoadPrefabLibrary","CScriptBindGame__LoadPrefabLibrary@IFunctionHandler_@char__.html","  &#160;"],
["LogGameEvent","CScriptBindGame__LogGameEvent@IFunctionHandler__@char__.html","  Syntax: Game.LogGameEvent(text) Localization will be done for you (if the message contains @...) &#160;"],
["MovePrefab","CScriptBindGame__MovePrefab@IFunctionHandler_@ScriptHandle.html","  &#160;"],
["PauseGame","CScriptBindGame__PauseGame@IFunctionHandler__@bool.html","  Syntax: Game.PauseGame( bool pause ) Pauses the game. &#160;"],
["QuickLoad","CScriptBindGame__QuickLoad@IFunctionHandler__.html","  ! Quick load&#160;"],
["QuickSave","CScriptBindGame__QuickSave@IFunctionHandler__.html","  ! Quick save&#160;"],
["RemoveSaveLock","CScriptBindGame__RemoveSaveLock@IFunctionHandler__@char_.html","  Syntax: Game.RemoveSaveLock( lockNamed ) Enable save&#160;"],
["ResetEntity","CScriptBindGame__ResetEntity@IFunctionHandler__@ScriptHandle.html","  This is ResetEntity, a member of class CScriptBindGame.&#160;"],
["SaveGameViaResting","CScriptBindGame__SaveGameViaResting@IFunctionHandler__.html","  Syntax: Game.SaveGameViaResting() Creates &#39;Auto&#39; save &#160;"],
["SendInfoText","CScriptBindGame__SendInfoText@IFunctionHandler__@char__.html","  Syntax: Game.SendInfoText(text, [force_clear_current_queue], [category], [time]) Shows info text. Does not need to be hidden (hides automaticaly). &#160;"],
["SetPrefabPhase","CScriptBindGame__SetPrefabPhase@IFunctionHandler_@ScriptHandle@char__@float.html","  &#160;"],
["SetPrefabPhaseById","CScriptBindGame__SetPrefabPhaseById@IFunctionHandler_@ScriptHandle@char__@int.html","  &#160;"],
["SetWantedLevel","CScriptBindGame__SetWantedLevel@IFunctionHandler__@int.html","  &#160;"],
["ShowCaptionObjectMessage","CScriptBindGame__ShowCaptionObjectMessage@IFunctionHandler__@char__.html","  &#160;"],
["ShowDiscoveryMessageDebug","CScriptBindGame__ShowDiscoveryMessageDebug@IFunctionHandler__@int@char_.html","  Syntax: Game.DiscoveryMessageDebug(type, uiName, iconId=-1, perkName=&quot;&quot;) type is 0=poi, 1=location, 2=codex &#160;"],
["ShowItemsTransfer","CScriptBindGame__ShowItemsTransfer@IFunctionHandler__@string@int.html","  Syntax: Game.ShowItemsTransfer() Displays UI message informing about item transfered into/from players inventory &#160;"],
["ShowNotification","CScriptBindGame__ShowNotification@IFunctionHandler__@char__.html","  &#160;"],
["ShowOverlayTutorial","CScriptBindGame__ShowOverlayTutorial@IFunctionHandler__@char__.html","  Syntax: Game.ShowOverlayTutorial(text) Show tutorial in overlay window, parameter is name of tutorial &#160;"],
["ShowStatCheckResult","CScriptBindGame__ShowStatCheckResult@IFunctionHandler__@int@bool.html","  Syntax: Game.ShowStatCheckResult(stat, result) Show something like &quot;Persuade: succeeded&quot;. Stat: shortcut name of stat (eg. &quot;spc&quot;), result: true=succeeded, false=failed. &#160;"],
["ShowTutorial","CScriptBindGame__ShowTutorial@IFunctionHandler__@char__.html","  Syntax: Game.ShowTutorial(text, timeout = 0, syncWithDialogue = false, forceTutorial = false) Shows tutorial message for set time. &#160;"],
["ShowTutorialWithCodex","CScriptBindGame__ShowTutorialWithCodex@IFunctionHandler__@char__@char__.html","  Syntax: Game.ShowTutorialWithCodex(text, codexPerkId, timeout = 0, syncWithDialogue = false, forceTutorial = false) Shows tutorial message for set time. &#160;"],
["SpawnPrefab","CScriptBindGame__SpawnPrefab@IFunctionHandler_@ScriptHandle@char__@char__@uint32@uint32.html","  &#160;"],
["StopTimeWarp","CScriptBindGame__StopTimeWarp@IFunctionHandler__.html","  Syntax: Actor.StopTimeWarp() Stops time warp effect &#160;"],
["UnblockInfoText","CScriptBindGame__UnblockInfoText@IFunctionHandler__@int.html","  Syntax: Game.UnblockInfoText(category) Reverts effect of Game.BlockInfoText(category). &#160;"],
["WarpTime","CScriptBindGame__WarpTime@IFunctionHandler__@float@float@float@float.html","  Time effects =============================================  Syntax: Actor.WarpTime(float wantedSpeed, float duration) Slowdown/speedup global time for given time period&#160;"],
["C_ScriptBindBindingTool Class","C_ScriptBindBindingTool.html",""],
["CheckValidity","C_ScriptBindBindingTool__CheckValidity@IFunctionHandler__.html","  Syntax: BindingTool.CheckValidity() Checks bindings validity in database for current level. &#160;"],
["C_ScriptBindEditor Class","C_ScriptBindEditor.html",""],
["GetSelectedEntityName","C_ScriptBindEditor__GetSelectedEntityName@IFunctionHandler__.html","  &#160;"],
];
